@use "pkg:@fontsource-utils/scss" as fontsource;
@use "pkg:@fontsource-variable/league-spartan/scss" as leagueSpartanVariabale;

@include fontsource.faces($metadata: leagueSpartanVariabale.$metadata, $weights: 400, $subsets: latin);

$font: "League Spartan Variable";

body {
  font-family: $font;
}

.hdr-check-result {
  font-variant: small-caps;

  &.success {
    font-weight: bold;
    font-size: large;
    font-style: italic;
    color: green;

    &::after {
      margin-left: 0.4rem;
      content: "✔";
      margin-right: 0.4rem;
      font-size: x-large;
    }
  }

  &.fail {
    font-weight: 200;
    font-size: small;
    color: red;

    &::after {
      margin-left: 0.4rem;
      content: "✘";
      margin-right: 0.8rem;
      font-size: x-large;
    }
  }
}

.canvas-renderer {
  width: 70%;
  border-radius: 1em;
  background-color: black;
}

.hdr-canvas-container {
  display: flex;
  justify-content: center;
  border-radius: 1rem;
  box-shadow: 0 0px 2px black;
  flex-direction: row;
  flex-wrap: wrap;
  align-items: center;

  @media (max-width: 35em) {
    flex-direction: column;
    gap: 2vwh;
    align-items: unset;
    max-width: 90vw;
  }

  .canvas-container {
    margin: 1rem;
    canvas {
      background: black;
      border-radius: 0.4rem;
    }
  }

  .slider-container {
    display: flex;
    flex-direction: row;
    gap: 0.8rem;
    border-radius: 0.6rem;
    padding: 0.8rem;
    margin: 1.4rem;
    width: fit-content;
    justify-content: center;
    border-radius: 0.6rem;

    @media (max-width: 35em) {
      gap: 0.4rem;
      padding: 0.4rem;
    }

    .channel-container {
      display: flex;
      flex-direction: column;
      align-items: center;
      flex-direction: column;
      text-align: center;

      .slider {
        writing-mode: vertical-lr;
        direction: rtl;
        width: 1rem;
        vertical-align: bottom;
      }

      label {
        min-width: 7.2rem;
      }
    }
  }
}
