(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function t(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=t(n);fetch(n.href,s)}})();function Lt(r,e){let t=r.length;Array.isArray(r[0])||(r=[r]),Array.isArray(e[0])||(e=e.map(o=>[o]));let i=e[0].length,n=e[0].map((o,a)=>e.map(l=>l[a])),s=r.map(o=>n.map(a=>{let l=0;if(!Array.isArray(o)){for(let c of a)l+=o*c;return l}for(let c=0;c<o.length;c++)l+=o[c]*(a[c]||0);return l}));return t===1&&(s=s[0]),i===1?s.map(o=>o[0]):s}function Uc(r){return dr(r)==="string"}function dr(r){return(Object.prototype.toString.call(r).match(/^\[object\s+(.*?)\]$/)[1]||"").toLowerCase()}function Eh(r,{precision:e,unit:t}){return gr(r)?"none":Dy(r,e)+(t??"")}function gr(r){return Number.isNaN(r)||r instanceof Number&&r?.none}function Kt(r){return gr(r)?0:r}function Dy(r,e){if(r===0)return 0;let t=~~r,i=0;t&&e&&(i=~~Math.log10(Math.abs(t))+1);const n=10**(e-i);return Math.floor(r*n+.5)/n}const XS={deg:1,grad:.9,rad:180/Math.PI,turn:360};function Ly(r){if(!r)return;r=r.trim();const e=/^([a-z]+)\((.+?)\)$/i,t=/^-?[\d.]+$/,i=/%|deg|g?rad|turn$/,n=/\/?\s*(none|[-\w.]+(?:%|deg|g?rad|turn)?)/g;let s=r.match(e);if(s){let o=[];return s[2].replace(n,(a,l)=>{let c=l.match(i),u=l;if(c){let h=c[0],d=u.slice(0,-h.length);h==="%"?(u=new Number(d/100),u.type="<percentage>"):(u=new Number(d*XS[h]),u.type="<angle>",u.unit=h)}else t.test(u)?(u=new Number(u),u.type="<number>"):u==="none"&&(u=new Number(NaN),u.none=!0);a.startsWith("/")&&(u=u instanceof Number?u:new Number(u),u.alpha=!0),typeof u=="object"&&u instanceof Number&&(u.raw=l),o.push(u)}),{name:s[1].toLowerCase(),rawName:s[1],rawArgs:s[2],args:o}}}function Iy(r){return r[r.length-1]}function rc(r,e,t){return isNaN(r)?e:isNaN(e)?r:r+(e-r)*t}function Fy(r,e,t){return(t-r)/(e-r)}function qp(r,e,t){return rc(e[0],e[1],Fy(r[0],r[1],t))}function Uy(r){return r.map(e=>e.split("|").map(t=>{t=t.trim();let i=t.match(/^(<[a-z]+>)\[(-?[.\d]+),\s*(-?[.\d]+)\]?$/);if(i){let n=new String(i[1]);return n.range=[+i[2],+i[3]],n}return t}))}function By(r,e,t){return Math.max(Math.min(t,e),r)}function $h(r,e){return Math.sign(r)===Math.sign(e)?r:-r}function ss(r,e){return $h(Math.abs(r)**e,r)}function Yp(r,e){return e===0?0:r/e}function Oy(r,e,t=0,i=r.length){for(;t<i;){const n=t+i>>1;r[n]<e?t=n+1:i=n}return t}var qS=Object.freeze({__proto__:null,bisectLeft:Oy,clamp:By,copySign:$h,interpolate:rc,interpolateInv:Fy,isNone:gr,isString:Uc,last:Iy,mapRange:qp,multiplyMatrices:Lt,parseCoordGrammar:Uy,parseFunction:Ly,serializeNumber:Eh,skipNone:Kt,spow:ss,toPrecision:Dy,type:dr,zdiv:Yp});class YS{add(e,t,i){if(typeof arguments[0]!="string"){for(var e in arguments[0])this.add(e,arguments[0][e],arguments[1]);return}(Array.isArray(e)?e:[e]).forEach(function(n){this[n]=this[n]||[],t&&this[n][i?"unshift":"push"](t)},this)}run(e,t){this[e]=this[e]||[],this[e].forEach(function(i){i.call(t&&t.context?t.context:t,t)})}}const _r=new YS;var xn={gamut_mapping:"css",precision:5,deltaE:"76",verbose:"production".toLowerCase()!=="test",warn:function(e){this.verbose&&globalThis?.console?.warn?.(e)}};const Bi={D50:[.3457/.3585,1,(1-.3457-.3585)/.3585],D65:[.3127/.329,1,(1-.3127-.329)/.329]};function fp(r){return Array.isArray(r)?r:Bi[r]}function Ah(r,e,t,i={}){if(r=fp(r),e=fp(e),!r||!e)throw new TypeError(`Missing white point to convert ${r?"":"from"}${!r&&!e?"/":""}${e?"":"to"}`);if(r===e)return t;let n={W1:r,W2:e,XYZ:t,options:i};if(_r.run("chromatic-adaptation-start",n),n.M||(n.W1===Bi.D65&&n.W2===Bi.D50?n.M=[[1.0479297925449969,.022946870601609652,-.05019226628920524],[.02962780877005599,.9904344267538799,-.017073799063418826],[-.009243040646204504,.015055191490298152,.7518742814281371]]:n.W1===Bi.D50&&n.W2===Bi.D65&&(n.M=[[.955473421488075,-.02309845494876471,.06325924320057072],[-.0283697093338637,1.0099953980813041,.021041441191917323],[.012314014864481998,-.020507649298898964,1.330365926242124]])),_r.run("chromatic-adaptation-end",n),n.M)return Lt(n.M,n.XYZ);throw new TypeError("Only Bradford CAT with white points D50 and D65 supported for now.")}const jS=new Set(["<number>","<percentage>","<angle>"]);function Ag(r,e,t,i){return Object.entries(r.coords).map(([s,o],a)=>{let l=e.coordGrammar[a],c=i[a],u=c?.type,h;if(c.none?h=l.find(p=>jS.has(p)):h=l.find(p=>p==u),!h){let p=o.name||s;throw new TypeError(`${u??c.raw} not allowed for ${p} in ${t}()`)}let d=h.range;u==="<percentage>"&&(d||=[0,1]);let f=o.range||o.refRange;return d&&f&&(i[a]=qp(d,f,i[a])),h})}function ky(r,{meta:e}={}){let t={str:String(r)?.trim()};if(_r.run("parse-start",t),t.color)return t.color;if(t.parsed=Ly(t.str),t.parsed){let i=t.parsed.name;if(i==="color"){let n=t.parsed.args.shift(),s=n.startsWith("--")?n.substring(2):`--${n}`,o=[n,s],a=t.parsed.rawArgs.indexOf("/")>0?t.parsed.args.pop():1;for(let u of ye.all){let h=u.getFormat("color");if(h&&(o.includes(h.id)||h.ids?.filter(d=>o.includes(d)).length)){const d=Object.keys(u.coords).map((p,_)=>t.parsed.args[_]||0);let f;return h.coordGrammar&&(f=Ag(u,h,"color",d)),e&&Object.assign(e,{formatId:"color",types:f}),h.id.startsWith("--")&&!n.startsWith("--")&&xn.warn(`${u.name} is a non-standard space and not currently supported in the CSS spec. Use prefixed color(${h.id}) instead of color(${n}).`),n.startsWith("--")&&!h.id.startsWith("--")&&xn.warn(`${u.name} is a standard space and supported in the CSS spec. Use color(${h.id}) instead of prefixed color(${n}).`),{spaceId:u.id,coords:d,alpha:a}}}let l="",c=n in ye.registry?n:s;if(c in ye.registry){let u=ye.registry[c].formats?.color?.id;u&&(l=`Did you mean color(${u})?`)}throw new TypeError(`Cannot parse color(${n}). `+(l||"Missing a plugin?"))}else for(let n of ye.all){let s=n.getFormat(i);if(s&&s.type==="function"){let o=1;(s.lastAlpha||Iy(t.parsed.args).alpha)&&(o=t.parsed.args.pop());let a=t.parsed.args,l;return s.coordGrammar&&(l=Ag(n,s,i,a)),e&&Object.assign(e,{formatId:s.name,types:l}),{spaceId:n.id,coords:a,alpha:o}}}}else for(let i of ye.all)for(let n in i.formats){let s=i.formats[n];if(s.type!=="custom"||s.test&&!s.test(t.str))continue;let o=s.parse(t.str);if(o)return o.alpha??=1,e&&(e.formatId=n),o}throw new TypeError(`Could not parse ${r} as a color. Missing a plugin?`)}function Ze(r){if(Array.isArray(r))return r.map(Ze);if(!r)throw new TypeError("Empty color reference");Uc(r)&&(r=ky(r));let e=r.space||r.spaceId;return e instanceof ye||(r.space=ye.get(e)),r.alpha===void 0&&(r.alpha=1),r}const KS=75e-6;class ye{constructor(e){this.id=e.id,this.name=e.name,this.base=e.base?ye.get(e.base):null,this.aliases=e.aliases,this.base&&(this.fromBase=e.fromBase,this.toBase=e.toBase);let t=e.coords??this.base.coords;for(let n in t)"name"in t[n]||(t[n].name=n);this.coords=t;let i=e.white??this.base.white??"D65";this.white=fp(i),this.formats=e.formats??{};for(let n in this.formats){let s=this.formats[n];s.type||="function",s.name||=n}this.formats.color?.id||(this.formats.color={...this.formats.color??{},id:e.cssId||this.id}),e.gamutSpace?this.gamutSpace=e.gamutSpace==="self"?this:ye.get(e.gamutSpace):this.isPolar?this.gamutSpace=this.base:this.gamutSpace=this,this.gamutSpace.isUnbounded&&(this.inGamut=(n,s)=>!0),this.referred=e.referred,Object.defineProperty(this,"path",{value:ZS(this).reverse(),writable:!1,enumerable:!0,configurable:!0}),_r.run("colorspace-init-end",this)}inGamut(e,{epsilon:t=KS}={}){if(!this.equals(this.gamutSpace))return e=this.to(this.gamutSpace,e),this.gamutSpace.inGamut(e,{epsilon:t});let i=Object.values(this.coords);return e.every((n,s)=>{let o=i[s];if(o.type!=="angle"&&o.range){if(Number.isNaN(n))return!0;let[a,l]=o.range;return(a===void 0||n>=a-t)&&(l===void 0||n<=l+t)}return!0})}get isUnbounded(){return Object.values(this.coords).every(e=>!("range"in e))}get cssId(){return this.formats?.color?.id||this.id}get isPolar(){for(let e in this.coords)if(this.coords[e].type==="angle")return!0;return!1}getFormat(e){if(typeof e=="object")return e=wg(e,this),e;let t;return e==="default"?t=Object.values(this.formats)[0]:t=this.formats[e],t?(t=wg(t,this),t):null}equals(e){return e?this===e||this.id===e||this.id===e.id:!1}to(e,t){if(arguments.length===1){const a=Ze(e);[e,t]=[a.space,a.coords]}if(e=ye.get(e),this.equals(e))return t;t=t.map(a=>Number.isNaN(a)?0:a);let i=this.path,n=e.path,s,o;for(let a=0;a<i.length&&i[a].equals(n[a]);a++)s=i[a],o=a;if(!s)throw new Error(`Cannot convert between color spaces ${this} and ${e}: no connection space was found`);for(let a=i.length-1;a>o;a--)t=i[a].toBase(t);for(let a=o+1;a<n.length;a++)t=n[a].fromBase(t);return t}from(e,t){if(arguments.length===1){const i=Ze(e);[e,t]=[i.space,i.coords]}return e=ye.get(e),e.to(this,t)}toString(){return`${this.name} (${this.id})`}getMinCoords(){let e=[];for(let t in this.coords){let i=this.coords[t],n=i.range||i.refRange;e.push(n?.min??0)}return e}static registry={};static get all(){return[...new Set(Object.values(ye.registry))]}static register(e,t){if(arguments.length===1&&(t=arguments[0],e=t.id),t=this.get(t),this.registry[e]&&this.registry[e]!==t)throw new Error(`Duplicate color space registration: '${e}'`);if(this.registry[e]=t,arguments.length===1&&t.aliases)for(let i of t.aliases)this.register(i,t);return t}static get(e,...t){if(!e||e instanceof ye)return e;if(dr(e)==="string"){let n=ye.registry[e.toLowerCase()];if(!n)throw new TypeError(`No color space found with id = "${e}"`);return n}if(t.length)return ye.get(...t);throw new TypeError(`${e} is not a valid color space`)}static resolveCoord(e,t){let i=dr(e),n,s;if(i==="string"?e.includes(".")?[n,s]=e.split("."):[n,s]=[,e]:Array.isArray(e)?[n,s]=e:(n=e.space,s=e.coordId),n=ye.get(n),n||(n=t),!n)throw new TypeError(`Cannot resolve coordinate reference ${e}: No color space specified and relative references are not allowed here`);if(i=dr(s),i==="number"||i==="string"&&s>=0){let l=Object.entries(n.coords)[s];if(l)return{space:n,id:l[0],index:s,...l[1]}}n=ye.get(n);let o=s.toLowerCase(),a=0;for(let l in n.coords){let c=n.coords[l];if(l.toLowerCase()===o||c.name?.toLowerCase()===o)return{space:n,id:l,index:a,...c};a++}throw new TypeError(`No "${s}" coordinate found in ${n.name}. Its coordinates are: ${Object.keys(n.coords).join(", ")}`)}static DEFAULT_FORMAT={type:"functions",name:"color"}}function ZS(r){let e=[r];for(let t=r;t=t.base;)e.push(t);return e}function wg(r,{coords:e}={}){if(r.coords&&!r.coordGrammar){r.type||="function",r.name||="color",r.coordGrammar=Uy(r.coords);let t=Object.entries(e).map(([i,n],s)=>{let o=r.coordGrammar[s][0],a=n.range||n.refRange,l=o.range,c="";return o=="<percentage>"?(l=[0,100],c="%"):o=="<angle>"&&(c="deg"),{fromRange:a,toRange:l,suffix:c}});r.serializeCoords=(i,n)=>i.map((s,o)=>{let{fromRange:a,toRange:l,suffix:c}=t[o];return a&&l&&(s=qp(a,l,s)),s=Eh(s,{precision:n,unit:c}),s})}return r}var xi=new ye({id:"xyz-d65",name:"XYZ D65",coords:{x:{name:"X"},y:{name:"Y"},z:{name:"Z"}},white:"D65",formats:{color:{ids:["xyz-d65","xyz"]}},aliases:["xyz"]});class Qi extends ye{constructor(e){e.coords||(e.coords={r:{range:[0,1],name:"Red"},g:{range:[0,1],name:"Green"},b:{range:[0,1],name:"Blue"}}),e.base||(e.base=xi),e.toXYZ_M&&e.fromXYZ_M&&(e.toBase??=t=>{let i=Lt(e.toXYZ_M,t);return this.white!==this.base.white&&(i=Ah(this.white,this.base.white,i)),i},e.fromBase??=t=>(t=Ah(this.base.white,this.white,t),Lt(e.fromXYZ_M,t))),e.referred??="display",super(e)}}function Bc(r,e){return r=Ze(r),!e||r.space.equals(e)?r.coords.slice():(e=ye.get(e),e.from(r))}function un(r,e){r=Ze(r);let{space:t,index:i}=ye.resolveCoord(e,r.space);return Bc(r,t)[i]}function jp(r,e,t){return r=Ze(r),e=ye.get(e),r.coords=e.to(r.space,t),r}jp.returns="color";function Vs(r,e,t){if(r=Ze(r),arguments.length===2&&dr(arguments[1])==="object"){let i=arguments[1];for(let n in i)Vs(r,n,i[n])}else{typeof t=="function"&&(t=t(un(r,e)));let{space:i,index:n}=ye.resolveCoord(e,r.space),s=Bc(r,i);s[n]=t,jp(r,i,s)}return r}Vs.returns="color";var Kp=new ye({id:"xyz-d50",name:"XYZ D50",white:"D50",base:xi,fromBase:r=>Ah(xi.white,"D50",r),toBase:r=>Ah("D50",xi.white,r)});const QS=216/24389,Rg=24/116,tu=24389/27;let _d=Bi.D50;var hn=new ye({id:"lab",name:"Lab",coords:{l:{refRange:[0,100],name:"Lightness"},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:_d,base:Kp,fromBase(r){let t=r.map((i,n)=>i/_d[n]).map(i=>i>QS?Math.cbrt(i):(tu*i+16)/116);return[116*t[1]-16,500*(t[0]-t[1]),200*(t[1]-t[2])]},toBase(r){let e=[];return e[1]=(r[0]+16)/116,e[0]=r[1]/500+e[1],e[2]=e[1]-r[2]/200,[e[0]>Rg?Math.pow(e[0],3):(116*e[0]-16)/tu,r[0]>8?Math.pow((r[0]+16)/116,3):r[0]/tu,e[2]>Rg?Math.pow(e[2],3):(116*e[2]-16)/tu].map((i,n)=>i*_d[n])},formats:{lab:{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});function fs(r){return(r%360+360)%360}function JS(r,e){if(r==="raw")return e;let[t,i]=e.map(fs),n=i-t;return r==="increasing"?n<0&&(i+=360):r==="decreasing"?n>0&&(t+=360):r==="longer"?-180<n&&n<180&&(n>0?t+=360:i+=360):r==="shorter"&&(n>180?t+=360:n<-180&&(i+=360)),[t,i]}var oc=new ye({id:"lch",name:"LCH",coords:{l:{refRange:[0,100],name:"Lightness"},c:{refRange:[0,150],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:hn,fromBase(r){let[e,t,i]=r,n;const s=.02;return Math.abs(t)<s&&Math.abs(i)<s?n=NaN:n=Math.atan2(i,t)*180/Math.PI,[e,Math.sqrt(t**2+i**2),fs(n)]},toBase(r){let[e,t,i]=r;return t<0&&(t=0),isNaN(i)&&(i=0),[e,t*Math.cos(i*Math.PI/180),t*Math.sin(i*Math.PI/180)]},formats:{lch:{coords:["<number> | <percentage>","<number> | <percentage>","<number> | <angle>"]}}});const Cg=25**7,wh=Math.PI,Ng=180/wh,To=wh/180;function Pg(r){const e=r*r;return e*e*e*r}function zy(r,e,{kL:t=1,kC:i=1,kH:n=1}={}){[r,e]=Ze([r,e]);let[s,o,a]=hn.from(r),l=oc.from(hn,[s,o,a])[1],[c,u,h]=hn.from(e),d=oc.from(hn,[c,u,h])[1];l<0&&(l=0),d<0&&(d=0);let f=(l+d)/2,p=Pg(f),_=.5*(1-Math.sqrt(p/(p+Cg))),g=(1+_)*o,m=(1+_)*u,b=Math.sqrt(g**2+a**2),y=Math.sqrt(m**2+h**2),x=g===0&&a===0?0:Math.atan2(a,g),S=m===0&&h===0?0:Math.atan2(h,m);x<0&&(x+=2*wh),S<0&&(S+=2*wh),x*=Ng,S*=Ng;let w=c-s,M=y-b,R=S-x,T=x+S,E=Math.abs(R),C;b*y===0?C=0:E<=180?C=R:R>180?C=R-360:R<-180?C=R+360:xn.warn("the unthinkable has happened");let k=2*Math.sqrt(y*b)*Math.sin(C*To/2),U=(s+c)/2,G=(b+y)/2,Y=Pg(G),W;b*y===0?W=T:E<=180?W=T/2:T<360?W=(T+360)/2:W=(T-360)/2;let Q=(U-50)**2,H=1+.015*Q/Math.sqrt(20+Q),ie=1+.045*G,ae=1;ae-=.17*Math.cos((W-30)*To),ae+=.24*Math.cos(2*W*To),ae+=.32*Math.cos((3*W+6)*To),ae-=.2*Math.cos((4*W-63)*To);let Te=1+.015*G*ae,$e=30*Math.exp(-1*((W-275)/25)**2),gt=2*Math.sqrt(Y/(Y+Cg)),_t=-1*Math.sin(2*$e*To)*gt,j=(w/(t*H))**2;return j+=(M/(i*ie))**2,j+=(k/(n*Te))**2,j+=_t*(M/(i*ie))*(k/(n*Te)),Math.sqrt(j)}const ev=[[.819022437996703,.3619062600528904,-.1288737815209879],[.0329836539323885,.9292868615863434,.0361446663506424],[.0481771893596242,.2642395317527308,.6335478284694309]],tv=[[1.2268798758459243,-.5578149944602171,.2813910456659647],[-.0405757452148008,1.112286803280317,-.0717110580655164],[-.0763729366746601,-.4214933324022432,1.5869240198367816]],iv=[[.210454268309314,.7936177747023054,-.0040720430116193],[1.9779985324311684,-2.42859224204858,.450593709617411],[.0259040424655478,.7827717124575296,-.8086757549230774]],nv=[[1,.3963377773761749,.2158037573099136],[1,-.1055613458156586,-.0638541728258133],[1,-.0894841775298119,-1.2914855480194092]];var ya=new ye({id:"oklab",name:"Oklab",coords:{l:{refRange:[0,1],name:"Lightness"},a:{refRange:[-.4,.4]},b:{refRange:[-.4,.4]}},white:"D65",base:xi,fromBase(r){let t=Lt(ev,r).map(i=>Math.cbrt(i));return Lt(iv,t)},toBase(r){let t=Lt(nv,r).map(i=>i**3);return Lt(tv,t)},formats:{oklab:{coords:["<percentage> | <number>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});function pp(r,e){[r,e]=Ze([r,e]);let[t,i,n]=ya.from(r),[s,o,a]=ya.from(e),l=t-s,c=i-o,u=n-a;return Math.sqrt(l**2+c**2+u**2)}const sv=75e-6;function to(r,e,{epsilon:t=sv}={}){r=Ze(r),e||(e=r.space),e=ye.get(e);let i=r.coords;return e!==r.space&&(i=e.from(r)),e.inGamut(i,{epsilon:t})}function ba(r){return{space:r.space,coords:r.coords.slice(),alpha:r.alpha}}function Gy(r,e,t="lab"){t=ye.get(t);let i=t.from(r),n=t.from(e);return Math.sqrt(i.reduce((s,o,a)=>{let l=n[a];return isNaN(o)||isNaN(l)?s:s+(l-o)**2},0))}function rv(r,e){return Gy(r,e,"lab")}const ov=Math.PI,Dg=ov/180;function av(r,e,{l:t=2,c:i=1}={}){[r,e]=Ze([r,e]);let[n,s,o]=hn.from(r),[,a,l]=oc.from(hn,[n,s,o]),[c,u,h]=hn.from(e),d=oc.from(hn,[c,u,h])[1];a<0&&(a=0),d<0&&(d=0);let f=n-c,p=a-d,_=s-u,g=o-h,m=_**2+g**2-p**2,b=.511;n>=16&&(b=.040975*n/(1+.01765*n));let y=.0638*a/(1+.0131*a)+.638,x;Number.isNaN(l)&&(l=0),l>=164&&l<=345?x=.56+Math.abs(.2*Math.cos((l+168)*Dg)):x=.36+Math.abs(.4*Math.cos((l+35)*Dg));let S=Math.pow(a,4),w=Math.sqrt(S/(S+1900)),M=y*(w*x+1-w),R=(f/(t*b))**2;return R+=(p/(i*y))**2,R+=m/M**2,Math.sqrt(R)}const Lg=203;var Zp=new ye({id:"xyz-abs-d65",cssId:"--xyz-abs-d65",name:"Absolute XYZ D65",coords:{x:{refRange:[0,9504.7],name:"Xa"},y:{refRange:[0,1e4],name:"Ya"},z:{refRange:[0,10888.3],name:"Za"}},base:xi,fromBase(r){return r.map(e=>Math.max(e*Lg,0))},toBase(r){return r.map(e=>Math.max(e/Lg,0))}});const iu=1.15,nu=.66,Ig=2610/2**14,lv=2**14/2610,Fg=3424/2**12,Ug=2413/2**7,Bg=2392/2**7,cv=1.7*2523/2**5,Og=2**5/(1.7*2523),su=-.56,xd=16295499532821565e-27,uv=[[.41478972,.579999,.014648],[-.20151,1.120649,.0531008],[-.0166008,.2648,.6684799]],hv=[[1.9242264357876067,-1.0047923125953657,.037651404030618],[.35031676209499907,.7264811939316552,-.06538442294808501],[-.09098281098284752,-.3127282905230739,1.5227665613052603]],dv=[[.5,.5,0],[3.524,-4.066708,.542708],[.199076,1.096799,-1.295875]],fv=[[1,.1386050432715393,.05804731615611886],[.9999999999999999,-.1386050432715393,-.05804731615611886],[.9999999999999998,-.09601924202631895,-.8118918960560388]];var Vy=new ye({id:"jzazbz",name:"Jzazbz",coords:{jz:{refRange:[0,1],name:"Jz"},az:{refRange:[-.5,.5]},bz:{refRange:[-.5,.5]}},base:Zp,fromBase(r){let[e,t,i]=r,n=iu*e-(iu-1)*i,s=nu*t-(nu-1)*e,a=Lt(uv,[n,s,i]).map(function(d){let f=Fg+Ug*(d/1e4)**Ig,p=1+Bg*(d/1e4)**Ig;return(f/p)**cv}),[l,c,u]=Lt(dv,a);return[(1+su)*l/(1+su*l)-xd,c,u]},toBase(r){let[e,t,i]=r,n=(e+xd)/(1+su-su*(e+xd)),o=Lt(fv,[n,t,i]).map(function(d){let f=Fg-d**Og,p=Bg*d**Og-Ug;return 1e4*(f/p)**lv}),[a,l,c]=Lt(hv,o),u=(a+(iu-1)*c)/iu,h=(l+(nu-1)*u)/nu;return[u,h,c]},formats:{color:{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),mp=new ye({id:"jzczhz",name:"JzCzHz",coords:{jz:{refRange:[0,1],name:"Jz"},cz:{refRange:[0,1],name:"Chroma"},hz:{refRange:[0,360],type:"angle",name:"Hue"}},base:Vy,fromBase(r){let[e,t,i]=r,n;const s=2e-4;return Math.abs(t)<s&&Math.abs(i)<s?n=NaN:n=Math.atan2(i,t)*180/Math.PI,[e,Math.sqrt(t**2+i**2),fs(n)]},toBase(r){return[r[0],r[1]*Math.cos(r[2]*Math.PI/180),r[1]*Math.sin(r[2]*Math.PI/180)]}});function pv(r,e){[r,e]=Ze([r,e]);let[t,i,n]=mp.from(r),[s,o,a]=mp.from(e),l=t-s,c=i-o;Number.isNaN(n)&&Number.isNaN(a)?(n=0,a=0):Number.isNaN(n)?n=a:Number.isNaN(a)&&(a=n);let u=n-a,h=2*Math.sqrt(i*o)*Math.sin(u/2*(Math.PI/180));return Math.sqrt(l**2+c**2+h**2)}const Hy=3424/4096,Wy=2413/128,$y=2392/128,kg=2610/16384,mv=2523/32,gv=16384/2610,zg=32/2523,_v=[[.3592832590121217,.6976051147779502,-.035891593232029],[-.1920808463704993,1.100476797037432,.0753748658519118],[.0070797844607479,.0748396662186362,.8433265453898765]],xv=[[2048/4096,2048/4096,0],[6610/4096,-13613/4096,7003/4096],[17933/4096,-17390/4096,-543/4096]],yv=[[.9999999999999998,.0086090370379328,.111029625003026],[.9999999999999998,-.0086090370379328,-.1110296250030259],[.9999999999999998,.5600313357106791,-.3206271749873188]],bv=[[2.0701522183894223,-1.3263473389671563,.2066510476294053],[.3647385209748072,.6805660249472273,-.0453045459220347],[-.0497472075358123,-.0492609666966131,1.1880659249923042]];var gp=new ye({id:"ictcp",name:"ICTCP",coords:{i:{refRange:[0,1],name:"I"},ct:{refRange:[-.5,.5],name:"CT"},cp:{refRange:[-.5,.5],name:"CP"}},base:Zp,fromBase(r){let e=Lt(_v,r);return Tv(e)},toBase(r){let e=Sv(r);return Lt(bv,e)}});function Tv(r){let e=r.map(function(t){let i=Hy+Wy*(t/1e4)**kg,n=1+$y*(t/1e4)**kg;return(i/n)**mv});return Lt(xv,e)}function Sv(r){return Lt(yv,r).map(function(i){let n=Math.max(i**zg-Hy,0),s=Wy-$y*i**zg;return 1e4*(n/s)**gv})}function vv(r,e){[r,e]=Ze([r,e]);let[t,i,n]=gp.from(r),[s,o,a]=gp.from(e);return 720*Math.sqrt((t-s)**2+.25*(i-o)**2+(n-a)**2)}const Mv=Bi.D65,Xy=.42,Gg=1/Xy,yd=2*Math.PI,qy=[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],Ev=[[1.8620678550872327,-1.0112546305316843,.14918677544445175],[.38752654323613717,.6214474419314753,-.008973985167612518],[-.015841498849333856,-.03412293802851557,1.0499644368778496]],Av=[[460,451,288],[460,-891,-261],[460,-220,-6300]],wv={dark:[.8,.525,.8],dim:[.9,.59,.9],average:[1,.69,1]},qr={h:[20.14,90,164.25,237.53,380.14],e:[.8,.7,1,1.2,.8],H:[0,100,200,300,400]},Rv=180/Math.PI,Vg=Math.PI/180;function Yy(r,e){return r.map(i=>{const n=ss(e*Math.abs(i)*.01,Xy);return 400*$h(n,i)/(n+27.13)})}function Cv(r,e){const t=100/e*27.13**Gg;return r.map(i=>{const n=Math.abs(i);return $h(t*ss(n/(400-n),Gg),i)})}function Nv(r){let e=fs(r);e<=qr.h[0]&&(e+=360);const t=Oy(qr.h,e)-1,[i,n]=qr.h.slice(t,t+2),[s,o]=qr.e.slice(t,t+2),a=qr.H[t],l=(e-i)/s;return a+100*l/(l+(n-e)/o)}function Pv(r){let e=(r%400+400)%400;const t=Math.floor(.01*e);e=e%100;const[i,n]=qr.h.slice(t,t+2),[s,o]=qr.e.slice(t,t+2);return fs((e*(o*i-s*n)-100*i*o)/(e*(o-s)-100*o))}function jy(r,e,t,i,n){const s={};s.discounting=n,s.refWhite=r,s.surround=i;const o=r.map(_=>_*100);s.la=e,s.yb=t;const a=o[1],l=Lt(qy,o);i=wv[s.surround];const c=i[0];s.c=i[1],s.nc=i[2];const h=(1/(5*s.la+1))**4;s.fl=h*s.la+.1*(1-h)*(1-h)*Math.cbrt(5*s.la),s.flRoot=s.fl**.25,s.n=s.yb/a,s.z=1.48+Math.sqrt(s.n),s.nbb=.725*s.n**-.2,s.ncb=s.nbb;const d=Math.max(Math.min(c*(1-1/3.6*Math.exp((-s.la-42)/92)),1),0);s.dRgb=l.map(_=>rc(1,a/_,d)),s.dRgbInv=s.dRgb.map(_=>1/_);const f=l.map((_,g)=>_*s.dRgb[g]),p=Yy(f,s.fl);return s.aW=s.nbb*(2*p[0]+p[1]+.05*p[2]),s}const Hg=jy(Mv,64/Math.PI*.2,20,"average",!1);function _p(r,e){if(!(r.J!==void 0^r.Q!==void 0))throw new Error("Conversion requires one and only one: 'J' or 'Q'");if(!(r.C!==void 0^r.M!==void 0^r.s!==void 0))throw new Error("Conversion requires one and only one: 'C', 'M' or 's'");if(!(r.h!==void 0^r.H!==void 0))throw new Error("Conversion requires one and only one: 'h' or 'H'");if(r.J===0||r.Q===0)return[0,0,0];let t=0;r.h!==void 0?t=fs(r.h)*Vg:t=Pv(r.H)*Vg;const i=Math.cos(t),n=Math.sin(t);let s=0;r.J!==void 0?s=ss(r.J,1/2)*.1:r.Q!==void 0&&(s=.25*e.c*r.Q/((e.aW+4)*e.flRoot));let o=0;r.C!==void 0?o=r.C/s:r.M!==void 0?o=r.M/e.flRoot/s:r.s!==void 0&&(o=4e-4*r.s**2*(e.aW+4)/e.c);const a=ss(o*Math.pow(1.64-Math.pow(.29,e.n),-.73),10/9),l=.25*(Math.cos(t+2)+3.8),c=e.aW*ss(s,2/e.c/e.z),u=5e4/13*e.nc*e.ncb*l,h=c/e.nbb,d=23*(h+.305)*Yp(a,23*u+a*(11*i+108*n)),f=d*i,p=d*n,_=Cv(Lt(Av,[h,f,p]).map(g=>g*1/1403),e.fl);return Lt(Ev,_.map((g,m)=>g*e.dRgbInv[m])).map(g=>g/100)}function Ky(r,e){const t=r.map(y=>y*100),i=Yy(Lt(qy,t).map((y,x)=>y*e.dRgb[x]),e.fl),n=i[0]+(-12*i[1]+i[2])/11,s=(i[0]+i[1]-2*i[2])/9,o=(Math.atan2(s,n)%yd+yd)%yd,a=.25*(Math.cos(o+2)+3.8),l=5e4/13*e.nc*e.ncb*Yp(a*Math.sqrt(n**2+s**2),i[0]+i[1]+1.05*i[2]+.305),c=ss(l,.9)*Math.pow(1.64-Math.pow(.29,e.n),.73),u=e.nbb*(2*i[0]+i[1]+.05*i[2]),h=ss(u/e.aW,.5*e.c*e.z),d=100*ss(h,2),f=4/e.c*h*(e.aW+4)*e.flRoot,p=c*h,_=p*e.flRoot,g=fs(o*Rv),m=Nv(g),b=50*ss(e.c*c/(e.aW+4),1/2);return{J:d,C:p,h:g,s:b,Q:f,M:_,H:m}}var Dv=new ye({id:"cam16-jmh",cssId:"--cam16-jmh",name:"CAM16-JMh",coords:{j:{refRange:[0,100],name:"J"},m:{refRange:[0,105],name:"Colorfulness"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:xi,fromBase(r){const e=Ky(r,Hg);return[e.J,e.M,e.h]},toBase(r){return _p({J:r[0],M:r[1],h:r[2]},Hg)}});const Lv=Bi.D65,Iv=216/24389,Zy=24389/27;function Fv(r){return 116*(r>Iv?Math.cbrt(r):(Zy*r+16)/116)-16}function xp(r){return r>8?Math.pow((r+16)/116,3):r/Zy}function Uv(r,e){let[t,i,n]=r,s=[],o=0;if(n===0)return[0,0,0];let a=xp(n);n>0?o=.00379058511492914*n**2+.608983189401032*n+.9155088574762233:o=9514440756550361e-21*n**2+.08693057439788597*n-21.928975842194614;const l=2e-12,c=15;let u=0,h=1/0;for(;u<=c;){s=_p({J:o,C:i,h:t},e);const d=Math.abs(s[1]-a);if(d<h){if(d<=l)return s;h=d}o=o-(s[1]-a)*o/(2*s[1]),u+=1}return _p({J:o,C:i,h:t},e)}function Bv(r,e){const t=Fv(r[1]);if(t===0)return[0,0,0];const i=Ky(r,Qp);return[fs(i.h),i.C,t]}const Qp=jy(Lv,200/Math.PI*xp(50),xp(50)*100,"average",!1);var ac=new ye({id:"hct",name:"HCT",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},c:{refRange:[0,145],name:"Colorfulness"},t:{refRange:[0,100],name:"Tone"}},base:xi,fromBase(r){return Bv(r)},toBase(r){return Uv(r,Qp)},formats:{color:{id:"--hct",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});const Ov=Math.PI/180,Wg=[1,.007,.0228];function $g(r){r[1]<0&&(r=ac.fromBase(ac.toBase(r)));const e=Math.log(Math.max(1+Wg[2]*r[1]*Qp.flRoot,1))/Wg[2],t=r[0]*Ov,i=e*Math.cos(t),n=e*Math.sin(t);return[r[2],i,n]}function kv(r,e){[r,e]=Ze([r,e]);let[t,i,n]=$g(ac.from(r)),[s,o,a]=$g(ac.from(e));return Math.sqrt((t-s)**2+(i-o)**2+(n-a)**2)}var Ta={deltaE76:rv,deltaECMC:av,deltaE2000:zy,deltaEJz:pv,deltaEITP:vv,deltaEOK:pp,deltaEHCT:kv};function zv(r){const e=r?Math.floor(Math.log10(Math.abs(r))):0;return Math.max(parseFloat(`1e${e-2}`),1e-6)}const Xg={hct:{method:"hct.c",jnd:2,deltaEMethod:"hct",blackWhiteClamp:{}},"hct-tonal":{method:"hct.c",jnd:0,deltaEMethod:"hct",blackWhiteClamp:{channel:"hct.t",min:0,max:100}}};function xr(r,{method:e=xn.gamut_mapping,space:t=void 0,deltaEMethod:i="",jnd:n=2,blackWhiteClamp:s={}}={}){if(r=Ze(r),Uc(arguments[1])?t=arguments[1]:t||(t=r.space),t=ye.get(t),to(r,t,{epsilon:0}))return r;let o;if(e==="css")o=Gv(r,{space:t});else{if(e!=="clip"&&!to(r,t)){Object.prototype.hasOwnProperty.call(Xg,e)&&({method:e,jnd:n,deltaEMethod:i,blackWhiteClamp:s}=Xg[e]);let a=zy;if(i!==""){for(let c in Ta)if("deltae"+i.toLowerCase()===c.toLowerCase()){a=Ta[c];break}}let l=xr(Dt(r,t),{method:"clip",space:t});if(a(r,l)>n){if(Object.keys(s).length===3){let b=ye.resolveCoord(s.channel),y=un(Dt(r,b.space),b.id);if(gr(y)&&(y=0),y>=s.max)return Dt({space:"xyz-d65",coords:Bi.D65},r.space);if(y<=s.min)return Dt({space:"xyz-d65",coords:[0,0,0]},r.space)}let c=ye.resolveCoord(e),u=c.space,h=c.id,d=Dt(r,u);d.coords.forEach((b,y)=>{gr(b)&&(d.coords[y]=0)});let p=(c.range||c.refRange)[0],_=zv(n),g=p,m=un(d,h);for(;m-g>_;){let b=ba(d);b=xr(b,{space:t,method:"clip"}),a(d,b)-n<_?g=un(d,h):m=un(d,h),Vs(d,h,(g+m)/2)}o=Dt(d,t)}else o=l}else o=Dt(r,t);if(e==="clip"||!to(o,t,{epsilon:0})){let a=Object.values(t.coords).map(l=>l.range||[]);o.coords=o.coords.map((l,c)=>{let[u,h]=a[c];return u!==void 0&&(l=Math.max(u,l)),h!==void 0&&(l=Math.min(l,h)),l})}}return t!==r.space&&(o=Dt(o,r.space)),r.coords=o.coords,r}xr.returns="color";const qg={WHITE:{space:ya,coords:[1,0,0]},BLACK:{space:ya,coords:[0,0,0]}};function Gv(r,{space:e}={}){r=Ze(r),e||(e=r.space),e=ye.get(e);const n=ye.get("oklch");if(e.isUnbounded)return Dt(r,e);const s=Dt(r,n);let o=s.coords[0];if(o>=1){const p=Dt(qg.WHITE,e);return p.alpha=r.alpha,Dt(p,e)}if(o<=0){const p=Dt(qg.BLACK,e);return p.alpha=r.alpha,Dt(p,e)}if(to(s,e,{epsilon:0}))return Dt(s,e);function a(p){const _=Dt(p,e),g=Object.values(e.coords);return _.coords=_.coords.map((m,b)=>{if("range"in g[b]){const[y,x]=g[b].range;return By(y,m,x)}return m}),_}let l=0,c=s.coords[1],u=!0,h=ba(s),d=a(h),f=pp(d,h);if(f<.02)return d;for(;c-l>1e-4;){const p=(l+c)/2;if(h.coords[1]=p,u&&to(h,e,{epsilon:0}))l=p;else if(d=a(h),f=pp(d,h),f<.02){if(.02-f<1e-4)break;u=!1,l=p}else c=p}return d}function Dt(r,e,{inGamut:t}={}){r=Ze(r),e=ye.get(e);let i=e.from(r),n={space:e,coords:i,alpha:r.alpha};return t&&(n=xr(n,t===!0?void 0:t)),n}Dt.returns="color";function jl(r,{precision:e=xn.precision,format:t="default",inGamut:i=!0,...n}={}){let s;r=Ze(r);let o=t;t=r.space.getFormat(t)??r.space.getFormat("default")??ye.DEFAULT_FORMAT;let a=r.coords.slice();if(i||=t.toGamut,i&&!to(r)&&(a=xr(ba(r),i===!0?void 0:i).coords),t.type==="custom")if(n.precision=e,t.serialize)s=t.serialize(a,r.alpha,n);else throw new TypeError(`format ${o} can only be used to parse colors, not for serialization`);else{let l=t.name||"color";t.serializeCoords?a=t.serializeCoords(a,e):e!==null&&(a=a.map(d=>Eh(d,{precision:e})));let c=[...a];if(l==="color"){let d=t.id||t.ids?.[0]||r.space.id;c.unshift(d)}let u=r.alpha;e!==null&&(u=Eh(u,{precision:e}));let h=r.alpha>=1||t.noAlpha?"":`${t.commas?",":" /"} ${u}`;s=`${l}(${c.join(t.commas?", ":" ")}${h})`}return s}const Vv=[[.6369580483012914,.14461690358620832,.1688809751641721],[.2627002120112671,.6779980715188708,.05930171646986196],[0,.028072693049087428,1.060985057710791]],Hv=[[1.716651187971268,-.355670783776392,-.25336628137366],[-.666684351832489,1.616481236634939,.0157685458139111],[.017639857445311,-.042770613257809,.942103121235474]];var Xh=new Qi({id:"rec2020-linear",cssId:"--rec2020-linear",name:"Linear REC.2020",white:"D65",toXYZ_M:Vv,fromXYZ_M:Hv});const ru=1.09929682680944,Yg=.018053968510807;var Qy=new Qi({id:"rec2020",name:"REC.2020",base:Xh,toBase(r){return r.map(function(e){return e<Yg*4.5?e/4.5:Math.pow((e+ru-1)/ru,1/.45)})},fromBase(r){return r.map(function(e){return e>=Yg?ru*Math.pow(e,.45)-(ru-1):4.5*e})}});const Wv=[[.4865709486482162,.26566769316909306,.1982172852343625],[.2289745640697488,.6917385218365064,.079286914093745],[0,.04511338185890264,1.043944368900976]],$v=[[2.493496911941425,-.9313836179191239,-.40271078445071684],[-.8294889695615747,1.7626640603183463,.023624685841943577],[.03584583024378447,-.07617238926804182,.9568845240076872]];var Jy=new Qi({id:"p3-linear",cssId:"--display-p3-linear",name:"Linear P3",white:"D65",toXYZ_M:Wv,fromXYZ_M:$v});const Xv=[[.41239079926595934,.357584339383878,.1804807884018343],[.21263900587151027,.715168678767756,.07219231536073371],[.01933081871559182,.11919477979462598,.9505321522496607]],ai=[[3.2409699419045226,-1.537383177570094,-.4986107602930034],[-.9692436362808796,1.8759675015077202,.04155505740717559],[.05563007969699366,-.20397695888897652,1.0569715142428786]];var eb=new Qi({id:"srgb-linear",name:"Linear sRGB",white:"D65",toXYZ_M:Xv,fromXYZ_M:ai}),jg={aliceblue:[240/255,248/255,1],antiquewhite:[250/255,235/255,215/255],aqua:[0,1,1],aquamarine:[127/255,1,212/255],azure:[240/255,1,1],beige:[245/255,245/255,220/255],bisque:[1,228/255,196/255],black:[0,0,0],blanchedalmond:[1,235/255,205/255],blue:[0,0,1],blueviolet:[138/255,43/255,226/255],brown:[165/255,42/255,42/255],burlywood:[222/255,184/255,135/255],cadetblue:[95/255,158/255,160/255],chartreuse:[127/255,1,0],chocolate:[210/255,105/255,30/255],coral:[1,127/255,80/255],cornflowerblue:[100/255,149/255,237/255],cornsilk:[1,248/255,220/255],crimson:[220/255,20/255,60/255],cyan:[0,1,1],darkblue:[0,0,139/255],darkcyan:[0,139/255,139/255],darkgoldenrod:[184/255,134/255,11/255],darkgray:[169/255,169/255,169/255],darkgreen:[0,100/255,0],darkgrey:[169/255,169/255,169/255],darkkhaki:[189/255,183/255,107/255],darkmagenta:[139/255,0,139/255],darkolivegreen:[85/255,107/255,47/255],darkorange:[1,140/255,0],darkorchid:[153/255,50/255,204/255],darkred:[139/255,0,0],darksalmon:[233/255,150/255,122/255],darkseagreen:[143/255,188/255,143/255],darkslateblue:[72/255,61/255,139/255],darkslategray:[47/255,79/255,79/255],darkslategrey:[47/255,79/255,79/255],darkturquoise:[0,206/255,209/255],darkviolet:[148/255,0,211/255],deeppink:[1,20/255,147/255],deepskyblue:[0,191/255,1],dimgray:[105/255,105/255,105/255],dimgrey:[105/255,105/255,105/255],dodgerblue:[30/255,144/255,1],firebrick:[178/255,34/255,34/255],floralwhite:[1,250/255,240/255],forestgreen:[34/255,139/255,34/255],fuchsia:[1,0,1],gainsboro:[220/255,220/255,220/255],ghostwhite:[248/255,248/255,1],gold:[1,215/255,0],goldenrod:[218/255,165/255,32/255],gray:[128/255,128/255,128/255],green:[0,128/255,0],greenyellow:[173/255,1,47/255],grey:[128/255,128/255,128/255],honeydew:[240/255,1,240/255],hotpink:[1,105/255,180/255],indianred:[205/255,92/255,92/255],indigo:[75/255,0,130/255],ivory:[1,1,240/255],khaki:[240/255,230/255,140/255],lavender:[230/255,230/255,250/255],lavenderblush:[1,240/255,245/255],lawngreen:[124/255,252/255,0],lemonchiffon:[1,250/255,205/255],lightblue:[173/255,216/255,230/255],lightcoral:[240/255,128/255,128/255],lightcyan:[224/255,1,1],lightgoldenrodyellow:[250/255,250/255,210/255],lightgray:[211/255,211/255,211/255],lightgreen:[144/255,238/255,144/255],lightgrey:[211/255,211/255,211/255],lightpink:[1,182/255,193/255],lightsalmon:[1,160/255,122/255],lightseagreen:[32/255,178/255,170/255],lightskyblue:[135/255,206/255,250/255],lightslategray:[119/255,136/255,153/255],lightslategrey:[119/255,136/255,153/255],lightsteelblue:[176/255,196/255,222/255],lightyellow:[1,1,224/255],lime:[0,1,0],limegreen:[50/255,205/255,50/255],linen:[250/255,240/255,230/255],magenta:[1,0,1],maroon:[128/255,0,0],mediumaquamarine:[102/255,205/255,170/255],mediumblue:[0,0,205/255],mediumorchid:[186/255,85/255,211/255],mediumpurple:[147/255,112/255,219/255],mediumseagreen:[60/255,179/255,113/255],mediumslateblue:[123/255,104/255,238/255],mediumspringgreen:[0,250/255,154/255],mediumturquoise:[72/255,209/255,204/255],mediumvioletred:[199/255,21/255,133/255],midnightblue:[25/255,25/255,112/255],mintcream:[245/255,1,250/255],mistyrose:[1,228/255,225/255],moccasin:[1,228/255,181/255],navajowhite:[1,222/255,173/255],navy:[0,0,128/255],oldlace:[253/255,245/255,230/255],olive:[128/255,128/255,0],olivedrab:[107/255,142/255,35/255],orange:[1,165/255,0],orangered:[1,69/255,0],orchid:[218/255,112/255,214/255],palegoldenrod:[238/255,232/255,170/255],palegreen:[152/255,251/255,152/255],paleturquoise:[175/255,238/255,238/255],palevioletred:[219/255,112/255,147/255],papayawhip:[1,239/255,213/255],peachpuff:[1,218/255,185/255],peru:[205/255,133/255,63/255],pink:[1,192/255,203/255],plum:[221/255,160/255,221/255],powderblue:[176/255,224/255,230/255],purple:[128/255,0,128/255],rebeccapurple:[102/255,51/255,153/255],red:[1,0,0],rosybrown:[188/255,143/255,143/255],royalblue:[65/255,105/255,225/255],saddlebrown:[139/255,69/255,19/255],salmon:[250/255,128/255,114/255],sandybrown:[244/255,164/255,96/255],seagreen:[46/255,139/255,87/255],seashell:[1,245/255,238/255],sienna:[160/255,82/255,45/255],silver:[192/255,192/255,192/255],skyblue:[135/255,206/255,235/255],slateblue:[106/255,90/255,205/255],slategray:[112/255,128/255,144/255],slategrey:[112/255,128/255,144/255],snow:[1,250/255,250/255],springgreen:[0,1,127/255],steelblue:[70/255,130/255,180/255],tan:[210/255,180/255,140/255],teal:[0,128/255,128/255],thistle:[216/255,191/255,216/255],tomato:[1,99/255,71/255],turquoise:[64/255,224/255,208/255],violet:[238/255,130/255,238/255],wheat:[245/255,222/255,179/255],white:[1,1,1],whitesmoke:[245/255,245/255,245/255],yellow:[1,1,0],yellowgreen:[154/255,205/255,50/255]};let Kg=Array(3).fill("<percentage> | <number>[0, 255]"),Zg=Array(3).fill("<number>[0, 255]");var Sa=new Qi({id:"srgb",name:"sRGB",base:eb,fromBase:r=>r.map(e=>{let t=e<0?-1:1,i=e*t;return i>.0031308?t*(1.055*i**(1/2.4)-.055):12.92*e}),toBase:r=>r.map(e=>{let t=e<0?-1:1,i=e*t;return i<=.04045?e/12.92:t*((i+.055)/1.055)**2.4}),formats:{rgb:{coords:Kg},rgb_number:{name:"rgb",commas:!0,coords:Zg,noAlpha:!0},color:{},rgba:{coords:Kg,commas:!0,lastAlpha:!0},rgba_number:{name:"rgba",commas:!0,coords:Zg},hex:{type:"custom",toGamut:!0,test:r=>/^#([a-f0-9]{3,4}){1,2}$/i.test(r),parse(r){r.length<=5&&(r=r.replace(/[a-f0-9]/gi,"$&$&"));let e=[];return r.replace(/[a-f0-9]{2}/gi,t=>{e.push(parseInt(t,16)/255)}),{spaceId:"srgb",coords:e.slice(0,3),alpha:e.slice(3)[0]}},serialize:(r,e,{collapse:t=!0}={})=>{e<1&&r.push(e),r=r.map(s=>Math.round(s*255));let i=t&&r.every(s=>s%17===0);return"#"+r.map(s=>i?(s/17).toString(16):s.toString(16).padStart(2,"0")).join("")}},keyword:{type:"custom",test:r=>/^[a-z]+$/i.test(r),parse(r){r=r.toLowerCase();let e={spaceId:"srgb",coords:null,alpha:1};if(r==="transparent"?(e.coords=jg.black,e.alpha=0):e.coords=jg[r],e.coords)return e}}}}),tb=new Qi({id:"p3",cssId:"display-p3",name:"P3",base:Jy,fromBase:Sa.fromBase,toBase:Sa.toBase});xn.display_space=Sa;let qv;if(typeof CSS<"u"&&CSS.supports)for(let r of[hn,Qy,tb]){let e=r.getMinCoords(),i=jl({space:r,coords:e,alpha:1});if(CSS.supports("color",i)){xn.display_space=r;break}}function Yv(r,{space:e=xn.display_space,...t}={}){let i=jl(r,t);if(typeof CSS>"u"||CSS.supports("color",i)||!xn.display_space)i=new String(i),i.color=r;else{let n=r;if((r.coords.some(gr)||gr(r.alpha))&&!(qv??=CSS.supports("color","hsl(none 50% 50%)"))&&(n=ba(r),n.coords=n.coords.map(Kt),n.alpha=Kt(n.alpha),i=jl(n,t),CSS.supports("color",i)))return i=new String(i),i.color=n,i;n=Dt(n,e),i=new String(jl(n,t)),i.color=n}return i}function jv(r,e){return r=Ze(r),e=Ze(e),r.space===e.space&&r.alpha===e.alpha&&r.coords.every((t,i)=>t===e.coords[i])}function yr(r){return un(r,[xi,"y"])}function ib(r,e){Vs(r,[xi,"y"],e)}function Kv(r){Object.defineProperty(r.prototype,"luminance",{get(){return yr(this)},set(e){ib(this,e)}})}var Zv=Object.freeze({__proto__:null,getLuminance:yr,register:Kv,setLuminance:ib});function Qv(r,e){r=Ze(r),e=Ze(e);let t=Math.max(yr(r),0),i=Math.max(yr(e),0);return i>t&&([t,i]=[i,t]),(t+.05)/(i+.05)}const Jv=.56,eM=.57,tM=.62,iM=.65,Qg=.022,nM=1.414,sM=.1,rM=5e-4,oM=1.14,Jg=.027,aM=1.14;function e0(r){return r>=Qg?r:r+(Qg-r)**nM}function So(r){let e=r<0?-1:1,t=Math.abs(r);return e*Math.pow(t,2.4)}function lM(r,e){e=Ze(e),r=Ze(r);let t,i,n,s,o,a;e=Dt(e,"srgb"),[s,o,a]=e.coords;let l=So(s)*.2126729+So(o)*.7151522+So(a)*.072175;r=Dt(r,"srgb"),[s,o,a]=r.coords;let c=So(s)*.2126729+So(o)*.7151522+So(a)*.072175,u=e0(l),h=e0(c),d=h>u;return Math.abs(h-u)<rM?i=0:d?(t=h**Jv-u**eM,i=t*oM):(t=h**iM-u**tM,i=t*aM),Math.abs(i)<sM?n=0:i>0?n=i-Jg:n=i+Jg,n*100}function cM(r,e){r=Ze(r),e=Ze(e);let t=Math.max(yr(r),0),i=Math.max(yr(e),0);i>t&&([t,i]=[i,t]);let n=t+i;return n===0?0:(t-i)/n}const uM=5e4;function hM(r,e){r=Ze(r),e=Ze(e);let t=Math.max(yr(r),0),i=Math.max(yr(e),0);return i>t&&([t,i]=[i,t]),i===0?uM:(t-i)/i}function dM(r,e){r=Ze(r),e=Ze(e);let t=un(r,[hn,"l"]),i=un(e,[hn,"l"]);return Math.abs(t-i)}const fM=216/24389,t0=24/116,ou=24389/27;let bd=Bi.D65;var yp=new ye({id:"lab-d65",name:"Lab D65",coords:{l:{refRange:[0,100],name:"Lightness"},a:{refRange:[-125,125]},b:{refRange:[-125,125]}},white:bd,base:xi,fromBase(r){let t=r.map((i,n)=>i/bd[n]).map(i=>i>fM?Math.cbrt(i):(ou*i+16)/116);return[116*t[1]-16,500*(t[0]-t[1]),200*(t[1]-t[2])]},toBase(r){let e=[];return e[1]=(r[0]+16)/116,e[0]=r[1]/500+e[1],e[2]=e[1]-r[2]/200,[e[0]>t0?Math.pow(e[0],3):(116*e[0]-16)/ou,r[0]>8?Math.pow((r[0]+16)/116,3):r[0]/ou,e[2]>t0?Math.pow(e[2],3):(116*e[2]-16)/ou].map((i,n)=>i*bd[n])},formats:{"lab-d65":{coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}});const Td=Math.pow(5,.5)*.5+.5;function pM(r,e){r=Ze(r),e=Ze(e);let t=un(r,[yp,"l"]),i=un(e,[yp,"l"]),n=Math.abs(Math.pow(t,Td)-Math.pow(i,Td)),s=Math.pow(n,1/Td)*Math.SQRT2-40;return s<7.5?0:s}var gh=Object.freeze({__proto__:null,contrastAPCA:lM,contrastDeltaPhi:pM,contrastLstar:dM,contrastMichelson:cM,contrastWCAG21:Qv,contrastWeber:hM});function mM(r,e,t={}){Uc(t)&&(t={algorithm:t});let{algorithm:i,...n}=t;if(!i){let s=Object.keys(gh).map(o=>o.replace(/^contrast/,"")).join(", ");throw new TypeError(`contrast() function needs a contrast algorithm. Please specify one of: ${s}`)}r=Ze(r),e=Ze(e);for(let s in gh)if("contrast"+i.toLowerCase()===s.toLowerCase())return gh[s](r,e,n);throw new TypeError(`Unknown contrast algorithm: ${i}`)}function qh(r){let[e,t,i]=Bc(r,xi),n=e+15*t+3*i;return[4*e/n,9*t/n]}function nb(r){let[e,t,i]=Bc(r,xi),n=e+t+i;return[e/n,t/n]}function gM(r){Object.defineProperty(r.prototype,"uv",{get(){return qh(this)}}),Object.defineProperty(r.prototype,"xy",{get(){return nb(this)}})}var _M=Object.freeze({__proto__:null,register:gM,uv:qh,xy:nb});function Hl(r,e,t={}){Uc(t)&&(t={method:t});let{method:i=xn.deltaE,...n}=t;for(let s in Ta)if("deltae"+i.toLowerCase()===s.toLowerCase())return Ta[s](r,e,n);throw new TypeError(`Unknown deltaE method: ${i}`)}function xM(r,e=.25){let i=[ye.get("oklch","lch"),"l"];return Vs(r,i,n=>n*(1+e))}function yM(r,e=.25){let i=[ye.get("oklch","lch"),"l"];return Vs(r,i,n=>n*(1-e))}var bM=Object.freeze({__proto__:null,darken:yM,lighten:xM});function sb(r,e,t=.5,i={}){return[r,e]=[Ze(r),Ze(e)],dr(t)==="object"&&([t,i]=[.5,t]),Oc(r,e,i)(t)}function rb(r,e,t={}){let i;Jp(r)&&([i,t]=[r,e],[r,e]=i.rangeArgs.colors);let{maxDeltaE:n,deltaEMethod:s,steps:o=2,maxSteps:a=1e3,...l}=t;i||([r,e]=[Ze(r),Ze(e)],i=Oc(r,e,l));let c=Hl(r,e),u=n>0?Math.max(o,Math.ceil(c/n)+1):o,h=[];if(a!==void 0&&(u=Math.min(u,a)),u===1)h=[{p:.5,color:i(.5)}];else{let d=1/(u-1);h=Array.from({length:u},(f,p)=>{let _=p*d;return{p:_,color:i(_)}})}if(n>0){let d=h.reduce((f,p,_)=>{if(_===0)return 0;let g=Hl(p.color,h[_-1].color,s);return Math.max(f,g)},0);for(;d>n;){d=0;for(let f=1;f<h.length&&h.length<a;f++){let p=h[f-1],_=h[f],g=(_.p+p.p)/2,m=i(g);d=Math.max(d,Hl(m,p.color),Hl(m,_.color)),h.splice(f,0,{p:g,color:i(g)}),f++}}}return h=h.map(d=>d.color),h}function Oc(r,e,t={}){if(Jp(r)){let[l,c]=[r,e];return Oc(...l.rangeArgs.colors,{...l.rangeArgs.options,...c})}let{space:i,outputSpace:n,progression:s,premultiplied:o}=t;r=Ze(r),e=Ze(e),r=ba(r),e=ba(e);let a={colors:[r,e],options:t};if(i?i=ye.get(i):i=ye.registry[xn.interpolationSpace]||r.space,n=n?ye.get(n):i,r=Dt(r,i),e=Dt(e,i),r=xr(r),e=xr(e),i.coords.h&&i.coords.h.type==="angle"){let l=t.hue=t.hue||"shorter",c=[i,"h"],[u,h]=[un(r,c),un(e,c)];isNaN(u)&&!isNaN(h)?u=h:isNaN(h)&&!isNaN(u)&&(h=u),[u,h]=JS(l,[u,h]),Vs(r,c,u),Vs(e,c,h)}return o&&(r.coords=r.coords.map(l=>l*r.alpha),e.coords=e.coords.map(l=>l*e.alpha)),Object.assign(l=>{l=s?s(l):l;let c=r.coords.map((d,f)=>{let p=e.coords[f];return rc(d,p,l)}),u=rc(r.alpha,e.alpha,l),h={space:i,coords:c,alpha:u};return o&&(h.coords=h.coords.map(d=>d/u)),n!==i&&(h=Dt(h,n)),h},{rangeArgs:a})}function Jp(r){return dr(r)==="function"&&!!r.rangeArgs}xn.interpolationSpace="lab";function TM(r){r.defineFunction("mix",sb,{returns:"color"}),r.defineFunction("range",Oc,{returns:"function<color>"}),r.defineFunction("steps",rb,{returns:"array<color>"})}var SM=Object.freeze({__proto__:null,isRange:Jp,mix:sb,range:Oc,register:TM,steps:rb}),ob=new ye({id:"hsl",name:"HSL",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:Sa,fromBase:r=>{let e=Math.max(...r),t=Math.min(...r),[i,n,s]=r,[o,a,l]=[NaN,0,(t+e)/2],c=e-t;if(c!==0){switch(a=l===0||l===1?0:(e-l)/Math.min(l,1-l),e){case i:o=(n-s)/c+(n<s?6:0);break;case n:o=(s-i)/c+2;break;case s:o=(i-n)/c+4}o=o*60}return a<0&&(o+=180,a=Math.abs(a)),o>=360&&(o-=360),[o,a*100,l*100]},toBase:r=>{let[e,t,i]=r;e=e%360,e<0&&(e+=360),t/=100,i/=100;function n(s){let o=(s+e/30)%12,a=t*Math.min(i,1-i);return i-a*Math.max(-1,Math.min(o-3,9-o,1))}return[n(0),n(8),n(4)]},formats:{hsl:{coords:["<number> | <angle>","<percentage>","<percentage>"]},hsla:{coords:["<number> | <angle>","<percentage>","<percentage>"],commas:!0,lastAlpha:!0}}}),ab=new ye({id:"hsv",name:"HSV",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},v:{range:[0,100],name:"Value"}},base:ob,fromBase(r){let[e,t,i]=r;t/=100,i/=100;let n=i+t*Math.min(i,1-i);return[e,n===0?0:200*(1-i/n),100*n]},toBase(r){let[e,t,i]=r;t/=100,i/=100;let n=i*(1-t/2);return[e,n===0||n===1?0:(i-n)/Math.min(n,1-n)*100,n*100]},formats:{color:{id:"--hsv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}}),vM=new ye({id:"hwb",name:"HWB",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},w:{range:[0,100],name:"Whiteness"},b:{range:[0,100],name:"Blackness"}},base:ab,fromBase(r){let[e,t,i]=r;return[e,i*(100-t)/100,100-i]},toBase(r){let[e,t,i]=r;t/=100,i/=100;let n=t+i;if(n>=1){let a=t/n;return[e,0,a*100]}let s=1-i,o=s===0?0:1-t/s;return[e,o*100,s*100]},formats:{hwb:{coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});const MM=[[.5766690429101305,.1855582379065463,.1882286462349947],[.29734497525053605,.6273635662554661,.07529145849399788],[.02703136138641234,.07068885253582723,.9913375368376388]],EM=[[2.0415879038107465,-.5650069742788596,-.34473135077832956],[-.9692436362808795,1.8759675015077202,.04155505740717557],[.013444280632031142,-.11836239223101838,1.0151749943912054]];var lb=new Qi({id:"a98rgb-linear",cssId:"--a98-rgb-linear",name:"Linear Adobe® 98 RGB compatible",white:"D65",toXYZ_M:MM,fromXYZ_M:EM}),AM=new Qi({id:"a98rgb",cssId:"a98-rgb",name:"Adobe® 98 RGB compatible",base:lb,toBase:r=>r.map(e=>Math.pow(Math.abs(e),563/256)*Math.sign(e)),fromBase:r=>r.map(e=>Math.pow(Math.abs(e),256/563)*Math.sign(e))});const wM=[[.7977666449006423,.13518129740053308,.0313477341283922],[.2880748288194013,.711835234241873,8993693872564e-17],[0,0,.8251046025104602]],RM=[[1.3457868816471583,-.25557208737979464,-.05110186497554526],[-.5446307051249019,1.5082477428451468,.02052744743642139],[0,0,1.2119675456389452]];var cb=new Qi({id:"prophoto-linear",cssId:"--prophoto-rgb-linear",name:"Linear ProPhoto",white:"D50",base:Kp,toXYZ_M:wM,fromXYZ_M:RM});const CM=1/512,NM=16/512;var PM=new Qi({id:"prophoto",cssId:"prophoto-rgb",name:"ProPhoto",base:cb,toBase(r){return r.map(e=>e<NM?e/16:e**1.8)},fromBase(r){return r.map(e=>e>=CM?e**(1/1.8):16*e)}}),DM=new ye({id:"oklch",name:"Oklch",coords:{l:{refRange:[0,1],name:"Lightness"},c:{refRange:[0,.4],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},white:"D65",base:ya,fromBase(r){let[e,t,i]=r,n;const s=2e-4;return Math.abs(t)<s&&Math.abs(i)<s?n=NaN:n=Math.atan2(i,t)*180/Math.PI,[e,Math.sqrt(t**2+i**2),fs(n)]},toBase(r){let[e,t,i]=r,n,s;return isNaN(i)?(n=0,s=0):(n=t*Math.cos(i*Math.PI/180),s=t*Math.sin(i*Math.PI/180)),[e,n,s]},formats:{oklch:{coords:["<percentage> | <number>","<number> | <percentage>[0,1]","<number> | <angle>"]}}});let ub=Bi.D65;const LM=216/24389,i0=24389/27,[n0,s0]=qh({space:xi,coords:ub});var hb=new ye({id:"luv",name:"Luv",coords:{l:{refRange:[0,100],name:"Lightness"},u:{refRange:[-215,215]},v:{refRange:[-215,215]}},white:ub,base:xi,fromBase(r){let e=[Kt(r[0]),Kt(r[1]),Kt(r[2])],t=e[1],[i,n]=qh({space:xi,coords:e});if(!Number.isFinite(i)||!Number.isFinite(n))return[0,0,0];let s=t<=LM?i0*t:116*Math.cbrt(t)-16;return[s,13*s*(i-n0),13*s*(n-s0)]},toBase(r){let[e,t,i]=r;if(e===0||gr(e))return[0,0,0];t=Kt(t),i=Kt(i);let n=t/(13*e)+n0,s=i/(13*e)+s0,o=e<=8?e/i0:Math.pow((e+16)/116,3);return[o*(9*n/(4*s)),o,o*((12-3*n-20*s)/(4*s))]},formats:{color:{id:"--luv",coords:["<number> | <percentage>","<number> | <percentage>[-1,1]","<number> | <percentage>[-1,1]"]}}}),em=new ye({id:"lchuv",name:"LChuv",coords:{l:{refRange:[0,100],name:"Lightness"},c:{refRange:[0,220],name:"Chroma"},h:{refRange:[0,360],type:"angle",name:"Hue"}},base:hb,fromBase(r){let[e,t,i]=r,n;const s=.02;return Math.abs(t)<s&&Math.abs(i)<s?n=NaN:n=Math.atan2(i,t)*180/Math.PI,[e,Math.sqrt(t**2+i**2),fs(n)]},toBase(r){let[e,t,i]=r;return t<0&&(t=0),isNaN(i)&&(i=0),[e,t*Math.cos(i*Math.PI/180),t*Math.sin(i*Math.PI/180)]},formats:{color:{id:"--lchuv",coords:["<number> | <percentage>","<number> | <percentage>","<number> | <angle>"]}}});const IM=216/24389,FM=24389/27,r0=ai[0][0],o0=ai[0][1],Sd=ai[0][2],a0=ai[1][0],l0=ai[1][1],vd=ai[1][2],c0=ai[2][0],u0=ai[2][1],Md=ai[2][2];function vo(r,e,t){const i=e/(Math.sin(t)-r*Math.cos(t));return i<0?1/0:i}function Rh(r){const e=Math.pow(r+16,3)/1560896,t=e>IM?e:r/FM,i=t*(284517*r0-94839*Sd),n=t*(838422*Sd+769860*o0+731718*r0),s=t*(632260*Sd-126452*o0),o=t*(284517*a0-94839*vd),a=t*(838422*vd+769860*l0+731718*a0),l=t*(632260*vd-126452*l0),c=t*(284517*c0-94839*Md),u=t*(838422*Md+769860*u0+731718*c0),h=t*(632260*Md-126452*u0);return{r0s:i/s,r0i:n*r/s,r1s:i/(s+126452),r1i:(n-769860)*r/(s+126452),g0s:o/l,g0i:a*r/l,g1s:o/(l+126452),g1i:(a-769860)*r/(l+126452),b0s:c/h,b0i:u*r/h,b1s:c/(h+126452),b1i:(u-769860)*r/(h+126452)}}function h0(r,e){const t=e/360*Math.PI*2,i=vo(r.r0s,r.r0i,t),n=vo(r.r1s,r.r1i,t),s=vo(r.g0s,r.g0i,t),o=vo(r.g1s,r.g1i,t),a=vo(r.b0s,r.b0i,t),l=vo(r.b1s,r.b1i,t);return Math.min(i,n,s,o,a,l)}var UM=new ye({id:"hsluv",name:"HSLuv",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:em,gamutSpace:Sa,fromBase(r){let[e,t,i]=[Kt(r[0]),Kt(r[1]),Kt(r[2])],n;if(e>99.9999999)n=0,e=100;else if(e<1e-8)n=0,e=0;else{let s=Rh(e),o=h0(s,i);n=t/o*100}return[i,n,e]},toBase(r){let[e,t,i]=[Kt(r[0]),Kt(r[1]),Kt(r[2])],n;if(i>99.9999999)i=100,n=0;else if(i<1e-8)i=0,n=0;else{let s=Rh(i);n=h0(s,e)/100*t}return[i,n,e]},formats:{color:{id:"--hsluv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});ai[0][0];ai[0][1];ai[0][2];ai[1][0];ai[1][1];ai[1][2];ai[2][0];ai[2][1];ai[2][2];function Mo(r,e){return Math.abs(e)/Math.sqrt(Math.pow(r,2)+1)}function d0(r){let e=Mo(r.r0s,r.r0i),t=Mo(r.r1s,r.r1i),i=Mo(r.g0s,r.g0i),n=Mo(r.g1s,r.g1i),s=Mo(r.b0s,r.b0i),o=Mo(r.b1s,r.b1i);return Math.min(e,t,i,n,s,o)}var BM=new ye({id:"hpluv",name:"HPLuv",coords:{h:{refRange:[0,360],type:"angle",name:"Hue"},s:{range:[0,100],name:"Saturation"},l:{range:[0,100],name:"Lightness"}},base:em,gamutSpace:"self",fromBase(r){let[e,t,i]=[Kt(r[0]),Kt(r[1]),Kt(r[2])],n;if(e>99.9999999)n=0,e=100;else if(e<1e-8)n=0,e=0;else{let s=Rh(e),o=d0(s);n=t/o*100}return[i,n,e]},toBase(r){let[e,t,i]=[Kt(r[0]),Kt(r[1]),Kt(r[2])],n;if(i>99.9999999)i=100,n=0;else if(i<1e-8)i=0,n=0;else{let s=Rh(i);n=d0(s)/100*t}return[i,n,e]},formats:{color:{id:"--hpluv",coords:["<number> | <angle>","<percentage> | <number>","<percentage> | <number>"]}}});const f0=203,p0=2610/2**14,OM=2**14/2610,kM=2523/2**5,m0=2**5/2523,g0=3424/2**12,_0=2413/2**7,x0=2392/2**7;var zM=new Qi({id:"rec2100pq",cssId:"rec2100-pq",name:"REC.2100-PQ",base:Xh,toBase(r){return r.map(function(e){return(Math.max(e**m0-g0,0)/(_0-x0*e**m0))**OM*1e4/f0})},fromBase(r){return r.map(function(e){let t=Math.max(e*f0/1e4,0),i=g0+_0*t**p0,n=1+x0*t**p0;return(i/n)**kM})}});const y0=.17883277,b0=.28466892,T0=.55991073,Ed=3.7743;var GM=new Qi({id:"rec2100hlg",cssId:"rec2100-hlg",name:"REC.2100-HLG",referred:"scene",base:Xh,toBase(r){return r.map(function(e){return e<=.5?e**2/3*Ed:(Math.exp((e-T0)/y0)+b0)/12*Ed})},fromBase(r){return r.map(function(e){return e/=Ed,e<=1/12?Math.sqrt(3*e):y0*Math.log(12*e-b0)+T0})}});const db={};_r.add("chromatic-adaptation-start",r=>{r.options.method&&(r.M=fb(r.W1,r.W2,r.options.method))});_r.add("chromatic-adaptation-end",r=>{r.M||(r.M=fb(r.W1,r.W2,r.options.method))});function Yh({id:r,toCone_M:e,fromCone_M:t}){db[r]=arguments[0]}function fb(r,e,t="Bradford"){let i=db[t],[n,s,o]=Lt(i.toCone_M,r),[a,l,c]=Lt(i.toCone_M,e),u=[[a/n,0,0],[0,l/s,0],[0,0,c/o]],h=Lt(u,i.toCone_M);return Lt(i.fromCone_M,h)}Yh({id:"von Kries",toCone_M:[[.40024,.7076,-.08081],[-.2263,1.16532,.0457],[0,0,.91822]],fromCone_M:[[1.8599363874558397,-1.1293816185800916,.21989740959619328],[.3611914362417676,.6388124632850422,-6370596838649899e-21],[0,0,1.0890636230968613]]});Yh({id:"Bradford",toCone_M:[[.8951,.2664,-.1614],[-.7502,1.7135,.0367],[.0389,-.0685,1.0296]],fromCone_M:[[.9869929054667121,-.14705425642099013,.15996265166373122],[.4323052697233945,.5183602715367774,.049291228212855594],[-.00852866457517732,.04004282165408486,.96848669578755]]});Yh({id:"CAT02",toCone_M:[[.7328,.4296,-.1624],[-.7036,1.6975,.0061],[.003,.0136,.9834]],fromCone_M:[[1.0961238208355142,-.27886900021828726,.18274517938277307],[.4543690419753592,.4735331543074117,.07209780371722911],[-.009627608738429355,-.00569803121611342,1.0153256399545427]]});Yh({id:"CAT16",toCone_M:[[.401288,.650173,-.051461],[-.250268,1.204414,.045854],[-.002079,.048952,.953127]],fromCone_M:[[1.862067855087233,-1.0112546305316845,.14918677544445172],[.3875265432361372,.6214474419314753,-.008973985167612521],[-.01584149884933386,-.03412293802851557,1.0499644368778496]]});Object.assign(Bi,{A:[1.0985,1,.35585],C:[.98074,1,1.18232],D55:[.95682,1,.92149],D75:[.94972,1,1.22638],E:[1,1,1],F2:[.99186,1,.67393],F7:[.95041,1,1.08747],F11:[1.00962,1,.6435]});Bi.ACES=[.32168/.33767,1,(1-.32168-.33767)/.33767];const VM=[[.6624541811085053,.13400420645643313,.1561876870049078],[.27222871678091454,.6740817658111484,.05368951740793705],[-.005574649490394108,.004060733528982826,1.0103391003129971]],HM=[[1.6410233796943257,-.32480329418479,-.23642469523761225],[-.6636628587229829,1.6153315916573379,.016756347685530137],[.011721894328375376,-.008284441996237409,.9883948585390215]];var pb=new Qi({id:"acescg",cssId:"--acescg",name:"ACEScg",coords:{r:{range:[0,65504],name:"Red"},g:{range:[0,65504],name:"Green"},b:{range:[0,65504],name:"Blue"}},referred:"scene",white:Bi.ACES,toXYZ_M:VM,fromXYZ_M:HM});const au=2**-16,Ad=-.35828683,lu=(Math.log2(65504)+9.72)/17.52;var WM=new Qi({id:"acescc",cssId:"--acescc",name:"ACEScc",coords:{r:{range:[Ad,lu],name:"Red"},g:{range:[Ad,lu],name:"Green"},b:{range:[Ad,lu],name:"Blue"}},referred:"scene",base:pb,toBase(r){const e=-.3013698630136986;return r.map(function(t){return t<=e?(2**(t*17.52-9.72)-au)*2:t<lu?2**(t*17.52-9.72):65504})},fromBase(r){return r.map(function(e){return e<=0?(Math.log2(au)+9.72)/17.52:e<au?(Math.log2(au+e*.5)+9.72)/17.52:(Math.log2(e)+9.72)/17.52})}}),S0=Object.freeze({__proto__:null,A98RGB:AM,A98RGB_Linear:lb,ACEScc:WM,ACEScg:pb,CAM16_JMh:Dv,HCT:ac,HPLuv:BM,HSL:ob,HSLuv:UM,HSV:ab,HWB:vM,ICTCP:gp,JzCzHz:mp,Jzazbz:Vy,LCH:oc,LCHuv:em,Lab:hn,Lab_D65:yp,Luv:hb,OKLCH:DM,OKLab:ya,P3:tb,P3_Linear:Jy,ProPhoto:PM,ProPhoto_Linear:cb,REC_2020:Qy,REC_2020_Linear:Xh,REC_2100_HLG:GM,REC_2100_PQ:zM,XYZ_ABS_D65:Zp,XYZ_D50:Kp,XYZ_D65:xi,sRGB:Sa,sRGB_Linear:eb});let yn=class Vi{constructor(...e){let t;e.length===1&&(t=Ze(e[0]));let i,n,s;t?(i=t.space||t.spaceId,n=t.coords,s=t.alpha):[i,n,s]=e,Object.defineProperty(this,"space",{value:ye.get(i),writable:!1,enumerable:!0,configurable:!0}),this.coords=n?n.slice():[0,0,0],this.alpha=s>1||s===void 0?1:s<0?0:s;for(let o=0;o<this.coords.length;o++)this.coords[o]==="NaN"&&(this.coords[o]=NaN);for(let o in this.space.coords)Object.defineProperty(this,o,{get:()=>this.get(o),set:a=>this.set(o,a)})}get spaceId(){return this.space.id}clone(){return new Vi(this.space,this.coords,this.alpha)}toJSON(){return{spaceId:this.spaceId,coords:this.coords,alpha:this.alpha}}display(...e){let t=Yv(this,...e);return t.color=new Vi(t.color),t}static get(e,...t){return e instanceof Vi?e:new Vi(e,...t)}static defineFunction(e,t,i=t){let{instance:n=!0,returns:s}=i,o=function(...a){let l=t(...a);if(s==="color")l=Vi.get(l);else if(s==="function<color>"){let c=l;l=function(...u){let h=c(...u);return Vi.get(h)},Object.assign(l,c)}else s==="array<color>"&&(l=l.map(c=>Vi.get(c)));return l};e in Vi||(Vi[e]=o),n&&(Vi.prototype[e]=function(...a){return o(this,...a)})}static defineFunctions(e){for(let t in e)Vi.defineFunction(t,e[t],e[t])}static extend(e){if(e.register)e.register(Vi);else for(let t in e)Vi.defineFunction(t,e[t])}};yn.defineFunctions({get:un,getAll:Bc,set:Vs,setAll:jp,to:Dt,equals:jv,inGamut:to,toGamut:xr,distance:Gy,toString:jl});Object.assign(yn,{util:qS,hooks:_r,WHITES:Bi,Space:ye,spaces:ye.registry,parse:ky,defaults:xn});for(let r of Object.keys(S0))ye.register(S0[r]);for(let r in ye.registry)bp(r,ye.registry[r]);_r.add("colorspace-init-end",r=>{bp(r.id,r),r.aliases?.forEach(e=>{bp(e,r)})});function bp(r,e){let t=r.replace(/-/g,"_");Object.defineProperty(yn.prototype,t,{get(){let i=this.getAll(r);return typeof Proxy>"u"?i:new Proxy(i,{has:(n,s)=>{try{return ye.resolveCoord([e,s]),!0}catch{}return Reflect.has(n,s)},get:(n,s,o)=>{if(s&&typeof s!="symbol"&&!(s in n)){let{index:a}=ye.resolveCoord([e,s]);if(a>=0)return n[a]}return Reflect.get(n,s,o)},set:(n,s,o,a)=>{if(s&&typeof s!="symbol"&&!(s in n)||s>=0){let{index:l}=ye.resolveCoord([e,s]);if(l>=0)return n[l]=o,this.setAll(r,n),!0}return Reflect.set(n,s,o,a)}})},set(i){this.setAll(r,i)},configurable:!0,enumerable:!0})}yn.extend(Ta);yn.extend({deltaE:Hl});Object.assign(yn,{deltaEMethods:Ta});yn.extend(bM);yn.extend({contrast:mM});yn.extend(_M);yn.extend(Zv);yn.extend(SM);yn.extend(gh);class mi{height;width;data;static DEFAULT_COLORSPACE="rec2100-hlg";static SDR_MULTIPLIER=2**16-1;static COLORSPACES={"rec2100-hlg":"rec2100hlg","display-p3":"p3",srgb:"sRGB","rec2100-pq":"rec2100pq"};colorSpace;constructor(e,t,i){i==null?this.colorSpace=mi.DEFAULT_COLORSPACE:this.colorSpace=i,this.height=t,this.width=e,this.data=new Uint16Array(t*e*4)}fill(e){if(e.length==4){for(let t=0;t<this.data.length;t+=4)this.data[t]=e[0],this.data[t+1]=e[1],this.data[t+2]=e[2],this.data[t+3]=e[3];return this}}getPixel(e,t){const i=(t*this.width+e)*4;return this.data.slice(i,i+4)}setPixel(e,t,i){const n=(t*this.width+e)*4;this.data[n+0]=i[0],this.data[n+1]=i[1],this.data[n+2]=i[2],this.data[n+3]=i[3]}static scaleUint8ToUint16(e){return e<<8|e}getImageData(){return this.data===void 0||this.data===null?null:new ImageData(this.data,this.width,this.height,{colorSpace:this.colorSpace})}static convertPixelToRec2100_hlg(e){const t=mi.COLORSPACES["rec2100-hlg"],n=new yn("srgb",Array.from(e.slice(0,3)).map(o=>o/255),e[3]/255).to(t),s=n.coords.map(o=>Math.round(o*mi.SDR_MULTIPLIER));return s.push(n.alpha*mi.SDR_MULTIPLIER),Uint16Array.from(s)}static convertArrayToRec2100_hlg(e){const t=new Uint16Array(e.length);for(let i=0;i<e.length;i+=4){const n=e.slice(i,i+4),s=mi.convertPixelToRec2100_hlg(n);t.set(s,i)}return t}pixelCallback(e){for(let t=0;t<this.data.length;t+=4)this.data.set(e(this.data[t],this.data[t+1],this.data[t+2],this.data[t+3]),t)}static async loadSDRImageData(e){return fetch(e).then(t=>t.blob()).then(t=>createImageBitmap(t)).then(t=>{const{width:i,height:n}=t,o=new OffscreenCanvas(i,n).getContext("2d");return o?.drawImage(t,0,0),o}).then(t=>t?.getImageData(0,0,t?.canvas.width,t?.canvas.height))}static fromImageData(e){const t=new mi(e.width,e.height);if(e.colorSpace=="srgb")t.data=mi.convertArrayToRec2100_hlg(e.data);else if(e.colorSpace==mi.DEFAULT_COLORSPACE)t.data=e.data;else throw new Error(`ColorSpace ${e.colorSpace} isn't supported!`);return t}static async fromURL(e){return mi.loadSDRImageData(e).then(t=>{if(t!==void 0)return mi.fromImageData(t)})}setImageData(e){if(this.width=e.width,this.height=e.height,e.colorSpace=="srgb")this.data=mi.convertArrayToRec2100_hlg(e.data);else if(e.colorSpace==mi.DEFAULT_COLORSPACE)this.data=e.data;else throw new Error(`ColorSpace ${e.colorSpace} isn't supported!`);this.colorSpace=mi.DEFAULT_COLORSPACE}clone(){const e=new mi(this.width,this.height,this.colorSpace);return e.data=this.data.slice(),e}}function $M(){const r=navigator.userAgent.match(/Chrom(e|ium)\/([0-9]+)\./);if(r==null)console.warn(`Unsupported / untested browser (${navigator.userAgent}) detected - using more modern defaults`);else if(r.length>=3)return Number(r[2]);return null}function mb(){const r={colorSpace:mi.DEFAULT_COLORSPACE},e=$M();return e==null?(console.warn(`Unsupported / untested browser (${navigator.userAgent}) detected - using more modern defaults`),r.colorType="float16"):e<134?console.warn("Older Chrome / chromium based browser detected, using older `pixelFormat`"):r.pixelFormat="float16",r}function XM(r){return r.configureHighDynamicRange({mode:"extended"}),r.getContext("2d",mb())}function qM(){try{const r=screen.colorDepth/3,e=r>8,t=window.matchMedia("(dynamic-range: high)").matches;return(window.matchMedia("(color-gamut: rec2020)").matches||window.matchMedia("(color-gamut: p3)").matches)&&t?r!==Math.round(r)?!1:!!e:!1}catch(r){return console.error("Exception during check for HDR",r),!1}}function jh(){try{const r=document.createElement("canvas");if(!r.getContext)return!1;const e=mb();return r.getContext("2d",e)!==null}catch{return console.error("Bad canvas ColorSpace test - make sure that the Chromium browser flag 'enable-experimental-web-platform-features' has been enabled"),!1}}const tm="179",gb=0,Tp=1,_b=2,im=1,YM=2,Cs=3,ji=0,Ct=1,Ai=2,dn=0,fn=1,va=2,Ma=3,Ea=4,ua=5,wi=100,nm=101,sm=102,xb=103,yb=104,Ps=200,rm=201,om=202,am=203,lc=204,cc=205,lm=206,cm=207,um=208,hm=209,dm=210,jM=211,KM=212,ZM=213,QM=214,uc=0,hc=1,dc=2,br=3,fc=4,pc=5,mc=6,gc=7,bb=0,JM=1,eE=2,Ki=0,tE=1,iE=2,nE=3,sE=4,rE=5,oE=6,aE=7,fm=300,ls=301,cs=302,Aa=303,wa=304,lo=306,co=1e3,rs=1001,uo=1002,Rt=1003,pm=1004,Bs=1005,ni=1006,ha=1007,Xi=1008,zt=1009,io=1010,no=1011,Wn=1012,hi=1013,Mt=1014,Wt=1015,pn=1016,Kh=1017,Zh=1018,mn=1020,Qh=35902,mm=1021,kc=1022,Gt=1023,gn=1026,_n=1027,zc=1028,el=1029,Gc=1030,tl=1031,lE=1032,il=1033,so=33776,fr=33777,pr=33778,mr=33779,_c=35840,xc=35841,yc=35842,bc=35843,Tc=36196,Ra=37492,Ca=37496,Na=37808,Pa=37809,Da=37810,La=37811,Ia=37812,Fa=37813,Ua=37814,Ba=37815,Oa=37816,ka=37817,za=37818,Ga=37819,Va=37820,Ha=37821,ro=36492,Sp=36494,vp=36495,gm=36283,Sc=36284,vc=36285,Mc=36286,cE=3200,uE=3201,Mp=0,Tb=1,Wi="",cn="srgb",ho="srgb-linear",Wa="linear",xe="srgb",hE=0,Vr=7680,dE=7681,fE=7682,pE=7683,mE=34055,gE=34056,_E=5386,xE=512,yE=513,bE=514,TE=515,SE=516,vE=517,ME=518,Ep=519,_m=512,xm=513,ym=514,Jh=515,bm=516,Tm=517,Sm=518,vm=519,Ch=35044,na=35048,v0="300 es",Ri=2e3,fo=2001;let Sr=class{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,e);e.target=null}}};const bi=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let M0=1234567;const Kl=Math.PI/180,$a=180/Math.PI;function ks(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(bi[r&255]+bi[r>>8&255]+bi[r>>16&255]+bi[r>>24&255]+"-"+bi[e&255]+bi[e>>8&255]+"-"+bi[e>>16&15|64]+bi[e>>24&255]+"-"+bi[t&63|128]+bi[t>>8&255]+"-"+bi[t>>16&255]+bi[t>>24&255]+bi[i&255]+bi[i>>8&255]+bi[i>>16&255]+bi[i>>24&255]).toLowerCase()}function st(r,e,t){return Math.max(e,Math.min(t,r))}function Mm(r,e){return(r%e+e)%e}function EE(r,e,t,i,n){return i+(r-e)*(n-i)/(t-e)}function AE(r,e,t){return r!==e?(t-r)/(e-r):0}function Zl(r,e,t){return(1-t)*r+t*e}function wE(r,e,t,i){return Zl(r,e,1-Math.exp(-t*i))}function RE(r,e=1){return e-Math.abs(Mm(r,e*2)-e)}function CE(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function NE(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function PE(r,e){return r+Math.floor(Math.random()*(e-r+1))}function DE(r,e){return r+Math.random()*(e-r)}function LE(r){return r*(.5-Math.random())}function IE(r){r!==void 0&&(M0=r);let e=M0+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function FE(r){return r*Kl}function UE(r){return r*$a}function BE(r){return(r&r-1)===0&&r!==0}function OE(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function kE(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function zE(r,e,t,i,n){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),d=o((e-i)/2),f=s((i-e)/2),p=o((i-e)/2);switch(n){case"XYX":r.set(a*u,l*h,l*d,a*c);break;case"YZY":r.set(l*d,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*d,a*u,a*c);break;case"XZX":r.set(a*u,l*p,l*f,a*c);break;case"YXY":r.set(l*f,a*u,l*p,a*c);break;case"ZYZ":r.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function Ui(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Ye(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const GE={DEG2RAD:Kl,RAD2DEG:$a,generateUUID:ks,clamp:st,euclideanModulo:Mm,mapLinear:EE,inverseLerp:AE,lerp:Zl,damp:wE,pingpong:RE,smoothstep:CE,smootherstep:NE,randInt:PE,randFloat:DE,randFloatSpread:LE,seededRandom:IE,degToRad:FE,radToDeg:UE,isPowerOfTwo:BE,ceilPowerOfTwo:OE,floorPowerOfTwo:kE,setQuaternionFromProperEuler:zE,normalize:Ye,denormalize:Ui};let Je=class Sb{constructor(e=0,t=0){Sb.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=st(this.x,e.x,t.x),this.y=st(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=st(this.x,e,t),this.y=st(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(st(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(st(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*n+e.x,this.y=s*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},nl=class{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,o,a){let l=i[n+0],c=i[n+1],u=i[n+2],h=i[n+3];const d=s[o+0],f=s[o+1],p=s[o+2],_=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=_;return}if(h!==_||l!==d||c!==f||u!==p){let g=1-a;const m=l*d+c*f+u*p+h*_,b=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const S=Math.sqrt(y),w=Math.atan2(S,m*b);g=Math.sin(g*w)/S,a=Math.sin(a*w)/S}const x=a*b;if(l=l*g+d*x,c=c*g+f*x,u=u*g+p*x,h=h*g+_*x,g===1-a){const S=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=S,c*=S,u*=S,h*=S}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,n,s,o){const a=i[n],l=i[n+1],c=i[n+2],u=i[n+3],h=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*f-c*d,e[t+1]=l*p+u*d+c*h-a*f,e[t+2]=c*p+u*f+a*d-l*h,e[t+3]=u*p-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(n/2),h=a(s/2),d=l(i/2),f=l(n/2),p=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=i+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-n)*f}else if(i>a&&i>h){const f=2*Math.sqrt(1+i-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-i-h);this._w=(s-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-i-a);this._w=(o-n)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(st(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+n*c-s*l,this._y=n*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-n*a,this._w=o*u-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=i*h+this._x*d,this._y=n*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},B=class vb{constructor(e=0,t=0,i=0){vb.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(E0.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(E0.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),u=2*(a*t-s*n),h=2*(s*i-o*t);return this.x=t+l*c+o*h-a*u,this.y=i+l*u+a*c-s*h,this.z=n+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=st(this.x,e.x,t.x),this.y=st(this.y,e.y,t.y),this.z=st(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=st(this.x,e,t),this.y=st(this.y,e,t),this.z=st(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(st(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return wd.copy(this).projectOnVector(e),this.sub(wd)}reflect(e){return this.sub(wd.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(st(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const wd=new B,E0=new nl;let We=class Mb{constructor(e,t,i,n,s,o,a,l,c){Mb.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c)}set(e,t,i,n,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=n,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],d=i[2],f=i[5],p=i[8],_=n[0],g=n[3],m=n[6],b=n[1],y=n[4],x=n[7],S=n[2],w=n[5],M=n[8];return s[0]=o*_+a*b+l*S,s[3]=o*g+a*y+l*w,s[6]=o*m+a*x+l*M,s[1]=c*_+u*b+h*S,s[4]=c*g+u*y+h*w,s[7]=c*m+u*x+h*M,s[2]=d*_+f*b+p*S,s[5]=d*g+f*y+p*w,s[8]=d*m+f*x+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+n*s*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,p=t*h+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return e[0]=h*_,e[1]=(n*c-u*i)*_,e[2]=(a*i-n*o)*_,e[3]=d*_,e[4]=(u*t-n*l)*_,e[5]=(n*s-a*t)*_,e[6]=f*_,e[7]=(i*l-c*t)*_,e[8]=(o*t-i*s)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(Rd.makeScale(e,t)),this}rotate(e){return this.premultiply(Rd.makeRotation(-e)),this}translate(e,t){return this.premultiply(Rd.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}};const Rd=new We;function Em(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function Nh(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Eb(){const r=Nh("canvas");return r.style.display="block",r}const A0={};function Zi(r){r in A0||(A0[r]=!0,console.warn(r))}function VE(r,e,t){return new Promise(function(i,n){function s(){switch(r.clientWaitSync(e,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:n();break;case r.TIMEOUT_EXPIRED:setTimeout(s,t);break;default:i()}}setTimeout(s,t)})}const w0=new We().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),R0=new We().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function HE(){const r={enabled:!0,workingColorSpace:ho,spaces:{},convert:function(n,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===xe&&(n.r=zs(n.r),n.g=zs(n.g),n.b=zs(n.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[s].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===xe&&(n.r=da(n.r),n.g=da(n.g),n.b=da(n.b))),n},workingToColorSpace:function(n,s){return this.convert(n,this.workingColorSpace,s)},colorSpaceToWorking:function(n,s){return this.convert(n,s,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===Wi?Wa:this.spaces[n].transfer},getLuminanceCoefficients:function(n,s=this.workingColorSpace){return n.fromArray(this.spaces[s].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,s,o){return n.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(n,s){return Zi("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(n,s)},toWorkingColorSpace:function(n,s){return Zi("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(n,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[ho]:{primaries:e,whitePoint:i,transfer:Wa,toXYZ:w0,fromXYZ:R0,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:cn},outputColorSpaceConfig:{drawingBufferColorSpace:cn}},[cn]:{primaries:e,whitePoint:i,transfer:xe,toXYZ:w0,fromXYZ:R0,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:cn}}}),r}const Be=HE();function zs(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function da(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Eo,WE=class{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{Eo===void 0&&(Eo=Nh("canvas")),Eo.width=e.width,Eo.height=e.height;const n=Eo.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=Eo}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Nh("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=zs(s[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(zs(t[i]/255)*255):t[i]=zs(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}},$E=0,Am=class{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:$E++}),this.uuid=ks(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push(Cd(n[o].image)):s.push(Cd(n[o]))}else s=Cd(n);i.url=s}return t||(e.images[this.uuid]=i),i}};function Cd(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?WE.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let XE=0;const Nd=new B;let ki=class _h extends Sr{constructor(e=_h.DEFAULT_IMAGE,t=_h.DEFAULT_MAPPING,i=rs,n=rs,s=ni,o=Xi,a=Gt,l=zt,c=_h.DEFAULT_ANISOTROPY,u=Wi){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:XE++}),this.uuid=ks(),this.name="",this.source=new Am(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new Je(0,0),this.repeat=new Je(1,1),this.center=new Je(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new We,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(Nd).x}get height(){return this.source.getSize(Nd).y}get depth(){return this.source.getSize(Nd).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}n&&i&&n.isVector2&&i.isVector2||n&&i&&n.isVector3&&i.isVector3||n&&i&&n.isMatrix3&&i.isMatrix3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==fm)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case co:e.x=e.x-Math.floor(e.x);break;case rs:e.x=e.x<0?0:1;break;case uo:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case co:e.y=e.y-Math.floor(e.y);break;case rs:e.y=e.y<0?0:1;break;case uo:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}};ki.DEFAULT_IMAGE=null;ki.DEFAULT_MAPPING=fm;ki.DEFAULT_ANISOTROPY=1;let je=class Ab{constructor(e=0,t=0,i=0,n=1){Ab.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],_=l[2],g=l[6],m=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,x=(f+1)/2,S=(m+1)/2,w=(u+d)/4,M=(h+_)/4,R=(p+g)/4;return y>x&&y>S?y<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(y),n=w/i,s=M/i):x>S?x<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(x),i=w/n,s=R/n):S<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(S),i=M/s,n=R/s),this.set(i,n,s,t),this}let b=Math.sqrt((g-p)*(g-p)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(g-p)/b,this.y=(h-_)/b,this.z=(d-u)/b,this.w=Math.acos((c+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=st(this.x,e.x,t.x),this.y=st(this.y,e.y,t.y),this.z=st(this.z,e.z,t.z),this.w=st(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=st(this.x,e,t),this.y=st(this.y,e,t),this.z=st(this.z,e,t),this.w=st(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(st(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}};class go extends Sr{constructor(e=1,t=1,i={}){super(),i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ni,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1,depth:1,multiview:!1},i),this.isRenderTarget=!0,this.width=e,this.height=t,this.depth=i.depth,this.scissor=new je(0,0,e,t),this.scissorTest=!1,this.viewport=new je(0,0,e,t);const n={width:e,height:t,depth:i.depth},s=new ki(n);this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0,this.textures[a].renderTarget=this;this._setTextureOptions(i),this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this._depthTexture=null,this.depthTexture=i.depthTexture,this.samples=i.samples,this.multiview=i.multiview}_setTextureOptions(e={}){const t={minFilter:ni,generateMipmaps:!1,flipY:!1,internalFormat:null};e.mapping!==void 0&&(t.mapping=e.mapping),e.wrapS!==void 0&&(t.wrapS=e.wrapS),e.wrapT!==void 0&&(t.wrapT=e.wrapT),e.wrapR!==void 0&&(t.wrapR=e.wrapR),e.magFilter!==void 0&&(t.magFilter=e.magFilter),e.minFilter!==void 0&&(t.minFilter=e.minFilter),e.format!==void 0&&(t.format=e.format),e.type!==void 0&&(t.type=e.type),e.anisotropy!==void 0&&(t.anisotropy=e.anisotropy),e.colorSpace!==void 0&&(t.colorSpace=e.colorSpace),e.flipY!==void 0&&(t.flipY=e.flipY),e.generateMipmaps!==void 0&&(t.generateMipmaps=e.generateMipmaps),e.internalFormat!==void 0&&(t.internalFormat=e.internalFormat);for(let i=0;i<this.textures.length;i++)this.textures[i].setValues(t)}get texture(){return this.textures[0]}set texture(e){this.textures[0]=e}set depthTexture(e){this._depthTexture!==null&&(this._depthTexture.renderTarget=null),e!==null&&(e.renderTarget=this),this._depthTexture=e}get depthTexture(){return this._depthTexture}setSize(e,t,i=1){if(this.width!==e||this.height!==t||this.depth!==i){this.width=e,this.height=t,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=e,this.textures[n].image.height=t,this.textures[n].image.depth=i,this.textures[n].isArrayTexture=this.textures[n].image.depth>1;this.dispose()}this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.textures.length=0;for(let t=0,i=e.textures.length;t<i;t++){this.textures[t]=e.textures[t].clone(),this.textures[t].isRenderTargetTexture=!0,this.textures[t].renderTarget=this;const n=Object.assign({},e.textures[t].image);this.textures[t].source=new Am(n)}return this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.resolveDepthBuffer=e.resolveDepthBuffer,this.resolveStencilBuffer=e.resolveStencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class po extends go{constructor(e=1,t=1,i={}){super(e,t,i),this.isWebGLRenderTarget=!0}}class wm extends ki{constructor(e=null,t=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Rt,this.minFilter=Rt,this.wrapR=rs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(e){this.layerUpdates.add(e)}clearLayerUpdates(){this.layerUpdates.clear()}}class qE extends ki{constructor(e=null,t=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:i,depth:n},this.magFilter=Rt,this.minFilter=Rt,this.wrapR=rs,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let Vc=class{constructor(e=new B(1/0,1/0,1/0),t=new B(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(Pn.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(Pn.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=Pn.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,Pn):Pn.fromBufferAttribute(s,o),Pn.applyMatrix4(e.matrixWorld),this.expandByPoint(Pn);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),cu.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),cu.copy(i.boundingBox)),cu.applyMatrix4(e.matrixWorld),this.union(cu)}const n=e.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,Pn),Pn.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(gl),uu.subVectors(this.max,gl),Ao.subVectors(e.a,gl),wo.subVectors(e.b,gl),Ro.subVectors(e.c,gl),js.subVectors(wo,Ao),Ks.subVectors(Ro,wo),wr.subVectors(Ao,Ro);let t=[0,-js.z,js.y,0,-Ks.z,Ks.y,0,-wr.z,wr.y,js.z,0,-js.x,Ks.z,0,-Ks.x,wr.z,0,-wr.x,-js.y,js.x,0,-Ks.y,Ks.x,0,-wr.y,wr.x,0];return!Pd(t,Ao,wo,Ro,uu)||(t=[1,0,0,0,1,0,0,0,1],!Pd(t,Ao,wo,Ro,uu))?!1:(hu.crossVectors(js,Ks),t=[hu.x,hu.y,hu.z],Pd(t,Ao,wo,Ro,uu))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Pn).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(Pn).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(xs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),xs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),xs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),xs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),xs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),xs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),xs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),xs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(xs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}};const xs=[new B,new B,new B,new B,new B,new B,new B,new B],Pn=new B,cu=new Vc,Ao=new B,wo=new B,Ro=new B,js=new B,Ks=new B,wr=new B,gl=new B,uu=new B,hu=new B,Rr=new B;function Pd(r,e,t,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){Rr.fromArray(r,s);const a=n.x*Math.abs(Rr.x)+n.y*Math.abs(Rr.y)+n.z*Math.abs(Rr.z),l=e.dot(Rr),c=t.dot(Rr),u=i.dot(Rr);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const YE=new Vc,_l=new B,Dd=new B;let ed=class{constructor(e=new B,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):YE.setFromPoints(e).getCenter(i);let n=0;for(let s=0,o=e.length;s<o;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;_l.subVectors(e,this.center);const t=_l.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(_l,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(Dd.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(_l.copy(e.center).add(Dd)),this.expandByPoint(_l.copy(e.center).sub(Dd))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}};const ys=new B,Ld=new B,du=new B,Zs=new B,Id=new B,fu=new B,Fd=new B;let jE=class{constructor(e=new B,t=new B(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ys)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ys.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ys.copy(this.origin).addScaledVector(this.direction,t),ys.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){Ld.copy(e).add(t).multiplyScalar(.5),du.copy(t).sub(e).normalize(),Zs.copy(this.origin).sub(Ld);const s=e.distanceTo(t)*.5,o=-this.direction.dot(du),a=Zs.dot(this.direction),l=-Zs.dot(du),c=Zs.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=s*u,h>=0)if(d>=-p)if(d<=p){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,h),n&&n.copy(Ld).addScaledVector(du,d),f}intersectSphere(e,t){ys.subVectors(e.center,this.origin);const i=ys.dot(this.direction),n=ys.dot(ys)-i*i,s=e.radius*e.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,ys)!==null}intersectTriangle(e,t,i,n,s){Id.subVectors(t,e),fu.subVectors(i,e),Fd.crossVectors(Id,fu);let o=this.direction.dot(Fd),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Zs.subVectors(this.origin,e);const l=a*this.direction.dot(fu.crossVectors(Zs,fu));if(l<0)return null;const c=a*this.direction.dot(Id.cross(Zs));if(c<0||l+c>o)return null;const u=-a*Zs.dot(Fd);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},It=class Ap{constructor(e,t,i,n,s,o,a,l,c,u,h,d,f,p,_,g){Ap.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c,u,h,d,f,p,_,g)}set(e,t,i,n,s,o,a,l,c,u,h,d,f,p,_,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=n,m[1]=s,m[5]=o,m[9]=a,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ap().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/Co.setFromMatrixColumn(e,0).length(),s=1/Co.setFromMatrixColumn(e,1).length(),o=1/Co.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=f+p*c,t[5]=d-_*c,t[9]=-a*l,t[2]=_-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,f=l*h,p=c*u,_=c*h;t[0]=d+_*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-p,t[6]=_+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,f=l*h,p=c*u,_=c*h;t[0]=d-_*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=l*u,t[4]=p*c-f,t[8]=d*c+_,t[1]=l*h,t[5]=_*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,_=a*c;t[0]=l*u,t[4]=_-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=f*h+p,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,_=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(KE,e,ZE)}lookAt(e,t,i){const n=this.elements;return tn.subVectors(e,t),tn.lengthSq()===0&&(tn.z=1),tn.normalize(),Qs.crossVectors(i,tn),Qs.lengthSq()===0&&(Math.abs(i.z)===1?tn.x+=1e-4:tn.z+=1e-4,tn.normalize(),Qs.crossVectors(i,tn)),Qs.normalize(),pu.crossVectors(tn,Qs),n[0]=Qs.x,n[4]=pu.x,n[8]=tn.x,n[1]=Qs.y,n[5]=pu.y,n[9]=tn.y,n[2]=Qs.z,n[6]=pu.z,n[10]=tn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],d=i[9],f=i[13],p=i[2],_=i[6],g=i[10],m=i[14],b=i[3],y=i[7],x=i[11],S=i[15],w=n[0],M=n[4],R=n[8],T=n[12],E=n[1],C=n[5],k=n[9],U=n[13],G=n[2],Y=n[6],W=n[10],Q=n[14],H=n[3],ie=n[7],ae=n[11],Te=n[15];return s[0]=o*w+a*E+l*G+c*H,s[4]=o*M+a*C+l*Y+c*ie,s[8]=o*R+a*k+l*W+c*ae,s[12]=o*T+a*U+l*Q+c*Te,s[1]=u*w+h*E+d*G+f*H,s[5]=u*M+h*C+d*Y+f*ie,s[9]=u*R+h*k+d*W+f*ae,s[13]=u*T+h*U+d*Q+f*Te,s[2]=p*w+_*E+g*G+m*H,s[6]=p*M+_*C+g*Y+m*ie,s[10]=p*R+_*k+g*W+m*ae,s[14]=p*T+_*U+g*Q+m*Te,s[3]=b*w+y*E+x*G+S*H,s[7]=b*M+y*C+x*Y+S*ie,s[11]=b*R+y*k+x*W+S*ae,s[15]=b*T+y*U+x*Q+S*Te,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],_=e[7],g=e[11],m=e[15];return p*(+s*l*h-n*c*h-s*a*d+i*c*d+n*a*f-i*l*f)+_*(+t*l*f-t*c*d+s*o*d-n*o*f+n*c*u-s*l*u)+g*(+t*c*h-t*a*f-s*o*h+i*o*f+s*a*u-i*c*u)+m*(-n*a*u-t*l*h+t*a*d+n*o*h-i*o*d+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],_=e[13],g=e[14],m=e[15],b=h*g*c-_*d*c+_*l*f-a*g*f-h*l*m+a*d*m,y=p*d*c-u*g*c-p*l*f+o*g*f+u*l*m-o*d*m,x=u*_*c-p*h*c+p*a*f-o*_*f-u*a*m+o*h*m,S=p*h*l-u*_*l-p*a*d+o*_*d+u*a*g-o*h*g,w=t*b+i*y+n*x+s*S;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=b*M,e[1]=(_*d*s-h*g*s-_*n*f+i*g*f+h*n*m-i*d*m)*M,e[2]=(a*g*s-_*l*s+_*n*c-i*g*c-a*n*m+i*l*m)*M,e[3]=(h*l*s-a*d*s-h*n*c+i*d*c+a*n*f-i*l*f)*M,e[4]=y*M,e[5]=(u*g*s-p*d*s+p*n*f-t*g*f-u*n*m+t*d*m)*M,e[6]=(p*l*s-o*g*s-p*n*c+t*g*c+o*n*m-t*l*m)*M,e[7]=(o*d*s-u*l*s+u*n*c-t*d*c-o*n*f+t*l*f)*M,e[8]=x*M,e[9]=(p*h*s-u*_*s-p*i*f+t*_*f+u*i*m-t*h*m)*M,e[10]=(o*_*s-p*a*s+p*i*c-t*_*c-o*i*m+t*a*m)*M,e[11]=(u*a*s-o*h*s-u*i*c+t*h*c+o*i*f-t*a*f)*M,e[12]=S*M,e[13]=(u*_*n-p*h*n+p*i*d-t*_*d-u*i*g+t*h*g)*M,e[14]=(p*a*n-o*_*n-p*i*l+t*_*l+o*i*g-t*a*g)*M,e[15]=(o*h*n-u*a*n+u*i*l-t*h*l-o*i*d+t*a*d)*M,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,u*a+i,u*l-n*o,0,c*l-n*a,u*l+n*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,o){return this.set(1,i,s,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,p=s*h,_=o*u,g=o*h,m=a*h,b=l*c,y=l*u,x=l*h,S=i.x,w=i.y,M=i.z;return n[0]=(1-(_+m))*S,n[1]=(f+x)*S,n[2]=(p-y)*S,n[3]=0,n[4]=(f-x)*w,n[5]=(1-(d+m))*w,n[6]=(g+b)*w,n[7]=0,n[8]=(p+y)*M,n[9]=(g-b)*M,n[10]=(1-(d+_))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=Co.set(n[0],n[1],n[2]).length();const o=Co.set(n[4],n[5],n[6]).length(),a=Co.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],Dn.copy(this);const c=1/s,u=1/o,h=1/a;return Dn.elements[0]*=c,Dn.elements[1]*=c,Dn.elements[2]*=c,Dn.elements[4]*=u,Dn.elements[5]*=u,Dn.elements[6]*=u,Dn.elements[8]*=h,Dn.elements[9]*=h,Dn.elements[10]*=h,t.setFromRotationMatrix(Dn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,n,s,o,a=Ri,l=!1){const c=this.elements,u=2*s/(t-e),h=2*s/(i-n),d=(t+e)/(t-e),f=(i+n)/(i-n);let p,_;if(l)p=s/(o-s),_=o*s/(o-s);else if(a===Ri)p=-(o+s)/(o-s),_=-2*o*s/(o-s);else if(a===fo)p=-o/(o-s),_=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=p,c[14]=_,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,i,n,s,o,a=Ri,l=!1){const c=this.elements,u=2/(t-e),h=2/(i-n),d=-(t+e)/(t-e),f=-(i+n)/(i-n);let p,_;if(l)p=1/(o-s),_=o/(o-s);else if(a===Ri)p=-2/(o-s),_=-(o+s)/(o-s);else if(a===fo)p=-1/(o-s),_=-s/(o-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=0,c[12]=d,c[1]=0,c[5]=h,c[9]=0,c[13]=f,c[2]=0,c[6]=0,c[10]=p,c[14]=_,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}};const Co=new B,Dn=new It,KE=new B(0,0,0),ZE=new B(1,1,1),Qs=new B,pu=new B,tn=new B,C0=new It,N0=new nl;let Hs=class wb{constructor(e=0,t=0,i=0,n=wb.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],o=n[4],a=n[8],l=n[1],c=n[5],u=n[9],h=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(st(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-st(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(st(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-st(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(st(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-st(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return C0.makeRotationFromQuaternion(e),this.setFromRotationMatrix(C0,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return N0.setFromEuler(this),this.setFromQuaternion(N0,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Hs.DEFAULT_ORDER="XYZ";let Rb=class{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}},QE=0;const P0=new B,No=new nl,bs=new It,mu=new B,xl=new B,JE=new B,e1=new nl,D0=new B(1,0,0),L0=new B(0,1,0),I0=new B(0,0,1),F0={type:"added"},t1={type:"removed"},Po={type:"childadded",child:null},Ud={type:"childremoved",child:null};let Ws=class xh extends Sr{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:QE++}),this.uuid=ks(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=xh.DEFAULT_UP.clone();const e=new B,t=new Hs,i=new nl,n=new B(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new It},normalMatrix:{value:new We}}),this.matrix=new It,this.matrixWorld=new It,this.matrixAutoUpdate=xh.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=xh.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Rb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return No.setFromAxisAngle(e,t),this.quaternion.multiply(No),this}rotateOnWorldAxis(e,t){return No.setFromAxisAngle(e,t),this.quaternion.premultiply(No),this}rotateX(e){return this.rotateOnAxis(D0,e)}rotateY(e){return this.rotateOnAxis(L0,e)}rotateZ(e){return this.rotateOnAxis(I0,e)}translateOnAxis(e,t){return P0.copy(e).applyQuaternion(this.quaternion),this.position.add(P0.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(D0,e)}translateY(e){return this.translateOnAxis(L0,e)}translateZ(e){return this.translateOnAxis(I0,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(bs.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?mu.copy(e):mu.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),xl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?bs.lookAt(xl,mu,this.up):bs.lookAt(mu,xl,this.up),this.quaternion.setFromRotationMatrix(bs),n&&(bs.extractRotation(n.matrixWorld),No.setFromRotationMatrix(bs),this.quaternion.premultiply(No.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(F0),Po.child=e,this.dispatchEvent(Po),Po.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(t1),Ud.child=e,this.dispatchEvent(Ud),Ud.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),bs.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),bs.multiply(e.parent.matrixWorld)),e.applyMatrix4(bs),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(F0),Po.child=e,this.dispatchEvent(Po),Po.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xl,e,JE),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(xl,e1,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),n.instanceInfo=this._instanceInfo.map(a=>({...a})),n.availableInstanceIds=this._availableInstanceIds.slice(),n.availableGeometryIds=this._availableGeometryIds.slice(),n.nextIndexStart=this._nextIndexStart,n.nextVertexStart=this._nextVertexStart,n.geometryCount=this._geometryCount,n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.matricesTexture=this._matricesTexture.toJSON(e),n.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(n.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}};Ws.DEFAULT_UP=new B(0,1,0);Ws.DEFAULT_MATRIX_AUTO_UPDATE=!0;Ws.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ln=new B,Ts=new B,Bd=new B,Ss=new B,Do=new B,Lo=new B,U0=new B,Od=new B,kd=new B,zd=new B,Gd=new je,Vd=new je,Hd=new je;let yl=class ta{constructor(e=new B,t=new B,i=new B){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),Ln.subVectors(e,t),n.cross(Ln);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){Ln.subVectors(n,t),Ts.subVectors(i,t),Bd.subVectors(e,t);const o=Ln.dot(Ln),a=Ln.dot(Ts),l=Ln.dot(Bd),c=Ts.dot(Ts),u=Ts.dot(Bd),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,Ss)===null?!1:Ss.x>=0&&Ss.y>=0&&Ss.x+Ss.y<=1}static getInterpolation(e,t,i,n,s,o,a,l){return this.getBarycoord(e,t,i,n,Ss)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,Ss.x),l.addScaledVector(o,Ss.y),l.addScaledVector(a,Ss.z),l)}static getInterpolatedAttribute(e,t,i,n,s,o){return Gd.setScalar(0),Vd.setScalar(0),Hd.setScalar(0),Gd.fromBufferAttribute(e,t),Vd.fromBufferAttribute(e,i),Hd.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(Gd,s.x),o.addScaledVector(Vd,s.y),o.addScaledVector(Hd,s.z),o}static isFrontFacing(e,t,i,n){return Ln.subVectors(i,t),Ts.subVectors(e,t),Ln.cross(Ts).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Ln.subVectors(this.c,this.b),Ts.subVectors(this.a,this.b),Ln.cross(Ts).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ta.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ta.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return ta.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return ta.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ta.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let o,a;Do.subVectors(n,i),Lo.subVectors(s,i),Od.subVectors(e,i);const l=Do.dot(Od),c=Lo.dot(Od);if(l<=0&&c<=0)return t.copy(i);kd.subVectors(e,n);const u=Do.dot(kd),h=Lo.dot(kd);if(u>=0&&h<=u)return t.copy(n);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(Do,o);zd.subVectors(e,s);const f=Do.dot(zd),p=Lo.dot(zd);if(p>=0&&f<=p)return t.copy(s);const _=f*c-l*p;if(_<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(Lo,a);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return U0.subVectors(s,n),a=(h-u)/(h-u+(f-p)),t.copy(n).addScaledVector(U0,a);const m=1/(g+_+d);return o=_*m,a=d*m,t.copy(i).addScaledVector(Do,o).addScaledVector(Lo,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};const Cb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Js={h:0,s:0,l:0},gu={h:0,s:0,l:0};function Wd(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}let ct=class{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=cn){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,Be.colorSpaceToWorking(this,t),this}setRGB(e,t,i,n=Be.workingColorSpace){return this.r=e,this.g=t,this.b=i,Be.colorSpaceToWorking(this,n),this}setHSL(e,t,i,n=Be.workingColorSpace){if(e=Mm(e,1),t=st(t,0,1),i=st(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=Wd(o,s,e+1/3),this.g=Wd(o,s,e),this.b=Wd(o,s,e-1/3)}return Be.colorSpaceToWorking(this,n),this}setStyle(e,t=cn){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=cn){const i=Cb[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=zs(e.r),this.g=zs(e.g),this.b=zs(e.b),this}copyLinearToSRGB(e){return this.r=da(e.r),this.g=da(e.g),this.b=da(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=cn){return Be.workingToColorSpace(Ti.copy(this),e),Math.round(st(Ti.r*255,0,255))*65536+Math.round(st(Ti.g*255,0,255))*256+Math.round(st(Ti.b*255,0,255))}getHexString(e=cn){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=Be.workingColorSpace){Be.workingToColorSpace(Ti.copy(this),t);const i=Ti.r,n=Ti.g,s=Ti.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case i:l=(n-s)/h+(n<s?6:0);break;case n:l=(s-i)/h+2;break;case s:l=(i-n)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=Be.workingColorSpace){return Be.workingToColorSpace(Ti.copy(this),t),e.r=Ti.r,e.g=Ti.g,e.b=Ti.b,e}getStyle(e=cn){Be.workingToColorSpace(Ti.copy(this),e);const t=Ti.r,i=Ti.g,n=Ti.b;return e!==cn?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(Js),this.setHSL(Js.h+e,Js.s+t,Js.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(Js),e.getHSL(gu);const i=Zl(Js.h,gu.h,t),n=Zl(Js.s,gu.s,t),s=Zl(Js.l,gu.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const Ti=new ct;ct.NAMES=Cb;let i1=0,Xa=class extends Sr{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:i1++}),this.uuid=ks(),this.name="",this.type="Material",this.blending=fn,this.side=ji,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=lc,this.blendDst=cc,this.blendEquation=wi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ct(0,0,0),this.blendAlpha=0,this.depthFunc=br,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Ep,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Vr,this.stencilZFail=Vr,this.stencilZPass=Vr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==fn&&(i.blending=this.blending),this.side!==ji&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==lc&&(i.blendSrc=this.blendSrc),this.blendDst!==cc&&(i.blendDst=this.blendDst),this.blendEquation!==wi&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==br&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Ep&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Vr&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Vr&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Vr&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=n(e.textures),o=n(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}},ns=class extends Xa{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ct(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Hs,this.combine=bb,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}};const Fs=n1();function n1(){const r=new ArrayBuffer(4),e=new Float32Array(r),t=new Uint32Array(r),i=new Uint32Array(512),n=new Uint32Array(512);for(let l=0;l<256;++l){const c=l-127;c<-27?(i[l]=0,i[l|256]=32768,n[l]=24,n[l|256]=24):c<-14?(i[l]=1024>>-c-14,i[l|256]=1024>>-c-14|32768,n[l]=-c-1,n[l|256]=-c-1):c<=15?(i[l]=c+15<<10,i[l|256]=c+15<<10|32768,n[l]=13,n[l|256]=13):c<128?(i[l]=31744,i[l|256]=64512,n[l]=24,n[l|256]=24):(i[l]=31744,i[l|256]=64512,n[l]=13,n[l|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let l=1;l<1024;++l){let c=l<<13,u=0;for(;(c&8388608)===0;)c<<=1,u-=8388608;c&=-8388609,u+=947912704,s[l]=c|u}for(let l=1024;l<2048;++l)s[l]=939524096+(l-1024<<13);for(let l=1;l<31;++l)o[l]=l<<23;o[31]=1199570944,o[32]=2147483648;for(let l=33;l<63;++l)o[l]=2147483648+(l-32<<23);o[63]=3347054592;for(let l=1;l<64;++l)l!==32&&(a[l]=1024);return{floatView:e,uint32View:t,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:o,offsetTable:a}}function nn(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=st(r,-65504,65504),Fs.floatView[0]=r;const e=Fs.uint32View[0],t=e>>23&511;return Fs.baseTable[t]+((e&8388607)>>Fs.shiftTable[t])}function _u(r){const e=r>>10;return Fs.uint32View[0]=Fs.mantissaTable[Fs.offsetTable[e]+(r&1023)]+Fs.exponentTable[e],Fs.floatView[0]}const Xt=new B,xu=new Je;let s1=0,Ci=class{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:s1++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=Ch,this.updateRanges=[],this.gpuType=Wt,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)xu.fromBufferAttribute(this,t),xu.applyMatrix3(e),this.setXY(t,xu.x,xu.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix3(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.applyMatrix4(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.applyNormalMatrix(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Xt.fromBufferAttribute(this,t),Xt.transformDirection(e),this.setXYZ(t,Xt.x,Xt.y,Xt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Ui(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Ye(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Ui(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Ui(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Ui(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Ui(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array),n=Ye(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array),n=Ye(n,this.array),s=Ye(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ch&&(e.usage=this.usage),e}},Rm=class extends Ci{constructor(e,t,i){super(new Uint16Array(e),t,i)}},Cm=class extends Ci{constructor(e,t,i){super(new Uint32Array(e),t,i)}};class Nb extends Ci{constructor(e,t,i){super(new Uint16Array(e),t,i),this.isFloat16BufferAttribute=!0}getX(e){let t=_u(this.array[e*this.itemSize]);return this.normalized&&(t=Ui(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize]=nn(t),this}getY(e){let t=_u(this.array[e*this.itemSize+1]);return this.normalized&&(t=Ui(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+1]=nn(t),this}getZ(e){let t=_u(this.array[e*this.itemSize+2]);return this.normalized&&(t=Ui(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+2]=nn(t),this}getW(e){let t=_u(this.array[e*this.itemSize+3]);return this.normalized&&(t=Ui(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ye(t,this.array)),this.array[e*this.itemSize+3]=nn(t),this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array)),this.array[e+0]=nn(t),this.array[e+1]=nn(i),this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array),n=Ye(n,this.array)),this.array[e+0]=nn(t),this.array[e+1]=nn(i),this.array[e+2]=nn(n),this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array),n=Ye(n,this.array),s=Ye(s,this.array)),this.array[e+0]=nn(t),this.array[e+1]=nn(i),this.array[e+2]=nn(n),this.array[e+3]=nn(s),this}}let Oi=class extends Ci{constructor(e,t,i){super(new Float32Array(e),t,i)}},r1=0;const Sn=new It,$d=new Ws,Io=new B,sn=new Vc,bl=new Vc,ci=new B;let $s=class Pb extends Sr{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:r1++}),this.uuid=ks(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(Em(e)?Cm:Rm)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new We().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return Sn.makeRotationFromQuaternion(e),this.applyMatrix4(Sn),this}rotateX(e){return Sn.makeRotationX(e),this.applyMatrix4(Sn),this}rotateY(e){return Sn.makeRotationY(e),this.applyMatrix4(Sn),this}rotateZ(e){return Sn.makeRotationZ(e),this.applyMatrix4(Sn),this}translate(e,t,i){return Sn.makeTranslation(e,t,i),this.applyMatrix4(Sn),this}scale(e,t,i){return Sn.makeScale(e,t,i),this.applyMatrix4(Sn),this}lookAt(e){return $d.lookAt(e),$d.updateMatrix(),this.applyMatrix4($d.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Io).negate(),this.translate(Io.x,Io.y,Io.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,s=e.length;n<s;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new Oi(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const s=e[n];t.setXYZ(n,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Vc);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new B(-1/0,-1/0,-1/0),new B(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];sn.setFromBufferAttribute(s),this.morphTargetsRelative?(ci.addVectors(this.boundingBox.min,sn.min),this.boundingBox.expandByPoint(ci),ci.addVectors(this.boundingBox.max,sn.max),this.boundingBox.expandByPoint(ci)):(this.boundingBox.expandByPoint(sn.min),this.boundingBox.expandByPoint(sn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ed);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new B,1/0);return}if(e){const i=this.boundingSphere.center;if(sn.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];bl.setFromBufferAttribute(a),this.morphTargetsRelative?(ci.addVectors(sn.min,bl.min),sn.expandByPoint(ci),ci.addVectors(sn.max,bl.max),sn.expandByPoint(ci)):(sn.expandByPoint(bl.min),sn.expandByPoint(bl.max))}sn.getCenter(i);let n=0;for(let s=0,o=e.count;s<o;s++)ci.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(ci));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)ci.fromBufferAttribute(a,c),l&&(Io.fromBufferAttribute(e,c),ci.add(Io)),n=Math.max(n,i.distanceToSquared(ci))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Ci(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let R=0;R<i.count;R++)a[R]=new B,l[R]=new B;const c=new B,u=new B,h=new B,d=new Je,f=new Je,p=new Je,_=new B,g=new B;function m(R,T,E){c.fromBufferAttribute(i,R),u.fromBufferAttribute(i,T),h.fromBufferAttribute(i,E),d.fromBufferAttribute(s,R),f.fromBufferAttribute(s,T),p.fromBufferAttribute(s,E),u.sub(c),h.sub(c),f.sub(d),p.sub(d);const C=1/(f.x*p.y-p.x*f.y);isFinite(C)&&(_.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(C),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(C),a[R].add(_),a[T].add(_),a[E].add(_),l[R].add(g),l[T].add(g),l[E].add(g))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let R=0,T=b.length;R<T;++R){const E=b[R],C=E.start,k=E.count;for(let U=C,G=C+k;U<G;U+=3)m(e.getX(U+0),e.getX(U+1),e.getX(U+2))}const y=new B,x=new B,S=new B,w=new B;function M(R){S.fromBufferAttribute(n,R),w.copy(S);const T=a[R];y.copy(T),y.sub(S.multiplyScalar(S.dot(T))).normalize(),x.crossVectors(w,T);const C=x.dot(l[R])<0?-1:1;o.setXYZW(R,y.x,y.y,y.z,C)}for(let R=0,T=b.length;R<T;++R){const E=b[R],C=E.start,k=E.count;for(let U=C,G=C+k;U<G;U+=3)M(e.getX(U+0)),M(e.getX(U+1)),M(e.getX(U+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new Ci(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new B,s=new B,o=new B,a=new B,l=new B,c=new B,u=new B,h=new B;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);n.fromBufferAttribute(t,p),s.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,s),h.subVectors(n,s),u.cross(h),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,_),c.fromBufferAttribute(i,g),a.add(u),l.add(u),c.add(u),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(_,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),h.subVectors(n,s),u.cross(h),i.setXYZ(d+0,u.x,u.y,u.z),i.setXYZ(d+1,u.x,u.y,u.z),i.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)ci.fromBufferAttribute(e,t),ci.normalize(),e.setXYZ(t,ci.x,ci.y,ci.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let _=0,g=l.length;_<g;_++){a.isInterleavedBufferAttribute?f=l[_]*a.data.stride+a.offset:f=l[_]*u;for(let m=0;m<u;m++)d[p++]=c[f++]}return new Ci(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Pb,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(e.data))}u.length>0&&(n[l]=u,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const u=n[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const B0=new It,Cr=new jE,yu=new ed,O0=new B,bu=new B,Tu=new B,Su=new B,Xd=new B,vu=new B,k0=new B,Mu=new B;let fi=class extends Ws{constructor(e=new $s,t=new ns){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){vu.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(Xd.fromBufferAttribute(h,e),o?vu.addScaledVector(Xd,u):vu.addScaledVector(Xd.sub(t),u))}t.add(vu)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),yu.copy(i.boundingSphere),yu.applyMatrix4(s),Cr.copy(e.ray).recast(e.near),!(yu.containsPoint(Cr.origin)===!1&&(Cr.intersectSphere(yu,O0)===null||Cr.origin.distanceToSquared(O0)>(e.far-e.near)**2))&&(B0.copy(s).invert(),Cr.copy(e.ray).applyMatrix4(B0),!(i.boundingBox!==null&&Cr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Cr)))}_computeIntersections(e,t,i){let n;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let x=b,S=y;x<S;x+=3){const w=a.getX(x),M=a.getX(x+1),R=a.getX(x+2);n=Eu(this,m,e,i,c,u,h,w,M,R),n&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const b=a.getX(g),y=a.getX(g+1),x=a.getX(g+2);n=Eu(this,o,e,i,c,u,h,b,y,x),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),y=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let x=b,S=y;x<S;x+=3){const w=x,M=x+1,R=x+2;n=Eu(this,m,e,i,c,u,h,w,M,R),n&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(l.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const b=g,y=g+1,x=g+2;n=Eu(this,o,e,i,c,u,h,b,y,x),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}};function o1(r,e,t,i,n,s,o,a){let l;if(e.side===Ct?l=i.intersectTriangle(o,s,n,!0,a):l=i.intersectTriangle(n,s,o,e.side===ji,a),l===null)return null;Mu.copy(a),Mu.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo(Mu);return c<t.near||c>t.far?null:{distance:c,point:Mu.clone(),object:r}}function Eu(r,e,t,i,n,s,o,a,l,c){r.getVertexPosition(a,bu),r.getVertexPosition(l,Tu),r.getVertexPosition(c,Su);const u=o1(r,e,t,i,bu,Tu,Su,k0);if(u){const h=new B;yl.getBarycoord(k0,bu,Tu,Su,h),n&&(u.uv=yl.getInterpolatedAttribute(n,a,l,c,h,new Je)),s&&(u.uv1=yl.getInterpolatedAttribute(s,a,l,c,h,new Je)),o&&(u.normal=yl.getInterpolatedAttribute(o,a,l,c,h,new B),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new B,materialIndex:0};yl.getNormal(bu,Tu,Su,d.normal),u.face=d,u.barycoord=h}return u}class _o extends $s{constructor(e=1,t=1,i=1,n=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:i,widthSegments:n,heightSegments:s,depthSegments:o};const a=this;n=Math.floor(n),s=Math.floor(s),o=Math.floor(o);const l=[],c=[],u=[],h=[];let d=0,f=0;p("z","y","x",-1,-1,i,t,e,o,s,0),p("z","y","x",1,-1,i,t,-e,o,s,1),p("x","z","y",1,1,e,i,t,n,o,2),p("x","z","y",1,-1,e,i,-t,n,o,3),p("x","y","z",1,-1,e,t,i,n,s,4),p("x","y","z",-1,-1,e,t,-i,n,s,5),this.setIndex(l),this.setAttribute("position",new Oi(c,3)),this.setAttribute("normal",new Oi(u,3)),this.setAttribute("uv",new Oi(h,2));function p(_,g,m,b,y,x,S,w,M,R,T){const E=x/M,C=S/R,k=x/2,U=S/2,G=w/2,Y=M+1,W=R+1;let Q=0,H=0;const ie=new B;for(let ae=0;ae<W;ae++){const Te=ae*C-U;for(let $e=0;$e<Y;$e++){const gt=$e*E-k;ie[_]=gt*b,ie[g]=Te*y,ie[m]=G,c.push(ie.x,ie.y,ie.z),ie[_]=0,ie[g]=0,ie[m]=w>0?1:-1,u.push(ie.x,ie.y,ie.z),h.push($e/M),h.push(1-ae/R),Q+=1}}for(let ae=0;ae<R;ae++)for(let Te=0;Te<M;Te++){const $e=d+Te+Y*ae,gt=d+Te+Y*(ae+1),_t=d+(Te+1)+Y*(ae+1),j=d+(Te+1)+Y*ae;l.push($e,gt,j),l.push(gt,_t,j),H+=6}a.addGroup(f,H,T),f+=H,d+=Q}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new _o(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function qa(r){const e={};for(const t in r){e[t]={};for(const i in r[t]){const n=r[t][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),e[t][i]=null):e[t][i]=n.clone():Array.isArray(n)?e[t][i]=n.slice():e[t][i]=n}}return e}function Li(r){const e={};for(let t=0;t<r.length;t++){const i=qa(r[t]);for(const n in i)e[n]=i[n]}return e}function a1(r){const e=[];for(let t=0;t<r.length;t++)e.push(r[t].clone());return e}function Db(r){const e=r.getRenderTarget();return e===null?r.outputColorSpace:e.isXRRenderTarget===!0?e.texture.colorSpace:Be.workingColorSpace}const l1={clone:qa,merge:Li},c1=`
void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}
`,u1=`
void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}
`;class Tr extends Xa{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=c1,this.fragmentShader=u1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=qa(e.uniforms),this.uniformsGroups=a1(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?t.uniforms[n]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[n]={type:"m4",value:o.toArray()}:t.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(t.extensions=i),t}}let Nm=class extends Ws{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new It,this.projectionMatrix=new It,this.projectionMatrixInverse=new It,this.coordinateSystem=Ri,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}};const er=new B,z0=new Je,G0=new Je;let Ei=class extends Nm{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=$a*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Kl*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return $a*2*Math.atan(Math.tan(Kl*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){er.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(er.x,er.y).multiplyScalar(-e/er.z),er.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(er.x,er.y).multiplyScalar(-e/er.z)}getViewSize(e,t){return this.getViewBounds(e,z0,G0),t.subVectors(G0,z0)}setViewOffset(e,t,i,n,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Kl*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}};const Fo=-90,Uo=1;class Lb extends Ws{constructor(e,t,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Ei(Fo,Uo,e,t);n.layers=this.layers,this.add(n);const s=new Ei(Fo,Uo,e,t);s.layers=this.layers,this.add(s);const o=new Ei(Fo,Uo,e,t);o.layers=this.layers,this.add(o);const a=new Ei(Fo,Uo,e,t);a.layers=this.layers,this.add(a);const l=new Ei(Fo,Uo,e,t);l.layers=this.layers,this.add(l);const c=new Ei(Fo,Uo,e,t);c.layers=this.layers,this.add(c)}updateCoordinateSystem(){const e=this.coordinateSystem,t=this.children.concat(),[i,n,s,o,a,l]=t;for(const c of t)this.remove(c);if(e===Ri)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),l.up.set(0,1,0),l.lookAt(0,0,-1);else if(e===fo)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),l.up.set(0,-1,0),l.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+e);for(const c of t)this.add(c),c.updateMatrixWorld()}update(e,t){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==e.coordinateSystem&&(this.coordinateSystem=e.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,l,c,u]=this.children,h=e.getRenderTarget(),d=e.getActiveCubeFace(),f=e.getActiveMipmapLevel(),p=e.xr.enabled;e.xr.enabled=!1;const _=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,e.setRenderTarget(i,0,n),e.render(t,s),e.setRenderTarget(i,1,n),e.render(t,o),e.setRenderTarget(i,2,n),e.render(t,a),e.setRenderTarget(i,3,n),e.render(t,l),e.setRenderTarget(i,4,n),e.render(t,c),i.texture.generateMipmaps=_,e.setRenderTarget(i,5,n),e.render(t,u),e.setRenderTarget(h,d,f),e.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Hc extends ki{constructor(e=[],t=ls,i,n,s,o,a,l,c,u){super(e,t,i,n,s,o,a,l,c,u),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class Ib extends po{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const i={width:e,height:e,depth:1},n=[i,i,i,i,i,i];this.texture=new Hc(n),this._setTextureOptions(t),this.texture.isRenderTargetTexture=!0}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new _o(5,5,5),s=new Tr({name:"CubemapFromEquirect",uniforms:qa(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:Ct,blending:dn});s.uniforms.tEquirect.value=t;const o=new fi(n,s),a=t.minFilter;return t.minFilter===Xi&&(t.minFilter=ni),new Lb(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t=!0,i=!0,n=!0){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,i,n);e.setRenderTarget(s)}}let Au=class extends Ws{constructor(){super(),this.isGroup=!0,this.type="Group"}};const h1={type:"move"};class yh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Au,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Au,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new B,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new B),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Au,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new B,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new B),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const i of e.hand.values())this._getHandJoint(t,i)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,i){let n=null,s=null,o=null;const a=this._targetRay,l=this._grip,c=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(c&&e.hand){o=!0;for(const _ of e.hand.values()){const g=t.getJointPose(_,i),m=this._getHandJoint(c,_);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const u=c.joints["index-finger-tip"],h=c.joints["thumb-tip"],d=u.position.distanceTo(h.position),f=.02,p=.005;c.inputState.pinching&&d>f+p?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&d<=f-p&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else l!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,i),s!==null&&(l.matrix.fromArray(s.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,s.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(s.linearVelocity)):l.hasLinearVelocity=!1,s.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(s.angularVelocity)):l.hasAngularVelocity=!1));a!==null&&(n=t.getPose(e.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(h1)))}return a!==null&&(a.visible=n!==null),l!==null&&(l.visible=s!==null),c!==null&&(c.visible=o!==null),this}_getHandJoint(e,t){if(e.joints[t.jointName]===void 0){const i=new Au;i.matrixAutoUpdate=!1,i.visible=!1,e.joints[t.jointName]=i,e.add(i)}return e.joints[t.jointName]}}class td extends Ws{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Hs,this.environmentIntensity=1,this.environmentRotation=new Hs,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,this.backgroundRotation.copy(e.backgroundRotation),this.environmentIntensity=e.environmentIntensity,this.environmentRotation.copy(e.environmentRotation),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(t.object.backgroundIntensity=this.backgroundIntensity),t.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(t.object.environmentIntensity=this.environmentIntensity),t.object.environmentRotation=this.environmentRotation.toArray(),t}}let Fb=class{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ch,this.updateRanges=[],this.version=0,this.uuid=ks()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ks()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=ks()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}};const Pi=new B;let d1=class Ub{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Pi.fromBufferAttribute(this,t),Pi.applyMatrix4(e),this.setXYZ(t,Pi.x,Pi.y,Pi.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Pi.fromBufferAttribute(this,t),Pi.applyNormalMatrix(e),this.setXYZ(t,Pi.x,Pi.y,Pi.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Pi.fromBufferAttribute(this,t),Pi.transformDirection(e),this.setXYZ(t,Pi.x,Pi.y,Pi.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=Ui(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=Ye(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Ye(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Ui(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Ui(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Ui(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Ui(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array),n=Ye(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ye(t,this.array),i=Ye(i,this.array),n=Ye(n,this.array),s=Ye(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new Ci(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Ub(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}},f1=class extends ki{constructor(e=null,t=1,i=1,n,s,o,a,l,c=Rt,u=Rt,h,d){super(null,o,a,l,c,u,n,s,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}},p1=class extends Ci{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}};const qd=new B,m1=new B,g1=new We;let Ds=class{constructor(e=new B(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=qd.subVectors(i,t).cross(m1.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(qd),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||g1.getNormalMatrix(e),n=this.coplanarPoint(qd).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Nr=new ed,_1=new Je(.5,.5),wu=new B;let id=class{constructor(e=new Ds,t=new Ds,i=new Ds,n=new Ds,s=new Ds,o=new Ds){this.planes=[e,t,i,n,s,o]}set(e,t,i,n,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=Ri,i=!1){const n=this.planes,s=e.elements,o=s[0],a=s[1],l=s[2],c=s[3],u=s[4],h=s[5],d=s[6],f=s[7],p=s[8],_=s[9],g=s[10],m=s[11],b=s[12],y=s[13],x=s[14],S=s[15];if(n[0].setComponents(c-o,f-u,m-p,S-b).normalize(),n[1].setComponents(c+o,f+u,m+p,S+b).normalize(),n[2].setComponents(c+a,f+h,m+_,S+y).normalize(),n[3].setComponents(c-a,f-h,m-_,S-y).normalize(),i)n[4].setComponents(l,d,g,x).normalize(),n[5].setComponents(c-l,f-d,m-g,S-x).normalize();else if(n[4].setComponents(c-l,f-d,m-g,S-x).normalize(),t===Ri)n[5].setComponents(c+l,f+d,m+g,S+x).normalize();else if(t===fo)n[5].setComponents(l,d,g,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Nr.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Nr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Nr)}intersectsSprite(e){Nr.center.set(0,0,0);const t=_1.distanceTo(e.center);return Nr.radius=.7071067811865476+t,Nr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Nr)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(wu.x=n.normal.x>0?e.max.x:e.min.x,wu.y=n.normal.y>0?e.max.y:e.min.y,wu.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(wu)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};const Jn=new It,es=new id;class Pm{constructor(){this.coordinateSystem=Ri}intersectsObject(e,t){if(!t.isArrayCamera||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Jn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),es.setFromProjectionMatrix(Jn,n.coordinateSystem,n.reversedDepth),es.intersectsObject(e))return!0}return!1}intersectsSprite(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Jn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),es.setFromProjectionMatrix(Jn,n.coordinateSystem,n.reversedDepth),es.intersectsSprite(e))return!0}return!1}intersectsSphere(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Jn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),es.setFromProjectionMatrix(Jn,n.coordinateSystem,n.reversedDepth),es.intersectsSphere(e))return!0}return!1}intersectsBox(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Jn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),es.setFromProjectionMatrix(Jn,n.coordinateSystem,n.reversedDepth),es.intersectsBox(e))return!0}return!1}containsPoint(e,t){if(!t||!t.cameras||t.cameras.length===0)return!1;for(let i=0;i<t.cameras.length;i++){const n=t.cameras[i];if(Jn.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),es.setFromProjectionMatrix(Jn,n.coordinateSystem,n.reversedDepth),es.containsPoint(e))return!0}return!1}clone(){return new Pm}}class x1 extends ki{constructor(e,t){super({width:e,height:t}),this.isFramebufferTexture=!0,this.magFilter=Rt,this.minFilter=Rt,this.generateMipmaps=!1,this.needsUpdate=!0}}class Xn extends ki{constructor(e,t,i=Mt,n,s,o,a=Rt,l=Rt,c,u=gn,h=1){if(u!==gn&&u!==_n)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");const d={width:e,height:t,depth:h};super(d,n,s,o,a,l,u,i,c),this.isDepthTexture=!0,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(e){return super.copy(e),this.source=new Am(Object.assign({},e.image)),this.compareFunction=e.compareFunction,this}toJSON(e){const t=super.toJSON(e);return this.compareFunction!==null&&(t.compareFunction=this.compareFunction),t}}class Dm extends $s{constructor(e=1,t=1,i=1,n=32,s=1,o=!1,a=0,l=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:i,radialSegments:n,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:l};const c=this;n=Math.floor(n),s=Math.floor(s);const u=[],h=[],d=[],f=[];let p=0;const _=[],g=i/2;let m=0;b(),o===!1&&(e>0&&y(!0),t>0&&y(!1)),this.setIndex(u),this.setAttribute("position",new Oi(h,3)),this.setAttribute("normal",new Oi(d,3)),this.setAttribute("uv",new Oi(f,2));function b(){const x=new B,S=new B;let w=0;const M=(t-e)/i;for(let R=0;R<=s;R++){const T=[],E=R/s,C=E*(t-e)+e;for(let k=0;k<=n;k++){const U=k/n,G=U*l+a,Y=Math.sin(G),W=Math.cos(G);S.x=C*Y,S.y=-E*i+g,S.z=C*W,h.push(S.x,S.y,S.z),x.set(Y,M,W).normalize(),d.push(x.x,x.y,x.z),f.push(U,1-E),T.push(p++)}_.push(T)}for(let R=0;R<n;R++)for(let T=0;T<s;T++){const E=_[T][R],C=_[T+1][R],k=_[T+1][R+1],U=_[T][R+1];(e>0||T!==0)&&(u.push(E,C,U),w+=3),(t>0||T!==s-1)&&(u.push(C,k,U),w+=3)}c.addGroup(m,w,0),m+=w}function y(x){const S=p,w=new Je,M=new B;let R=0;const T=x===!0?e:t,E=x===!0?1:-1;for(let k=1;k<=n;k++)h.push(0,g*E,0),d.push(0,E,0),f.push(.5,.5),p++;const C=p;for(let k=0;k<=n;k++){const G=k/n*l+a,Y=Math.cos(G),W=Math.sin(G);M.x=T*W,M.y=g*E,M.z=T*Y,h.push(M.x,M.y,M.z),d.push(0,E,0),w.x=Y*.5+.5,w.y=W*.5*E+.5,f.push(w.x,w.y),p++}for(let k=0;k<n;k++){const U=S+k,G=C+k;x===!0?u.push(G,G+1,U):u.push(G+1,G,U),R+=3}c.addGroup(m,R,x===!0?1:2),m+=R}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Dm(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Wc extends $s{constructor(e=1,t=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:i,heightSegments:n};const s=e/2,o=t/2,a=Math.floor(i),l=Math.floor(n),c=a+1,u=l+1,h=e/a,d=t/l,f=[],p=[],_=[],g=[];for(let m=0;m<u;m++){const b=m*d-o;for(let y=0;y<c;y++){const x=y*h-s;p.push(x,-b,0),_.push(0,0,1),g.push(y/a),g.push(1-m/l)}}for(let m=0;m<l;m++)for(let b=0;b<a;b++){const y=b+c*m,x=b+c*(m+1),S=b+1+c*(m+1),w=b+1+c*m;f.push(y,x,w),f.push(x,S,w)}this.setIndex(f),this.setAttribute("position",new Oi(p,3)),this.setAttribute("normal",new Oi(_,3)),this.setAttribute("uv",new Oi(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Wc(e.width,e.height,e.widthSegments,e.heightSegments)}}class Lm extends $s{constructor(e=1,t=32,i=16,n=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:i,phiStart:n,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),i=Math.max(2,Math.floor(i));const l=Math.min(o+a,Math.PI);let c=0;const u=[],h=new B,d=new B,f=[],p=[],_=[],g=[];for(let m=0;m<=i;m++){const b=[],y=m/i;let x=0;m===0&&o===0?x=.5/t:m===i&&l===Math.PI&&(x=-.5/t);for(let S=0;S<=t;S++){const w=S/t;h.x=-e*Math.cos(n+w*s)*Math.sin(o+y*a),h.y=e*Math.cos(o+y*a),h.z=e*Math.sin(n+w*s)*Math.sin(o+y*a),p.push(h.x,h.y,h.z),d.copy(h).normalize(),_.push(d.x,d.y,d.z),g.push(w+x,1-y),b.push(c++)}u.push(b)}for(let m=0;m<i;m++)for(let b=0;b<t;b++){const y=u[m][b+1],x=u[m][b],S=u[m+1][b],w=u[m+1][b+1];(m!==0||o>0)&&f.push(y,x,w),(m!==i-1||l<Math.PI)&&f.push(x,S,w)}this.setIndex(f),this.setAttribute("position",new Oi(p,3)),this.setAttribute("normal",new Oi(_,3)),this.setAttribute("uv",new Oi(g,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new Lm(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class y1 extends Xa{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=cE,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class b1 extends Xa{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}let Im=class extends Nm{constructor(e=-1,t=1,i=1,n=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}};class Bb extends Ei{constructor(e=[]){super(),this.isArrayCamera=!0,this.isMultiViewCamera=!1,this.cameras=e}}class T1 extends Fb{constructor(e,t,i=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class nd{constructor(e,t,i,n){nd.prototype.isMatrix2=!0,this.elements=[1,0,0,1],e!==void 0&&this.set(e,t,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(e,t=0){for(let i=0;i<4;i++)this.elements[i]=e[i+t];return this}set(e,t,i,n){const s=this.elements;return s[0]=e,s[2]=t,s[1]=i,s[3]=n,this}}function V0(r,e,t,i){const n=S1(i);switch(t){case mm:return r*e;case zc:return r*e/n.components*n.byteLength;case el:return r*e/n.components*n.byteLength;case Gc:return r*e*2/n.components*n.byteLength;case tl:return r*e*2/n.components*n.byteLength;case kc:return r*e*3/n.components*n.byteLength;case Gt:return r*e*4/n.components*n.byteLength;case il:return r*e*4/n.components*n.byteLength;case so:case fr:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case pr:case mr:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case xc:case bc:return Math.max(r,16)*Math.max(e,8)/4;case _c:case yc:return Math.max(r,8)*Math.max(e,8)/2;case Tc:case Ra:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*8;case Ca:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Na:return Math.floor((r+3)/4)*Math.floor((e+3)/4)*16;case Pa:return Math.floor((r+4)/5)*Math.floor((e+3)/4)*16;case Da:return Math.floor((r+4)/5)*Math.floor((e+4)/5)*16;case La:return Math.floor((r+5)/6)*Math.floor((e+4)/5)*16;case Ia:return Math.floor((r+5)/6)*Math.floor((e+5)/6)*16;case Fa:return Math.floor((r+7)/8)*Math.floor((e+4)/5)*16;case Ua:return Math.floor((r+7)/8)*Math.floor((e+5)/6)*16;case Ba:return Math.floor((r+7)/8)*Math.floor((e+7)/8)*16;case Oa:return Math.floor((r+9)/10)*Math.floor((e+4)/5)*16;case ka:return Math.floor((r+9)/10)*Math.floor((e+5)/6)*16;case za:return Math.floor((r+9)/10)*Math.floor((e+7)/8)*16;case Ga:return Math.floor((r+9)/10)*Math.floor((e+9)/10)*16;case Va:return Math.floor((r+11)/12)*Math.floor((e+9)/10)*16;case Ha:return Math.floor((r+11)/12)*Math.floor((e+11)/12)*16;case ro:case Sp:case vp:return Math.ceil(r/4)*Math.ceil(e/4)*16;case gm:case Sc:return Math.ceil(r/4)*Math.ceil(e/4)*8;case vc:case Mc:return Math.ceil(r/4)*Math.ceil(e/4)*16}throw new Error(`Unable to determine texture byte length for ${t} format.`)}function S1(r){switch(r){case zt:case io:return{byteLength:1,components:1};case Wn:case no:case pn:return{byteLength:2,components:1};case Kh:case Zh:return{byteLength:2,components:4};case Mt:case hi:case Wt:return{byteLength:4,components:1};case Qh:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}function Ob(){let r=null,e=!1,t=null,i=null;function n(s,o){t(s,o),i=r.requestAnimationFrame(n)}return{start:function(){e!==!0&&t!==null&&(i=r.requestAnimationFrame(n),e=!0)},stop:function(){r.cancelAnimationFrame(i),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function v1(r){const e=new WeakMap;function t(a,l){const c=a.array,u=a.usage,h=c.byteLength,d=r.createBuffer();r.bindBuffer(l,d),r.bufferData(l,c,u),a.onUploadCallback();let f;if(c instanceof Float32Array)f=r.FLOAT;else if(typeof Float16Array<"u"&&c instanceof Float16Array)f=r.HALF_FLOAT;else if(c instanceof Uint16Array)a.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(c instanceof Int16Array)f=r.SHORT;else if(c instanceof Uint32Array)f=r.UNSIGNED_INT;else if(c instanceof Int32Array)f=r.INT;else if(c instanceof Int8Array)f=r.BYTE;else if(c instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(c instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+c);return{buffer:d,type:f,bytesPerElement:c.BYTES_PER_ELEMENT,version:a.version,size:h}}function i(a,l,c){const u=l.array,h=l.updateRanges;if(r.bindBuffer(c,a),h.length===0)r.bufferSubData(c,0,u);else{h.sort((f,p)=>f.start-p.start);let d=0;for(let f=1;f<h.length;f++){const p=h[d],_=h[f];_.start<=p.start+p.count+1?p.count=Math.max(p.count,_.start+_.count-p.start):(++d,h[d]=_)}h.length=d+1;for(let f=0,p=h.length;f<p;f++){const _=h[f];r.bufferSubData(c,_.start*u.BYTES_PER_ELEMENT,u,_.start,_.count)}l.clearUpdateRanges()}l.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),e.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const l=e.get(a);l&&(r.deleteBuffer(l.buffer),e.delete(a))}function o(a,l){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const u=e.get(a);(!u||u.version<a.version)&&e.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const c=e.get(a);if(c===void 0)e.set(a,t(a,l));else if(c.version<a.version){if(c.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(c.buffer,a,l),c.version=a.version}}return{get:n,remove:s,update:o}}const M1=`
#ifdef USE_ALPHAHASH

	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;

#endif
`,E1=`
#ifdef USE_ALPHAHASH

	/**
	 * See: https://casual-effects.com/research/Wyman2017Hashed/index.html
	 */

	const float ALPHA_HASH_SCALE = 0.05; // Derived from trials only, and may be changed.

	float hash2D( vec2 value ) {

		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );

	}

	float hash3D( vec3 value ) {

		return hash2D( vec2( hash2D( value.xy ), value.z ) );

	}

	float getAlphaHashThreshold( vec3 position ) {

		// Find the discretized derivatives of our coordinates
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );

		// Find two nearest log-discretized noise scales
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);

		// Compute alpha thresholds at our two noise scales
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);

		// Factor to interpolate lerp with
		float lerpFactor = fract( log2( pixScale ) );

		// Interpolate alpha threshold from noise at two scales
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;

		// Pass into CDF to compute uniformly distrib threshold
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);

		// Find our final, uniformly distributed alpha threshold (ατ)
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;

		// Avoids ατ == 0. Could also do ατ =1-ατ
		return clamp( threshold , 1.0e-6, 1.0 );

	}

#endif
`,A1=`
#ifdef USE_ALPHAMAP

	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;

#endif
`,w1=`
#ifdef USE_ALPHAMAP

	uniform sampler2D alphaMap;

#endif
`,R1=`
#ifdef USE_ALPHATEST

	#ifdef ALPHA_TO_COVERAGE

	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;

	#else

	if ( diffuseColor.a < alphaTest ) discard;

	#endif

#endif
`,C1=`
#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif
`,N1=`
#ifdef USE_AOMAP

	// reads channel R, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;

	reflectedLight.indirectDiffuse *= ambientOcclusion;

	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif

	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif

	#if defined( USE_ENVMAP ) && defined( STANDARD )

		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );

		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );

	#endif

#endif
`,P1=`
#ifdef USE_AOMAP

	uniform sampler2D aoMap;
	uniform float aoMapIntensity;

#endif
`,D1=`
#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif

	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {

		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );

	}

	float getIndirectIndex( const in int i ) {

		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );

	}

#endif

#ifdef USE_BATCHING_COLOR

	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {

		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;

	}

#endif
`,L1=`
#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif
`,I1=`
vec3 transformed = vec3( position );

#ifdef USE_ALPHAHASH

	vPosition = vec3( position );

#endif
`,F1=`
vec3 objectNormal = vec3( normal );

#ifdef USE_TANGENT

	vec3 objectTangent = vec3( tangent.xyz );

#endif
`,U1=`

float G_BlinnPhong_Implicit( /* const in float dotNL, const in float dotNV */ ) {

	// geometry term is (n dot l)(n dot v) / 4(n dot l)(n dot v)
	return 0.25;

}

float D_BlinnPhong( const in float shininess, const in float dotNH ) {

	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );

}

vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {

	vec3 halfDir = normalize( lightDir + viewDir );

	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );

	vec3 F = F_Schlick( specularColor, 1.0, dotVH );

	float G = G_BlinnPhong_Implicit( /* dotNL, dotNV */ );

	float D = D_BlinnPhong( shininess, dotNH );

	return F * ( G * D );

} // validated

`,B1=`

#ifdef USE_IRIDESCENCE

	// XYZ to linear-sRGB color space
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);

	// Assume air interface for top
	// Note: We don't handle the case fresnel0 == 1
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {

		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );

	}

	// Conversion FO/IOR
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {

		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );

	}

	// ior is a value between 1.0 and 3.0. 1.0 is air interface
	float IorToFresnel0( float transmittedIor, float incidentIor ) {

		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));

	}

	// Fresnel equations for dielectric/dielectric interfaces.
	// Ref: https://belcour.github.io/blog/research/2017/05/01/brdf-thin-film.html
	// Evaluation XYZ sensitivity curves in Fourier space
	vec3 evalSensitivity( float OPD, vec3 shift ) {

		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );

		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;

		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;

	}

	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {

		vec3 I;

		// Force iridescenceIOR -> outsideIOR when thinFilmThickness -> 0.0
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		// Evaluate the cosTheta on the base layer (Snell law)
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );

		// Handle TIR:
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {

			return vec3( 1.0 );

		}

		float cosTheta2 = sqrt( cosTheta2Sq );

		// First interface
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;

		// Second interface
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) ); // guard against 1.0
		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;

		// Phase shift
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;

		// Compound terms
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );

		// Reflectance term for m = 0 (DC term amplitude)
		vec3 C0 = R12 + Rs;
		I = C0;

		// Reflectance term for m > 0 (pairs of diracs)
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {

			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;

		}

		// Since out of gamut colors might be produced, negative color values are clamped to 0.
		return max( I, vec3( 0.0 ) );

	}

#endif

`,O1=`
#ifdef USE_BUMPMAP

	uniform sampler2D bumpMap;
	uniform float bumpScale;

	// Bump Mapping Unparametrized Surfaces on the GPU by Morten S. Mikkelsen
	// https://mmikk.github.io/papers3d/mm_sfgrad_bump.pdf

	// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)

	vec2 dHdxy_fwd() {

		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );

		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;

		return vec2( dBx, dBy );

	}

	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {

		// normalize is done to ensure that the bump map looks the same regardless of the texture's scale
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm; // normalized

		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );

		float fDet = dot( vSigmaX, R1 ) * faceDirection;

		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );

	}

#endif
`,k1=`
#if NUM_CLIPPING_PLANES > 0

	vec4 plane;

	#ifdef ALPHA_TO_COVERAGE

		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;

		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {

			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );

			if ( clipOpacity == 0.0 ) discard;

		}
		#pragma unroll_loop_end

		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES

			float unionClipOpacity = 1.0;

			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {

				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );

			}
			#pragma unroll_loop_end

			clipOpacity *= 1.0 - unionClipOpacity;

		#endif

		diffuseColor.a *= clipOpacity;

		if ( diffuseColor.a == 0.0 ) discard;

	#else

		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {

			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;

		}
		#pragma unroll_loop_end

		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES

			bool clipped = true;

			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {

				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;

			}
			#pragma unroll_loop_end

			if ( clipped ) discard;

		#endif

	#endif

#endif
`,z1=`
#if NUM_CLIPPING_PLANES > 0

	varying vec3 vClipPosition;

	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];

#endif
`,G1=`
#if NUM_CLIPPING_PLANES > 0

	varying vec3 vClipPosition;

#endif
`,V1=`
#if NUM_CLIPPING_PLANES > 0

	vClipPosition = - mvPosition.xyz;

#endif
`,H1=`
#if defined( USE_COLOR_ALPHA )

	diffuseColor *= vColor;

#elif defined( USE_COLOR )

	diffuseColor.rgb *= vColor;

#endif
`,W1=`
#if defined( USE_COLOR_ALPHA )

	varying vec4 vColor;

#elif defined( USE_COLOR )

	varying vec3 vColor;

#endif
`,$1=`
#if defined( USE_COLOR_ALPHA )

	varying vec4 vColor;

#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )

	varying vec3 vColor;

#endif
`,X1=`
#if defined( USE_COLOR_ALPHA )

	vColor = vec4( 1.0 );

#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )

	vColor = vec3( 1.0 );

#endif

#ifdef USE_COLOR

	vColor *= color;

#endif

#ifdef USE_INSTANCING_COLOR

	vColor.xyz *= instanceColor.xyz;

#endif

#ifdef USE_BATCHING_COLOR

	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );

	vColor.xyz *= batchingColor.xyz;

#endif
`,q1=`
#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6

#ifndef saturate
// <tonemapping_pars_fragment> may have defined saturate() already
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )

float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }

// expects values in the range of [0,1]x[0,1], returns values in the [0,1] range.
// do not collapse into a single function per: http://byteblacksmith.com/improvements-to-the-canonical-one-liner-glsl-rand-for-opengl-es-2-0/
highp float rand( const in vec2 uv ) {

	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );

	return fract( sin( sn ) * c );

}

#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif

struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};

struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};

#ifdef USE_ALPHAHASH

	varying vec3 vPosition;

#endif

vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

}

vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {

	// dir can be either a direction vector or a normal vector
	// upper-left 3x3 of matrix is assumed to be orthogonal

	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );

}

mat3 transposeMat3( const in mat3 m ) {

	mat3 tmp;

	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );

	return tmp;

}

bool isPerspectiveMatrix( mat4 m ) {

	return m[ 2 ][ 3 ] == - 1.0;

}

vec2 equirectUv( in vec3 dir ) {

	// dir is assumed to be unit length

	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;

	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;

	return vec2( u, v );

}

vec3 BRDF_Lambert( const in vec3 diffuseColor ) {

	return RECIPROCAL_PI * diffuseColor;

} // validated

vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {

	// Original approximation by Christophe Schlick '94
	// float fresnel = pow( 1.0 - dotVH, 5.0 );

	// Optimized variant (presented by Epic at SIGGRAPH '13)
	// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );

	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );

} // validated

float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {

	// Original approximation by Christophe Schlick '94
	// float fresnel = pow( 1.0 - dotVH, 5.0 );

	// Optimized variant (presented by Epic at SIGGRAPH '13)
	// https://cdn2.unrealengine.com/Resources/files/2013SiggraphPresentationsNotes-26915738.pdf
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );

	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );

} // validated
`,Y1=`
#ifdef ENVMAP_TYPE_CUBE_UV

	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0

	// These shader functions convert between the UV coordinates of a single face of
	// a cubemap, the 0-5 integer index of a cube face, and the direction vector for
	// sampling a textureCube (not generally normalized ).

	float getFace( vec3 direction ) {

		vec3 absDirection = abs( direction );

		float face = - 1.0;

		if ( absDirection.x > absDirection.z ) {

			if ( absDirection.x > absDirection.y )

				face = direction.x > 0.0 ? 0.0 : 3.0;

			else

				face = direction.y > 0.0 ? 1.0 : 4.0;

		} else {

			if ( absDirection.z > absDirection.y )

				face = direction.z > 0.0 ? 2.0 : 5.0;

			else

				face = direction.y > 0.0 ? 1.0 : 4.0;

		}

		return face;

	}

	// RH coordinate system; PMREM face-indexing convention
	vec2 getUV( vec3 direction, float face ) {

		vec2 uv;

		if ( face == 0.0 ) {

			uv = vec2( direction.z, direction.y ) / abs( direction.x ); // pos x

		} else if ( face == 1.0 ) {

			uv = vec2( - direction.x, - direction.z ) / abs( direction.y ); // pos y

		} else if ( face == 2.0 ) {

			uv = vec2( - direction.x, direction.y ) / abs( direction.z ); // pos z

		} else if ( face == 3.0 ) {

			uv = vec2( - direction.z, direction.y ) / abs( direction.x ); // neg x

		} else if ( face == 4.0 ) {

			uv = vec2( - direction.x, direction.z ) / abs( direction.y ); // neg y

		} else {

			uv = vec2( direction.x, direction.y ) / abs( direction.z ); // neg z

		}

		return 0.5 * ( uv + 1.0 );

	}

	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {

		float face = getFace( direction );

		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );

		mipInt = max( mipInt, cubeUV_minMipLevel );

		float faceSize = exp2( mipInt );

		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0; // #25071

		if ( face > 2.0 ) {

			uv.y += faceSize;

			face -= 3.0;

		}

		uv.x += face * faceSize;

		uv.x += filterInt * 3.0 * cubeUV_minTileSize;

		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );

		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;

		#ifdef texture2DGradEXT

			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb; // disable anisotropic filtering

		#else

			return texture2D( envMap, uv ).rgb;

		#endif

	}

	// These defines must match with PMREMGenerator

	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0

	float roughnessToMip( float roughness ) {

		float mip = 0.0;

		if ( roughness >= cubeUV_r1 ) {

			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;

		} else if ( roughness >= cubeUV_r4 ) {

			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;

		} else if ( roughness >= cubeUV_r5 ) {

			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;

		} else if ( roughness >= cubeUV_r6 ) {

			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;

		} else {

			mip = - 2.0 * log2( 1.16 * roughness ); // 1.16 = 1.79^0.25
		}

		return mip;

	}

	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {

		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );

		float mipF = fract( mip );

		float mipInt = floor( mip );

		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );

		if ( mipF == 0.0 ) {

			return vec4( color0, 1.0 );

		} else {

			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );

			return vec4( mix( color0, color1, mipF ), 1.0 );

		}

	}

#endif
`,j1=`

vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT

	vec3 transformedTangent = objectTangent;

#endif

#ifdef USE_BATCHING

	// this is in lieu of a per-instance normal-matrix
	// shear transforms in the instance matrix are not supported

	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;

	#ifdef USE_TANGENT

		transformedTangent = bm * transformedTangent;

	#endif

#endif

#ifdef USE_INSTANCING

	// this is in lieu of a per-instance normal-matrix
	// shear transforms in the instance matrix are not supported

	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;

	#ifdef USE_TANGENT

		transformedTangent = im * transformedTangent;

	#endif

#endif

transformedNormal = normalMatrix * transformedNormal;

#ifdef FLIP_SIDED

	transformedNormal = - transformedNormal;

#endif

#ifdef USE_TANGENT

	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;

	#ifdef FLIP_SIDED

		transformedTangent = - transformedTangent;

	#endif

#endif
`,K1=`
#ifdef USE_DISPLACEMENTMAP

	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;

#endif
`,Z1=`
#ifdef USE_DISPLACEMENTMAP

	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );

#endif
`,Q1=`
#ifdef USE_EMISSIVEMAP

	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );

	#ifdef DECODE_VIDEO_TEXTURE_EMISSIVE

		// use inline sRGB decode until browsers properly support SRGB8_ALPHA8 with video textures (#26516)

		emissiveColor = sRGBTransferEOTF( emissiveColor );

	#endif

	totalEmissiveRadiance *= emissiveColor.rgb;

#endif
`,J1=`
#ifdef USE_EMISSIVEMAP

	uniform sampler2D emissiveMap;

#endif
`,eA=`
gl_FragColor = linearToOutputTexel( gl_FragColor );
`,tA=`

vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}

vec4 sRGBTransferEOTF( in vec4 value ) {
	return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );
}

vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}

`,iA=`
#ifdef USE_ENVMAP

	#ifdef ENV_WORLDPOS

		vec3 cameraToFrag;

		if ( isOrthographic ) {

			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );

		} else {

			cameraToFrag = normalize( vWorldPosition - cameraPosition );

		}

		// Transforming Normal Vectors with the Inverse Transformation
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );

		#ifdef ENVMAP_MODE_REFLECTION

			vec3 reflectVec = reflect( cameraToFrag, worldNormal );

		#else

			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );

		#endif

	#else

		vec3 reflectVec = vReflect;

	#endif

	#ifdef ENVMAP_TYPE_CUBE

		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );

	#else

		vec4 envColor = vec4( 0.0 );

	#endif

	#ifdef ENVMAP_BLENDING_MULTIPLY

		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );

	#elif defined( ENVMAP_BLENDING_MIX )

		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );

	#elif defined( ENVMAP_BLENDING_ADD )

		outgoingLight += envColor.xyz * specularStrength * reflectivity;

	#endif

#endif
`,nA=`
#ifdef USE_ENVMAP

	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;

	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif
`,sA=`
#ifdef USE_ENVMAP

	uniform float reflectivity;

	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )

		#define ENV_WORLDPOS

	#endif

	#ifdef ENV_WORLDPOS

		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif

#endif
`,rA=`
#ifdef USE_ENVMAP

	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )

		#define ENV_WORLDPOS

	#endif

	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;

	#else

		varying vec3 vReflect;
		uniform float refractionRatio;

	#endif

#endif
`,oA=`
#ifdef USE_ENVMAP

	#ifdef ENV_WORLDPOS

		vWorldPosition = worldPosition.xyz;

	#else

		vec3 cameraToVertex;

		if ( isOrthographic ) {

			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );

		} else {

			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );

		}

		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );

		#ifdef ENVMAP_MODE_REFLECTION

			vReflect = reflect( cameraToVertex, worldNormal );

		#else

			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );

		#endif

	#endif

#endif
`,aA=`
#ifdef USE_FOG

	vFogDepth = - mvPosition.z;

#endif
`,lA=`
#ifdef USE_FOG

	varying float vFogDepth;

#endif
`,cA=`
#ifdef USE_FOG

	#ifdef FOG_EXP2

		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );

	#else

		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );

	#endif

	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );

#endif
`,uA=`
#ifdef USE_FOG

	uniform vec3 fogColor;
	varying float vFogDepth;

	#ifdef FOG_EXP2

		uniform float fogDensity;

	#else

		uniform float fogNear;
		uniform float fogFar;

	#endif

#endif
`,hA=`

#ifdef USE_GRADIENTMAP

	uniform sampler2D gradientMap;

#endif

vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {

	// dotNL will be from -1.0 to 1.0
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );

	#ifdef USE_GRADIENTMAP

		return vec3( texture2D( gradientMap, coord ).r );

	#else

		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );

	#endif

}
`,dA=`
#ifdef USE_LIGHTMAP

	uniform sampler2D lightMap;
	uniform float lightMapIntensity;

#endif
`,fA=`
LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;
`,pA=`
varying vec3 vViewPosition;

struct LambertMaterial {

	vec3 diffuseColor;
	float specularStrength;

};

void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {

	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
`,mA=`
uniform bool receiveShadow;
uniform vec3 ambientLightColor;

#if defined( USE_LIGHT_PROBES )

	uniform vec3 lightProbe[ 9 ];

#endif

// get the irradiance (radiance convolved with cosine lobe) at the point 'normal' on the unit sphere
// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {

	// normal is assumed to have unit length

	float x = normal.x, y = normal.y, z = normal.z;

	// band 0
	vec3 result = shCoefficients[ 0 ] * 0.886227;

	// band 1
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;

	// band 2
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );

	return result;

}

vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {

	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );

	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );

	return irradiance;

}

vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {

	vec3 irradiance = ambientLightColor;

	return irradiance;

}

float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {

	// based upon Frostbite 3 Moving to Physically-based Rendering
	// page 32, equation 26: E[window1]
	// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );

	if ( cutoffDistance > 0.0 ) {

		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );

	}

	return distanceFalloff;

}

float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {

	return smoothstep( coneCosine, penumbraCosine, angleCosine );

}

#if NUM_DIR_LIGHTS > 0

	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};

	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];

	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {

		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;

	}

#endif


#if NUM_POINT_LIGHTS > 0

	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};

	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];

	// light is an out parameter as having it as a return value caused compiler errors on some devices
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {

		vec3 lVector = pointLight.position - geometryPosition;

		light.direction = normalize( lVector );

		float lightDistance = length( lVector );

		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );

	}

#endif


#if NUM_SPOT_LIGHTS > 0

	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};

	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];

	// light is an out parameter as having it as a return value caused compiler errors on some devices
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {

		vec3 lVector = spotLight.position - geometryPosition;

		light.direction = normalize( lVector );

		float angleCos = dot( light.direction, spotLight.direction );

		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );

		if ( spotAttenuation > 0.0 ) {

			float lightDistance = length( lVector );

			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );

		} else {

			light.color = vec3( 0.0 );
			light.visible = false;

		}

	}

#endif


#if NUM_RECT_AREA_LIGHTS > 0

	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};

	// Pre-computed values of LinearTransformedCosine approximation of BRDF
	// BRDF approximation Texture is 64x64
	uniform sampler2D ltc_1; // RGBA Float
	uniform sampler2D ltc_2; // RGBA Float

	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];

#endif


#if NUM_HEMI_LIGHTS > 0

	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};

	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];

	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {

		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;

		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );

		return irradiance;

	}

#endif
`,gA=`
#ifdef USE_ENVMAP

	vec3 getIBLIrradiance( const in vec3 normal ) {

		#ifdef ENVMAP_TYPE_CUBE_UV

			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );

			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );

			return PI * envMapColor.rgb * envMapIntensity;

		#else

			return vec3( 0.0 );

		#endif

	}

	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {

		#ifdef ENVMAP_TYPE_CUBE_UV

			vec3 reflectVec = reflect( - viewDir, normal );

			// Mixing the reflection with the normal is more accurate and keeps rough objects from gathering light from behind their tangent plane.
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );

			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );

			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );

			return envMapColor.rgb * envMapIntensity;

		#else

			return vec3( 0.0 );

		#endif

	}

	#ifdef USE_ANISOTROPY

		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {

			#ifdef ENVMAP_TYPE_CUBE_UV

			  // https://google.github.io/filament/Filament.md.html#lighting/imagebasedlights/anisotropy
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );

				return getIBLRadiance( viewDir, bentNormal, roughness );

			#else

				return vec3( 0.0 );

			#endif

		}

	#endif

#endif
`,_A=`
ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;
`,xA=`
varying vec3 vViewPosition;

struct ToonMaterial {

	vec3 diffuseColor;

};

void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {

	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
`,yA=`
BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`,bA=`
varying vec3 vViewPosition;

struct BlinnPhongMaterial {

	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;

};

void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;

}

void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
`,TA=`
PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );

vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );

material.roughness = max( roughnessFactor, 0.0525 );// 0.0525 corresponds to the base mip of a 256 cubemap.
material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );

#ifdef IOR

	material.ior = ior;

	#ifdef USE_SPECULAR

		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;

		#ifdef USE_SPECULAR_COLORMAP

			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;

		#endif

		#ifdef USE_SPECULAR_INTENSITYMAP

			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;

		#endif

		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );

	#else

		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;

	#endif

	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );

#else

	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;

#endif

#ifdef USE_CLEARCOAT

	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;

	#ifdef USE_CLEARCOATMAP

		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;

	#endif

	#ifdef USE_CLEARCOAT_ROUGHNESSMAP

		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;

	#endif

	material.clearcoat = saturate( material.clearcoat ); // Burley clearcoat model
	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );

#endif

#ifdef USE_DISPERSION

	material.dispersion = dispersion;

#endif

#ifdef USE_IRIDESCENCE

	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;

	#ifdef USE_IRIDESCENCEMAP

		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;

	#endif

	#ifdef USE_IRIDESCENCE_THICKNESSMAP

		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;

	#else

		material.iridescenceThickness = iridescenceThicknessMaximum;

	#endif

#endif

#ifdef USE_SHEEN

	material.sheenColor = sheenColor;

	#ifdef USE_SHEEN_COLORMAP

		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;

	#endif

	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );

	#ifdef USE_SHEEN_ROUGHNESSMAP

		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;

	#endif

#endif

#ifdef USE_ANISOTROPY

	#ifdef USE_ANISOTROPYMAP

		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;

	#else

		vec2 anisotropyV = anisotropyVector;

	#endif

	material.anisotropy = length( anisotropyV );

	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}

	// Roughness along the anisotropy bitangent is the material roughness, while the tangent roughness increases with anisotropy.
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );

	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;

#endif
`,SA=`

struct PhysicalMaterial {

	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;

	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif

	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif

	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif

	#ifdef IOR
		float ior;
	#endif

	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif

	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif

};

// temporary
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );

vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );

    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}

// Moving Frostbite to Physically Based Rendering 3.0 - page 12, listing 2
// https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {

	float a2 = pow2( alpha );

	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );

	return 0.5 / max( gv + gl, EPSILON );

}

// Microfacet Models for Refraction through Rough Surfaces - equation (33)
// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html
// alpha is "roughness squared" in Disney’s reparameterization
float D_GGX( const in float alpha, const in float dotNH ) {

	float a2 = pow2( alpha );

	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0; // avoid alpha = 0 with dotNH = 1

	return RECIPROCAL_PI * a2 / pow2( denom );

}

// https://google.github.io/filament/Filament.md.html#materialsystem/anisotropicmodel/anisotropicspecularbrdf
#ifdef USE_ANISOTROPY

	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {

		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );

		return saturate(v);

	}

	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {

		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;

		return RECIPROCAL_PI * a2 * pow2 ( w2 );

	}

#endif

#ifdef USE_CLEARCOAT

	// GGX Distribution, Schlick Fresnel, GGX_SmithCorrelated Visibility
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {

		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;

		float alpha = pow2( roughness ); // UE4's roughness

		vec3 halfDir = normalize( lightDir + viewDir );

		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );

		vec3 F = F_Schlick( f0, f90, dotVH );

		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );

		float D = D_GGX( alpha, dotNH );

		return F * ( V * D );

	}

#endif

vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {

	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;

	float alpha = pow2( roughness ); // UE4's roughness

	vec3 halfDir = normalize( lightDir + viewDir );

	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );

	vec3 F = F_Schlick( f0, f90, dotVH );

	#ifdef USE_IRIDESCENCE

		F = mix( F, material.iridescenceFresnel, material.iridescence );

	#endif

	#ifdef USE_ANISOTROPY

		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );

		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );

		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );

	#else

		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );

		float D = D_GGX( alpha, dotNH );

	#endif

	return F * ( V * D );

}

// Rect Area Light

// Real-Time Polygonal-Light Shading with Linearly Transformed Cosines
// by Eric Heitz, Jonathan Dupuy, Stephen Hill and David Neubelt
// code: https://github.com/selfshadow/ltc_code/

vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {

	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;

	float dotNV = saturate( dot( N, V ) );

	// texture parameterized by sqrt( GGX alpha ) and sqrt( 1 - cos( theta ) )
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );

	uv = uv * LUT_SCALE + LUT_BIAS;

	return uv;

}

float LTC_ClippedSphereFormFactor( const in vec3 f ) {

	// Real-Time Area Lighting: a Journey from Research to Production (p.102)
	// An approximation of the form factor of a horizon-clipped rectangle.

	float l = length( f );

	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );

}

vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {

	float x = dot( v1, v2 );

	float y = abs( x );

	// rational polynomial approximation to theta / sin( theta ) / 2PI
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;

	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;

	return cross( v1, v2 ) * theta_sintheta;

}

vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {

	// bail if point is on back side of plane of light
	// assumes ccw winding order of light vertices
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );

	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );

	// construct orthonormal basis around N
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 ); // negated from paper; possibly due to a different handedness of world coordinate system

	// compute transform
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );

	// transform rect
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );

	// project rect onto sphere
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );

	// calculate vector form factor
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );

	// adjust for horizon clipping
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );

/*
	// alternate method of adjusting for horizon clipping (see reference)
	// refactoring required
	float len = length( vectorFormFactor );
	float z = vectorFormFactor.z / len;

	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;

	// tabulated horizon-clipped sphere, apparently...
	vec2 uv = vec2( z * 0.5 + 0.5, len );
	uv = uv * LUT_SCALE + LUT_BIAS;

	float scale = texture2D( ltc_2, uv ).w;

	float result = len * scale;
*/

	return vec3( result );

}

// End Rect Area Light

#if defined( USE_SHEEN )

// https://github.com/google/filament/blob/master/shaders/src/brdf.fs
float D_Charlie( float roughness, float dotNH ) {

	float alpha = pow2( roughness );

	// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF"
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 ); // 2^(-14/2), so sin2h^2 > 0 in fp16

	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );

}

// https://github.com/google/filament/blob/master/shaders/src/brdf.fs
float V_Neubelt( float dotNV, float dotNL ) {

	// Neubelt and Pettineo 2013, "Crafting a Next-gen Material Pipeline for The Order: 1886"
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );

}

vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {

	vec3 halfDir = normalize( lightDir + viewDir );

	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );

	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );

	return sheenColor * ( D * V );

}

#endif

// This is a curve-fit approximation to the "Charlie sheen" BRDF integrated over the hemisphere from
// Estevez and Kulla 2017, "Production Friendly Microfacet Sheen BRDF". The analysis can be found
// in the Sheen section of https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {

	float dotNV = saturate( dot( normal, viewDir ) );

	float r2 = roughness * roughness;

	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;

	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;

	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );

	return saturate( DG * RECIPROCAL_PI );

}

// Analytical approximation of the DFG LUT, one half of the
// split-sum approximation used in indirect specular lighting.
// via 'environmentBRDF' from "Physically Based Shading on Mobile"
// https://www.unrealengine.com/blog/physically-based-shading-on-mobile
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {

	float dotNV = saturate( dot( normal, viewDir ) );

	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );

	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );

	vec4 r = roughness * c0 + c1;

	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;

	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;

	return fab;

}

vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {

	vec2 fab = DFGApprox( normal, viewDir, roughness );

	return specularColor * fab.x + specularF90 * fab.y;

}

// Fdez-Agüera's "Multiple-Scattering Microfacet Model for Real-Time Image Based Lighting"
// Approximates multiscattering in order to preserve energy.
// http://www.jcgt.org/published/0008/01/03/
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif

	vec2 fab = DFGApprox( normal, viewDir, roughness );

	#ifdef USE_IRIDESCENCE

		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );

	#else

		vec3 Fr = specularColor;

	#endif

	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;

	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;

	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619; // 1/21
	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );

	singleScatter += FssEss;
	multiScatter += Fms * Ems;

}

#if NUM_RECT_AREA_LIGHTS > 0

	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {

		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;

		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight; // counterclockwise; light shines in local neg z direction
		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;

		vec2 uv = LTC_Uv( normal, viewDir, roughness );

		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );

		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);

		// LTC Fresnel Approximation by Stephen Hill
		// http://blog.selfshadow.com/publications/s2016-advances/s2016_ltc_fresnel.pdf
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );

		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );

		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );

	}

#endif

void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {

	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );

	vec3 irradiance = dotNL * directLight.color;

	#ifdef USE_CLEARCOAT

		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );

		vec3 ccIrradiance = dotNLcc * directLight.color;

		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );

	#endif

	#ifdef USE_SHEEN

		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );

	#endif

	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );

	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}

void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {

	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );

}

void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {

	#ifdef USE_CLEARCOAT

		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );

	#endif

	#ifdef USE_SHEEN

		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );

	#endif

	// Both indirect specular and indirect diffuse light accumulate here

	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;

	#ifdef USE_IRIDESCENCE

		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );

	#else

		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );

	#endif

	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );

	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;

	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;

}

#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical

// ref: https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {

	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );

}
`,vA=`
/**
 * This is a template that can be used to light a material, it uses pluggable
 * RenderEquations (RE)for specific lighting scenarios.
 *
 * Instructions for use:
 * - Ensure that both RE_Direct, RE_IndirectDiffuse and RE_IndirectSpecular are defined
 * - Create a material parameter that is to be passed as the third parameter to your lighting functions.
 *
 * TODO:
 * - Add area light support.
 * - Add sphere light support.
 * - Add diffuse light probe (irradiance cubemap) support.
 */

vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );

vec3 geometryClearcoatNormal = vec3( 0.0 );

#ifdef USE_CLEARCOAT

	geometryClearcoatNormal = clearcoatNormal;

#endif

#ifdef USE_IRIDESCENCE

	float dotNVi = saturate( dot( normal, geometryViewDir ) );

	if ( material.iridescenceThickness == 0.0 ) {

		material.iridescence = 0.0;

	} else {

		material.iridescence = saturate( material.iridescence );

	}

	if ( material.iridescence > 0.0 ) {

		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );

		// Iridescence F0 approximation
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );

	}

#endif

IncidentLight directLight;

#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )

	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {

		pointLight = pointLights[ i ];

		getPointLightInfo( pointLight, geometryPosition, directLight );

		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif

		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )

	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;

	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {

		spotLight = spotLights[ i ];

		getSpotLightInfo( spotLight, geometryPosition, directLight );

		// spot lights are ordered [shadows with maps, shadows without maps, maps without shadows, none]
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif

		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif

		#undef SPOT_LIGHT_MAP_INDEX

		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif

		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )

	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {

		directionalLight = directionalLights[ i ];

		getDirectionalLightInfo( directionalLight, directLight );

		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif

		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )

	RectAreaLight rectAreaLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {

		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );

	}
	#pragma unroll_loop_end

#endif

#if defined( RE_IndirectDiffuse )

	vec3 iblIrradiance = vec3( 0.0 );

	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );

	#if defined( USE_LIGHT_PROBES )

		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );

	#endif

	#if ( NUM_HEMI_LIGHTS > 0 )

		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {

			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );

		}
		#pragma unroll_loop_end

	#endif

#endif

#if defined( RE_IndirectSpecular )

	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );

#endif
`,MA=`
#if defined( RE_IndirectDiffuse )

	#ifdef USE_LIGHTMAP

		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;

		irradiance += lightMapIrradiance;

	#endif

	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )

		iblIrradiance += getIBLIrradiance( geometryNormal );

	#endif

#endif

#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )

	#ifdef USE_ANISOTROPY

		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );

	#else

		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );

	#endif

	#ifdef USE_CLEARCOAT

		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );

	#endif

#endif
`,EA=`
#if defined( RE_IndirectDiffuse )

	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );

#endif

#if defined( RE_IndirectSpecular )

	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );

#endif
`,AA=`
#if defined( USE_LOGDEPTHBUF )

	// Doing a strict comparison with == 1.0 can cause noise artifacts
	// on some platforms. See issue #17623.
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;

#endif
`,wA=`
#if defined( USE_LOGDEPTHBUF )

	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;

#endif
`,RA=`
#ifdef USE_LOGDEPTHBUF

	varying float vFragDepth;
	varying float vIsPerspective;

#endif
`,CA=`
#ifdef USE_LOGDEPTHBUF

	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );

#endif
`,NA=`
#ifdef USE_MAP

	vec4 sampledDiffuseColor = texture2D( map, vMapUv );

	#ifdef DECODE_VIDEO_TEXTURE

		// use inline sRGB decode until browsers properly support SRGB8_ALPHA8 with video textures (#26516)

		sampledDiffuseColor = sRGBTransferEOTF( sampledDiffuseColor );

	#endif

	diffuseColor *= sampledDiffuseColor;

#endif
`,PA=`
#ifdef USE_MAP

	uniform sampler2D map;

#endif
`,DA=`
#if defined( USE_MAP ) || defined( USE_ALPHAMAP )

	#if defined( USE_POINTS_UV )

		vec2 uv = vUv;

	#else

		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;

	#endif

#endif

#ifdef USE_MAP

	diffuseColor *= texture2D( map, uv );

#endif

#ifdef USE_ALPHAMAP

	diffuseColor.a *= texture2D( alphaMap, uv ).g;

#endif
`,LA=`
#if defined( USE_POINTS_UV )

	varying vec2 vUv;

#else

	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )

		uniform mat3 uvTransform;

	#endif

#endif

#ifdef USE_MAP

	uniform sampler2D map;

#endif

#ifdef USE_ALPHAMAP

	uniform sampler2D alphaMap;

#endif
`,IA=`
float metalnessFactor = metalness;

#ifdef USE_METALNESSMAP

	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );

	// reads channel B, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
	metalnessFactor *= texelMetalness.b;

#endif
`,FA=`
#ifdef USE_METALNESSMAP

	uniform sampler2D metalnessMap;

#endif
`,UA=`
#ifdef USE_INSTANCING_MORPH

	float morphTargetInfluences[ MORPHTARGETS_COUNT ];

	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;

	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {

		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;

	}
#endif
`,BA=`
#if defined( USE_MORPHCOLORS )

	// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:
	// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)
	// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting
	vColor *= morphTargetBaseInfluence;

	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {

		#if defined( USE_COLOR_ALPHA )

			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];

		#elif defined( USE_COLOR )

			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];

		#endif

	}

#endif
`,OA=`
#ifdef USE_MORPHNORMALS

	// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:
	// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in normal = sum((target - base) * influence)
	// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting
	objectNormal *= morphTargetBaseInfluence;

	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {

		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];

	}

#endif
`,kA=`
#ifdef USE_MORPHTARGETS

	#ifndef USE_INSTANCING_MORPH

		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];

	#endif

	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;

	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {

		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;

		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );

	}

#endif
`,zA=`
#ifdef USE_MORPHTARGETS

	// morphTargetBaseInfluence is set based on BufferGeometry.morphTargetsRelative value:
	// When morphTargetsRelative is false, this is set to 1 - sum(influences); this results in position = sum((target - base) * influence)
	// When morphTargetsRelative is true, this is set to 1; as a result, all morph targets are simply added to the base after weighting
	transformed *= morphTargetBaseInfluence;

	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {

		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];

	}

#endif
`,GA=`
float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;

#ifdef FLAT_SHADED

	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );

#else

	vec3 normal = normalize( vNormal );

	#ifdef DOUBLE_SIDED

		normal *= faceDirection;

	#endif

#endif

#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )

	#ifdef USE_TANGENT

		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );

	#else

		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);

	#endif

	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )

		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;

	#endif

#endif

#ifdef USE_CLEARCOAT_NORMALMAP

	#ifdef USE_TANGENT

		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );

	#else

		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );

	#endif

	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )

		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;

	#endif

#endif

// non perturbed normal for clearcoat among others

vec3 nonPerturbedNormal = normal;

`,VA=`

#ifdef USE_NORMALMAP_OBJECTSPACE

	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0; // overrides both flatShading and attribute normals

	#ifdef FLIP_SIDED

		normal = - normal;

	#endif

	#ifdef DOUBLE_SIDED

		normal = normal * faceDirection;

	#endif

	normal = normalize( normalMatrix * normal );

#elif defined( USE_NORMALMAP_TANGENTSPACE )

	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;

	normal = normalize( tbn * mapN );

#elif defined( USE_BUMPMAP )

	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );

#endif
`,HA=`
#ifndef FLAT_SHADED

	varying vec3 vNormal;

	#ifdef USE_TANGENT

		varying vec3 vTangent;
		varying vec3 vBitangent;

	#endif

#endif
`,WA=`
#ifndef FLAT_SHADED

	varying vec3 vNormal;

	#ifdef USE_TANGENT

		varying vec3 vTangent;
		varying vec3 vBitangent;

	#endif

#endif
`,$A=`
#ifndef FLAT_SHADED // normal is computed with derivatives when FLAT_SHADED

	vNormal = normalize( transformedNormal );

	#ifdef USE_TANGENT

		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );

	#endif

#endif
`,XA=`
#ifdef USE_NORMALMAP

	uniform sampler2D normalMap;
	uniform vec2 normalScale;

#endif

#ifdef USE_NORMALMAP_OBJECTSPACE

	uniform mat3 normalMatrix;

#endif

#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )

	// Normal Mapping Without Precomputed Tangents
	// http://www.thetenthplanet.de/archives/1180

	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {

		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );

		vec3 N = surf_norm; // normalized

		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );

		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;

		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );

		return mat3( T * scale, B * scale, N );

	}

#endif
`,qA=`
#ifdef USE_CLEARCOAT

	vec3 clearcoatNormal = nonPerturbedNormal;

#endif
`,YA=`
#ifdef USE_CLEARCOAT_NORMALMAP

	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;

	clearcoatNormal = normalize( tbn2 * clearcoatMapN );

#endif
`,jA=`

#ifdef USE_CLEARCOATMAP

	uniform sampler2D clearcoatMap;

#endif

#ifdef USE_CLEARCOAT_NORMALMAP

	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;

#endif

#ifdef USE_CLEARCOAT_ROUGHNESSMAP

	uniform sampler2D clearcoatRoughnessMap;

#endif
`,KA=`

#ifdef USE_IRIDESCENCEMAP

	uniform sampler2D iridescenceMap;

#endif

#ifdef USE_IRIDESCENCE_THICKNESSMAP

	uniform sampler2D iridescenceThicknessMap;

#endif
`,ZA=`
#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif

#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif

gl_FragColor = vec4( outgoingLight, diffuseColor.a );
`,QA=`
vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}

vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}

const float PackUpscale = 256. / 255.; // fraction -> 0..1 (including 1)
const float UnpackDownscale = 255. / 256.; // 0..1 -> fraction (excluding 1)
const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;

const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );

const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );

vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}

vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	// the 0.9999 tweak is unimportant, very tiny empirical improvement
	// return vec3( vuf * Inv255, gf * PackUpscale, bf * 0.9999 );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}

vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}

float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}

float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}

float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}

vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}

vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}

// NOTE: viewZ, the z-coordinate in camera space, is negative for points in front of the camera

float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	// -near maps to 0; -far maps to 1
	return ( viewZ + near ) / ( near - far );
}

float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	// maps orthographic depth in [ 0, 1 ] to viewZ
	return depth * ( near - far ) - near;
}

// NOTE: https://twitter.com/gonnavis/status/1377183786949959682

float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	// -near maps to 0; -far maps to 1
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}

float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	// maps perspective depth in [ 0, 1 ] to viewZ
	return ( near * far ) / ( ( far - near ) * depth - far );
}
`,JA=`
#ifdef PREMULTIPLIED_ALPHA

	// Get normal blending with premultipled, use with CustomBlending, OneFactor, OneMinusSrcAlphaFactor, AddEquation.
	gl_FragColor.rgb *= gl_FragColor.a;

#endif
`,ew=`
vec4 mvPosition = vec4( transformed, 1.0 );

#ifdef USE_BATCHING

	mvPosition = batchingMatrix * mvPosition;

#endif

#ifdef USE_INSTANCING

	mvPosition = instanceMatrix * mvPosition;

#endif

mvPosition = modelViewMatrix * mvPosition;

gl_Position = projectionMatrix * mvPosition;
`,tw=`
#ifdef DITHERING

	gl_FragColor.rgb = dithering( gl_FragColor.rgb );

#endif
`,iw=`
#ifdef DITHERING

	// based on https://www.shadertoy.com/view/MslGR8
	vec3 dithering( vec3 color ) {
		//Calculate grid position
		float grid_position = rand( gl_FragCoord.xy );

		//Shift the individual colors differently, thus making it even harder to see the dithering pattern
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );

		//modify shift according to grid position.
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );

		//shift the color by dither_shift
		return color + dither_shift_RGB;
	}

#endif
`,nw=`
float roughnessFactor = roughness;

#ifdef USE_ROUGHNESSMAP

	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );

	// reads channel G, compatible with a combined OcclusionRoughnessMetallic (RGB) texture
	roughnessFactor *= texelRoughness.g;

#endif
`,sw=`
#ifdef USE_ROUGHNESSMAP

	uniform sampler2D roughnessMap;

#endif
`,rw=`
#if NUM_SPOT_LIGHT_COORDS > 0

	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];

#endif

#if NUM_SPOT_LIGHT_MAPS > 0

	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];

#endif

#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0

		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];

		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];

		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];

		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};

		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): create uniforms for area light shadows

	#endif
	*/

	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {

		float depth = unpackRGBAToDepth( texture2D( depths, uv ) );

		#ifdef USE_REVERSEDEPTHBUF

			return step( depth, compare );

		#else

			return step( compare, depth );

		#endif

	}

	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {

		return unpackRGBATo2Half( texture2D( shadow, uv ) );

	}

	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){

		float occlusion = 1.0;

		vec2 distribution = texture2DDistribution( shadow, uv );

		#ifdef USE_REVERSEDEPTHBUF

			float hard_shadow = step( distribution.x, compare ); // Hard Shadow

		#else

			float hard_shadow = step( compare , distribution.x ); // Hard Shadow

		#endif

		if (hard_shadow != 1.0 ) {

			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance ); // Chebeyshevs inequality
			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 ); // 0.3 reduces light bleed
			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );

		}
		return occlusion;

	}

	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {

		float shadow = 1.0;

		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;

		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;

		if ( frustumTest ) {

		#if defined( SHADOWMAP_TYPE_PCF )

			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;

			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;

			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );

		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )

			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;

			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;

			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );

		#elif defined( SHADOWMAP_TYPE_VSM )

			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );

		#else // no percentage-closer filtering:

			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );

		#endif

		}

		return mix( 1.0, shadow, shadowIntensity );

	}

	// cubeToUV() maps a 3D direction vector suitable for cube texture mapping to a 2D
	// vector suitable for 2D texture mapping. This code uses the following layout for the
	// 2D texture:
	//
	// xzXZ
	//  y Y
	//
	// Y - Positive y direction
	// y - Negative y direction
	// X - Positive x direction
	// x - Negative x direction
	// Z - Positive z direction
	// z - Negative z direction
	//
	// Source and test bed:
	// https://gist.github.com/tschw/da10c43c467ce8afd0c4

	vec2 cubeToUV( vec3 v, float texelSizeY ) {

		// Number of texels to avoid at the edge of each square

		vec3 absV = abs( v );

		// Intersect unit cube

		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;

		// Apply scale to avoid seams

		// two texels less per square (one texel will do for NEAREST)
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );

		// Unwrap

		// space: -1 ... 1 range for each square
		//
		// #X##		dim    := ( 4 , 2 )
		//  # #		center := ( 1 , 1 )

		vec2 planar = v.xy;

		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;

		if ( absV.z >= almostOne ) {

			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;

		} else if ( absV.x >= almostOne ) {

			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;

		} else if ( absV.y >= almostOne ) {

			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;

		}

		// Transform to UV space

		// scale := 0.5 / dim
		// translate := ( center + 0.5 ) / dim
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );

	}

	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {

		float shadow = 1.0;

		// for point lights, the uniform @vShadowCoord is re-purposed to hold
		// the vector from the light to the world-space position of the fragment.
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );

		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {

			// dp = normalized distance from light to fragment position
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear ); // need to clamp?
			dp += shadowBias;

			// bd3D = base direction 3D
			vec3 bd3D = normalize( lightToPosition );

			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );

			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )

				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;

				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );

			#else // no percentage-closer filtering

				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );

			#endif

		}

		return mix( 1.0, shadow, shadowIntensity );

	}

#endif
`,ow=`

#if NUM_SPOT_LIGHT_COORDS > 0

	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];

#endif

#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0

		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];

		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};

		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];

		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};

		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): uniforms for area light shadows

	#endif
	*/

#endif
`,aw=`

#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )

	// Offsetting the position used for querying occlusion along the world normal can be used to reduce shadow acne.
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;

#endif

#if defined( USE_SHADOWMAP )

	#if NUM_DIR_LIGHT_SHADOWS > 0

		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {

			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;

		}
		#pragma unroll_loop_end

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {

			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;

		}
		#pragma unroll_loop_end

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): update vAreaShadowCoord with area light info

	#endif
	*/

#endif

// spot lights can be evaluated without active shadow mapping (when SpotLight.map is used)

#if NUM_SPOT_LIGHT_COORDS > 0

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {

		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;

	}
	#pragma unroll_loop_end

#endif


`,lw=`
float getShadowMask() {

	float shadow = 1.0;

	#ifdef USE_SHADOWMAP

	#if NUM_DIR_LIGHT_SHADOWS > 0

	DirectionalLightShadow directionalLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {

		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;

	}
	#pragma unroll_loop_end

	#endif

	#if NUM_SPOT_LIGHT_SHADOWS > 0

	SpotLightShadow spotLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {

		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;

	}
	#pragma unroll_loop_end

	#endif

	#if NUM_POINT_LIGHT_SHADOWS > 0

	PointLightShadow pointLight;

	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {

		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;

	}
	#pragma unroll_loop_end

	#endif

	/*
	#if NUM_RECT_AREA_LIGHTS > 0

		// TODO (abelnation): update shadow for Area light

	#endif
	*/

	#endif

	return shadow;

}
`,cw=`
#ifdef USE_SKINNING

	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );

#endif
`,uw=`
#ifdef USE_SKINNING

	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;

	uniform highp sampler2D boneTexture;

	mat4 getBoneMatrix( const in float i ) {

		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );

		return mat4( v1, v2, v3, v4 );

	}

#endif
`,hw=`
#ifdef USE_SKINNING

	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );

	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;

	transformed = ( bindMatrixInverse * skinned ).xyz;

#endif
`,dw=`
#ifdef USE_SKINNING

	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;

	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;

	#ifdef USE_TANGENT

		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;

	#endif

#endif
`,fw=`
float specularStrength;

#ifdef USE_SPECULARMAP

	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;

#else

	specularStrength = 1.0;

#endif
`,pw=`
#ifdef USE_SPECULARMAP

	uniform sampler2D specularMap;

#endif
`,mw=`
#if defined( TONE_MAPPING )

	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );

#endif
`,gw=`
#ifndef saturate
// <common> may have defined saturate() already
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif

uniform float toneMappingExposure;

// exposure only
vec3 LinearToneMapping( vec3 color ) {

	return saturate( toneMappingExposure * color );

}

// source: https://www.cs.utah.edu/docs/techreports/2002/pdf/UUCS-02-001.pdf
vec3 ReinhardToneMapping( vec3 color ) {

	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );

}

// source: http://filmicworlds.com/blog/filmic-tonemapping-operators/
vec3 CineonToneMapping( vec3 color ) {

	// filmic operator by Jim Hejl and Richard Burgess-Dawson
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );

}

// source: https://github.com/selfshadow/ltc_code/blob/master/webgl/shaders/ltc/ltc_blit.fs
vec3 RRTAndODTFit( vec3 v ) {

	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;

}

// this implementation of ACES is modified to accommodate a brighter viewing environment.
// the scale factor of 1/0.6 is subjective. see discussion in #19621.

vec3 ACESFilmicToneMapping( vec3 color ) {

	// sRGB => XYZ => D65_2_D60 => AP1 => RRT_SAT
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ), // transposed from source
		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);

	// ODT_SAT => XYZ => D60_2_D65 => sRGB
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ), // transposed from source
		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);

	color *= toneMappingExposure / 0.6;

	color = ACESInputMat * color;

	// Apply RRT and ODT
	color = RRTAndODTFit( color );

	color = ACESOutputMat * color;

	// Clamp to [0, 1]
	return saturate( color );

}

// Matrices for rec 2020 <> rec 709 color space conversion
// matrix provided in row-major order so it has been transposed
// https://www.itu.int/pub/R-REP-BT.2407-2017
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);

const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);

// https://iolite-engine.com/blog_posts/minimal_agx_implementation
// Mean error^2: 3.6705141e-06
vec3 agxDefaultContrastApprox( vec3 x ) {

	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;

	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;

}

// AgX Tone Mapping implementation based on Filament, which in turn is based
// on Blender's implementation using rec 2020 primaries
// https://github.com/google/filament/pull/7236
// Inputs and outputs are encoded as Linear-sRGB.

vec3 AgXToneMapping( vec3 color ) {

	// AgX constants
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);

	// explicit AgXOutsetMatrix generated from Filaments AgXOutsetMatrixInv
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);

	// LOG2_MIN      = -10.0
	// LOG2_MAX      =  +6.5
	// MIDDLE_GRAY   =  0.18
	const float AgxMinEv = - 12.47393;  // log2( pow( 2, LOG2_MIN ) * MIDDLE_GRAY )
	const float AgxMaxEv = 4.026069;    // log2( pow( 2, LOG2_MAX ) * MIDDLE_GRAY )

	color *= toneMappingExposure;

	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;

	color = AgXInsetMatrix * color;

	// Log2 encoding
	color = max( color, 1e-10 ); // avoid 0 or negative numbers for log2
	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );

	color = clamp( color, 0.0, 1.0 );

	// Apply sigmoid
	color = agxDefaultContrastApprox( color );

	// Apply AgX look
	// v = agxLook(v, look);

	color = AgXOutsetMatrix * color;

	// Linearize
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );

	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;

	// Gamut mapping. Simple clamp for now.
	color = clamp( color, 0.0, 1.0 );

	return color;

}

// https://modelviewer.dev/examples/tone-mapping

vec3 NeutralToneMapping( vec3 color ) {

	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;

	color *= toneMappingExposure;

	float x = min( color.r, min( color.g, color.b ) );

	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;

	color -= offset;

	float peak = max( color.r, max( color.g, color.b ) );

	if ( peak < StartCompression ) return color;

	float d = 1. - StartCompression;

	float newPeak = 1. - d * d / ( peak + d - StartCompression );

	color *= newPeak / peak;

	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );

	return mix( color, vec3( newPeak ), g );

}

vec3 CustomToneMapping( vec3 color ) { return color; }
`,_w=`
#ifdef USE_TRANSMISSION

	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;

	#ifdef USE_TRANSMISSIONMAP

		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;

	#endif

	#ifdef USE_THICKNESSMAP

		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;

	#endif

	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );

	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );

	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );

	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );

#endif
`,xw=`
#ifdef USE_TRANSMISSION

	// Transmission code is based on glTF-Sampler-Viewer
	// https://github.com/KhronosGroup/glTF-Sample-Viewer

	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;

	#ifdef USE_TRANSMISSIONMAP

		uniform sampler2D transmissionMap;

	#endif

	#ifdef USE_THICKNESSMAP

		uniform sampler2D thicknessMap;

	#endif

	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;

	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;

	varying vec3 vWorldPosition;

	// Mipped Bicubic Texture Filtering by N8
	// https://www.shadertoy.com/view/Dl2SDW

	float w0( float a ) {

		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );

	}

	float w1( float a ) {

		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );

	}

	float w2( float a ){

		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );

	}

	float w3( float a ) {

		return ( 1.0 / 6.0 ) * ( a * a * a );

	}

	// g0 and g1 are the two amplitude functions
	float g0( float a ) {

		return w0( a ) + w1( a );

	}

	float g1( float a ) {

		return w2( a ) + w3( a );

	}

	// h0 and h1 are the two offset functions
	float h0( float a ) {

		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );

	}

	float h1( float a ) {

		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );

	}

	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {

		uv = uv * texelSize.zw + 0.5;

		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );

		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );

		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;

		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );

	}

	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {

		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );

	}

	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {

		// Direction of refracted light.
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );

		// Compute rotation-independent scaling of the model matrix.
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );

		// The thickness is specified in local space.
		return normalize( refractionVector ) * thickness * modelScale;

	}

	float applyIorToRoughness( const in float roughness, const in float ior ) {

		// Scale roughness with IOR so that an IOR of 1.0 results in no microfacet refraction and
		// an IOR of 1.5 results in the default amount of microfacet refraction.
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );

	}

	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {

		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );

	}

	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {

		if ( isinf( attenuationDistance ) ) {

			// Attenuation distance is +∞, i.e. the transmitted color is not attenuated at all.
			return vec3( 1.0 );

		} else {

			// Compute light attenuation using Beer's law.
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance ); // Beer's law
			return transmittance;

		}

	}

	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {

		vec4 transmittedLight;
		vec3 transmittance;

		#ifdef USE_DISPERSION

			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );

			for ( int i = 0; i < 3; i ++ ) {

				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;

				// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;

				// Sample framebuffer to get pixel the refracted ray hits.
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;

				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];

			}

			transmittedLight.a /= 3.0;

		#else

			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;

			// Project refracted vector on the framebuffer, while mapping to normalized device coordinates.
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;

			// Sample framebuffer to get pixel the refracted ray hits.
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );

		#endif

		vec3 attenuatedColor = transmittance * transmittedLight.rgb;

		// Get the specular component.
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );

		// As less light is transmitted, the opacity should be increased. This simple approximation does a decent job
		// of modulating a CSS background, and has no effect when the buffer is opaque, due to a solid object or clear color.
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;

		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );

	}
#endif
`,yw=`
#if defined( USE_UV ) || defined( USE_ANISOTROPY )

	varying vec2 vUv;

#endif
#ifdef USE_MAP

	varying vec2 vMapUv;

#endif
#ifdef USE_ALPHAMAP

	varying vec2 vAlphaMapUv;

#endif
#ifdef USE_LIGHTMAP

	varying vec2 vLightMapUv;

#endif
#ifdef USE_AOMAP

	varying vec2 vAoMapUv;

#endif
#ifdef USE_BUMPMAP

	varying vec2 vBumpMapUv;

#endif
#ifdef USE_NORMALMAP

	varying vec2 vNormalMapUv;

#endif
#ifdef USE_EMISSIVEMAP

	varying vec2 vEmissiveMapUv;

#endif
#ifdef USE_METALNESSMAP

	varying vec2 vMetalnessMapUv;

#endif
#ifdef USE_ROUGHNESSMAP

	varying vec2 vRoughnessMapUv;

#endif
#ifdef USE_ANISOTROPYMAP

	varying vec2 vAnisotropyMapUv;

#endif
#ifdef USE_CLEARCOATMAP

	varying vec2 vClearcoatMapUv;

#endif
#ifdef USE_CLEARCOAT_NORMALMAP

	varying vec2 vClearcoatNormalMapUv;

#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP

	varying vec2 vClearcoatRoughnessMapUv;

#endif
#ifdef USE_IRIDESCENCEMAP

	varying vec2 vIridescenceMapUv;

#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP

	varying vec2 vIridescenceThicknessMapUv;

#endif
#ifdef USE_SHEEN_COLORMAP

	varying vec2 vSheenColorMapUv;

#endif
#ifdef USE_SHEEN_ROUGHNESSMAP

	varying vec2 vSheenRoughnessMapUv;

#endif
#ifdef USE_SPECULARMAP

	varying vec2 vSpecularMapUv;

#endif
#ifdef USE_SPECULAR_COLORMAP

	varying vec2 vSpecularColorMapUv;

#endif
#ifdef USE_SPECULAR_INTENSITYMAP

	varying vec2 vSpecularIntensityMapUv;

#endif
#ifdef USE_TRANSMISSIONMAP

	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;

#endif
#ifdef USE_THICKNESSMAP

	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;

#endif
`,bw=`
#if defined( USE_UV ) || defined( USE_ANISOTROPY )

	varying vec2 vUv;

#endif
#ifdef USE_MAP

	uniform mat3 mapTransform;
	varying vec2 vMapUv;

#endif
#ifdef USE_ALPHAMAP

	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;

#endif
#ifdef USE_LIGHTMAP

	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;

#endif
#ifdef USE_AOMAP

	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;

#endif
#ifdef USE_BUMPMAP

	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;

#endif
#ifdef USE_NORMALMAP

	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;

#endif
#ifdef USE_DISPLACEMENTMAP

	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;

#endif
#ifdef USE_EMISSIVEMAP

	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;

#endif
#ifdef USE_METALNESSMAP

	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;

#endif
#ifdef USE_ROUGHNESSMAP

	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;

#endif
#ifdef USE_ANISOTROPYMAP

	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;

#endif
#ifdef USE_CLEARCOATMAP

	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;

#endif
#ifdef USE_CLEARCOAT_NORMALMAP

	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;

#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP

	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;

#endif
#ifdef USE_SHEEN_COLORMAP

	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;

#endif
#ifdef USE_SHEEN_ROUGHNESSMAP

	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;

#endif
#ifdef USE_IRIDESCENCEMAP

	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;

#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP

	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;

#endif
#ifdef USE_SPECULARMAP

	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;

#endif
#ifdef USE_SPECULAR_COLORMAP

	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;

#endif
#ifdef USE_SPECULAR_INTENSITYMAP

	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;

#endif
#ifdef USE_TRANSMISSIONMAP

	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;

#endif
#ifdef USE_THICKNESSMAP

	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;

#endif
`,Tw=`
#if defined( USE_UV ) || defined( USE_ANISOTROPY )

	vUv = vec3( uv, 1 ).xy;

#endif
#ifdef USE_MAP

	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;

#endif
#ifdef USE_ALPHAMAP

	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_LIGHTMAP

	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_AOMAP

	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_BUMPMAP

	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_NORMALMAP

	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_DISPLACEMENTMAP

	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_EMISSIVEMAP

	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_METALNESSMAP

	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_ROUGHNESSMAP

	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_ANISOTROPYMAP

	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_CLEARCOATMAP

	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_CLEARCOAT_NORMALMAP

	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP

	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_IRIDESCENCEMAP

	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP

	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_SHEEN_COLORMAP

	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_SHEEN_ROUGHNESSMAP

	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_SPECULARMAP

	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_SPECULAR_COLORMAP

	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_SPECULAR_INTENSITYMAP

	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_TRANSMISSIONMAP

	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;

#endif
#ifdef USE_THICKNESSMAP

	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;

#endif
`,Sw=`
#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0

	vec4 worldPosition = vec4( transformed, 1.0 );

	#ifdef USE_BATCHING

		worldPosition = batchingMatrix * worldPosition;

	#endif

	#ifdef USE_INSTANCING

		worldPosition = instanceMatrix * worldPosition;

	#endif

	worldPosition = modelMatrix * worldPosition;

#endif
`,vw=`
varying vec2 vUv;
uniform mat3 uvTransform;

void main() {

	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;

	gl_Position = vec4( position.xy, 1.0, 1.0 );

}
`,Mw=`
uniform sampler2D t2D;
uniform float backgroundIntensity;

varying vec2 vUv;

void main() {

	vec4 texColor = texture2D( t2D, vUv );

	#ifdef DECODE_VIDEO_TEXTURE

		// use inline sRGB decode until browsers properly support SRGB8_ALPHA8 with video textures

		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );

	#endif

	texColor.rgb *= backgroundIntensity;

	gl_FragColor = texColor;

	#include <tonemapping_fragment>
	#include <colorspace_fragment>

}
`,Ew=`
varying vec3 vWorldDirection;

#include <common>

void main() {

	vWorldDirection = transformDirection( position, modelMatrix );

	#include <begin_vertex>
	#include <project_vertex>

	gl_Position.z = gl_Position.w; // set z to camera.far

}
`,Aw=`

#ifdef ENVMAP_TYPE_CUBE

	uniform samplerCube envMap;

#elif defined( ENVMAP_TYPE_CUBE_UV )

	uniform sampler2D envMap;

#endif

uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;

varying vec3 vWorldDirection;

#include <cube_uv_reflection_fragment>

void main() {

	#ifdef ENVMAP_TYPE_CUBE

		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );

	#elif defined( ENVMAP_TYPE_CUBE_UV )

		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );

	#else

		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );

	#endif

	texColor.rgb *= backgroundIntensity;

	gl_FragColor = texColor;

	#include <tonemapping_fragment>
	#include <colorspace_fragment>

}
`,ww=`
varying vec3 vWorldDirection;

#include <common>

void main() {

	vWorldDirection = transformDirection( position, modelMatrix );

	#include <begin_vertex>
	#include <project_vertex>

	gl_Position.z = gl_Position.w; // set z to camera.far

}
`,Rw=`
uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;

varying vec3 vWorldDirection;

void main() {

	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );

	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;

	#include <tonemapping_fragment>
	#include <colorspace_fragment>

}
`,Cw=`
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

// This is used for computing an equivalent of gl_FragCoord.z that is as high precision as possible.
// Some platforms compute gl_FragCoord at a lower precision which makes the manually computed value better for
// depth-based postprocessing effects. Reproduced on iPad with A10 processor / iPadOS 13.3.1.
varying vec2 vHighPrecisionZW;

void main() {

	#include <uv_vertex>

	#include <batching_vertex>
	#include <skinbase_vertex>

	#include <morphinstance_vertex>

	#ifdef USE_DISPLACEMENTMAP

		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>

	#endif

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vHighPrecisionZW = gl_Position.zw;

}
`,Nw=`
#if DEPTH_PACKING == 3200

	uniform float opacity;

#endif

#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

varying vec2 vHighPrecisionZW;

void main() {

	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>

	#if DEPTH_PACKING == 3200

		diffuseColor.a = opacity;

	#endif

	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>

	#include <logdepthbuf_fragment>

	// Higher precision equivalent of gl_FragCoord.z

	#ifdef USE_REVERSEDEPTHBUF

		float fragCoordZ = vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ];

	#else

		float fragCoordZ = 0.5 * vHighPrecisionZW[ 0 ] / vHighPrecisionZW[ 1 ] + 0.5;

	#endif

	#if DEPTH_PACKING == 3200

		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );

	#elif DEPTH_PACKING == 3201

		gl_FragColor = packDepthToRGBA( fragCoordZ );

	#elif DEPTH_PACKING == 3202

		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );

	#elif DEPTH_PACKING == 3203

		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );

	#endif

}
`,Pw=`
#define DISTANCE

varying vec3 vWorldPosition;

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>

	#include <batching_vertex>
	#include <skinbase_vertex>

	#include <morphinstance_vertex>

	#ifdef USE_DISPLACEMENTMAP

		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>

	#endif

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>

	vWorldPosition = worldPosition.xyz;

}
`,Dw=`
#define DISTANCE

uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;

#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>

void main () {

	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>

	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>

	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist ); // clamp to [ 0, 1 ]

	gl_FragColor = packDepthToRGBA( dist );

}
`,Lw=`
varying vec3 vWorldDirection;

#include <common>

void main() {

	vWorldDirection = transformDirection( position, modelMatrix );

	#include <begin_vertex>
	#include <project_vertex>

}
`,Iw=`
uniform sampler2D tEquirect;

varying vec3 vWorldDirection;

#include <common>

void main() {

	vec3 direction = normalize( vWorldDirection );

	vec2 sampleUV = equirectUv( direction );

	gl_FragColor = texture2D( tEquirect, sampleUV );

	#include <tonemapping_fragment>
	#include <colorspace_fragment>

}
`,Fw=`
uniform float scale;
attribute float lineDistance;

varying float vLineDistance;

#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	vLineDistance = scale * lineDistance;

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>

}
`,Uw=`
uniform vec3 diffuse;
uniform float opacity;

uniform float dashSize;
uniform float totalSize;

varying float vLineDistance;

#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	if ( mod( vLineDistance, totalSize ) > dashSize ) {

		discard;

	}

	vec3 outgoingLight = vec3( 0.0 );

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>

	outgoingLight = diffuseColor.rgb; // simple shader

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>

}
`,Bw=`
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>

	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )

		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>

	#endif

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>

}
`,Ow=`
uniform vec3 diffuse;
uniform float opacity;

#ifndef FLAT_SHADED

	varying vec3 vNormal;

#endif

#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>

	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );

	// accumulation (baked indirect lighting only)
	#ifdef USE_LIGHTMAP

		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;

	#else

		reflectedLight.indirectDiffuse += vec3( 1.0 );

	#endif

	// modulation
	#include <aomap_fragment>

	reflectedLight.indirectDiffuse *= diffuseColor.rgb;

	vec3 outgoingLight = reflectedLight.indirectDiffuse;

	#include <envmap_fragment>

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`,kw=`
#define LAMBERT

varying vec3 vViewPosition;

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`,zw=`
#define LAMBERT

uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;

	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`,Gw=`
#define MATCAP

varying vec3 vViewPosition;

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>

#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>

	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>

	vViewPosition = - mvPosition.xyz;

}
`,Vw=`
#define MATCAP

uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;

varying vec3 vViewPosition;

#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>

	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5; // 0.495 to remove artifacts caused by undersized matcap disks

	#ifdef USE_MATCAP

		vec4 matcapColor = texture2D( matcap, uv );

	#else

		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 ); // default if matcap is missing

	#endif

	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`,Hw=`
#define NORMAL

#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )

	varying vec3 vViewPosition;

#endif

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )

	vViewPosition = - mvPosition.xyz;

#endif

}
`,Ww=`
#define NORMAL

uniform float opacity;

#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )

	varying vec3 vViewPosition;

#endif

#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );

	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>

	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );

	#ifdef OPAQUE

		gl_FragColor.a = 1.0;

	#endif

}
`,$w=`
#define PHONG

varying vec3 vViewPosition;

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`,Xw=`
#define PHONG

uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;

	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`,qw=`
#define STANDARD

varying vec3 vViewPosition;

#ifdef USE_TRANSMISSION

	varying vec3 vWorldPosition;

#endif

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

#ifdef USE_TRANSMISSION

	vWorldPosition = worldPosition.xyz;

#endif
}
`,Yw=`
#define STANDARD

#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif

uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;

#ifdef IOR
	uniform float ior;
#endif

#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;

	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif

	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif

#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif

#ifdef USE_DISPERSION
	uniform float dispersion;
#endif

#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif

#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;

	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif

	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif

#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;

	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif

varying vec3 vViewPosition;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;

	#include <transmission_fragment>

	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;

	#ifdef USE_SHEEN

		// Sheen energy compensation approximation calculation can be found at the end of
		// https://drive.google.com/file/d/1T0D1VSyR4AllqIJTQAraEIzjlb5h4FKH/view?usp=sharing
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );

		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;

	#endif

	#ifdef USE_CLEARCOAT

		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );

		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );

		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;

	#endif

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`,jw=`
#define TOON

varying vec3 vViewPosition;

#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>

	vViewPosition = - mvPosition.xyz;

	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`,Kw=`
#define TOON

uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;

#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>

	// accumulation
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>

	// modulation
	#include <aomap_fragment>

	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>

}
`,Zw=`
uniform float size;
uniform float scale;

#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

#ifdef USE_POINTS_UV

	varying vec2 vUv;
	uniform mat3 uvTransform;

#endif

void main() {

	#ifdef USE_POINTS_UV

		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;

	#endif

	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>

	gl_PointSize = size;

	#ifdef USE_SIZEATTENUATION

		bool isPerspective = isPerspectiveMatrix( projectionMatrix );

		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );

	#endif

	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>

}
`,Qw=`
uniform vec3 diffuse;
uniform float opacity;

#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	vec3 outgoingLight = vec3( 0.0 );

	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>

	outgoingLight = diffuseColor.rgb;

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>

}
`,Jw=`
#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>

void main() {

	#include <batching_vertex>

	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>

	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>

	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>

}
`,eR=`
uniform vec3 color;
uniform float opacity;

#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>

void main() {

	#include <logdepthbuf_fragment>

	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );

	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>

}
`,tR=`
uniform float rotation;
uniform vec2 center;

#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>

void main() {

	#include <uv_vertex>

	vec4 mvPosition = modelViewMatrix[ 3 ];

	vec2 scale = vec2( length( modelMatrix[ 0 ].xyz ), length( modelMatrix[ 1 ].xyz ) );

	#ifndef USE_SIZEATTENUATION

		bool isPerspective = isPerspectiveMatrix( projectionMatrix );

		if ( isPerspective ) scale *= - mvPosition.z;

	#endif

	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;

	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;

	mvPosition.xy += rotatedPosition;

	gl_Position = projectionMatrix * mvPosition;

	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>

}
`,iR=`
uniform vec3 diffuse;
uniform float opacity;

#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>

void main() {

	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>

	vec3 outgoingLight = vec3( 0.0 );

	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>

	outgoingLight = diffuseColor.rgb;

	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>

}
`,Qe={alphahash_fragment:M1,alphahash_pars_fragment:E1,alphamap_fragment:A1,alphamap_pars_fragment:w1,alphatest_fragment:R1,alphatest_pars_fragment:C1,aomap_fragment:N1,aomap_pars_fragment:P1,batching_pars_vertex:D1,batching_vertex:L1,begin_vertex:I1,beginnormal_vertex:F1,bsdfs:U1,iridescence_fragment:B1,bumpmap_pars_fragment:O1,clipping_planes_fragment:k1,clipping_planes_pars_fragment:z1,clipping_planes_pars_vertex:G1,clipping_planes_vertex:V1,color_fragment:H1,color_pars_fragment:W1,color_pars_vertex:$1,color_vertex:X1,common:q1,cube_uv_reflection_fragment:Y1,defaultnormal_vertex:j1,displacementmap_pars_vertex:K1,displacementmap_vertex:Z1,emissivemap_fragment:Q1,emissivemap_pars_fragment:J1,colorspace_fragment:eA,colorspace_pars_fragment:tA,envmap_fragment:iA,envmap_common_pars_fragment:nA,envmap_pars_fragment:sA,envmap_pars_vertex:rA,envmap_physical_pars_fragment:gA,envmap_vertex:oA,fog_vertex:aA,fog_pars_vertex:lA,fog_fragment:cA,fog_pars_fragment:uA,gradientmap_pars_fragment:hA,lightmap_pars_fragment:dA,lights_lambert_fragment:fA,lights_lambert_pars_fragment:pA,lights_pars_begin:mA,lights_toon_fragment:_A,lights_toon_pars_fragment:xA,lights_phong_fragment:yA,lights_phong_pars_fragment:bA,lights_physical_fragment:TA,lights_physical_pars_fragment:SA,lights_fragment_begin:vA,lights_fragment_maps:MA,lights_fragment_end:EA,logdepthbuf_fragment:AA,logdepthbuf_pars_fragment:wA,logdepthbuf_pars_vertex:RA,logdepthbuf_vertex:CA,map_fragment:NA,map_pars_fragment:PA,map_particle_fragment:DA,map_particle_pars_fragment:LA,metalnessmap_fragment:IA,metalnessmap_pars_fragment:FA,morphinstance_vertex:UA,morphcolor_vertex:BA,morphnormal_vertex:OA,morphtarget_pars_vertex:kA,morphtarget_vertex:zA,normal_fragment_begin:GA,normal_fragment_maps:VA,normal_pars_fragment:HA,normal_pars_vertex:WA,normal_vertex:$A,normalmap_pars_fragment:XA,clearcoat_normal_fragment_begin:qA,clearcoat_normal_fragment_maps:YA,clearcoat_pars_fragment:jA,iridescence_pars_fragment:KA,opaque_fragment:ZA,packing:QA,premultiplied_alpha_fragment:JA,project_vertex:ew,dithering_fragment:tw,dithering_pars_fragment:iw,roughnessmap_fragment:nw,roughnessmap_pars_fragment:sw,shadowmap_pars_fragment:rw,shadowmap_pars_vertex:ow,shadowmap_vertex:aw,shadowmask_pars_fragment:lw,skinbase_vertex:cw,skinning_pars_vertex:uw,skinning_vertex:hw,skinnormal_vertex:dw,specularmap_fragment:fw,specularmap_pars_fragment:pw,tonemapping_fragment:mw,tonemapping_pars_fragment:gw,transmission_fragment:_w,transmission_pars_fragment:xw,uv_pars_fragment:yw,uv_pars_vertex:bw,uv_vertex:Tw,worldpos_vertex:Sw,background_vert:vw,background_frag:Mw,backgroundCube_vert:Ew,backgroundCube_frag:Aw,cube_vert:ww,cube_frag:Rw,depth_vert:Cw,depth_frag:Nw,distanceRGBA_vert:Pw,distanceRGBA_frag:Dw,equirect_vert:Lw,equirect_frag:Iw,linedashed_vert:Fw,linedashed_frag:Uw,meshbasic_vert:Bw,meshbasic_frag:Ow,meshlambert_vert:kw,meshlambert_frag:zw,meshmatcap_vert:Gw,meshmatcap_frag:Vw,meshnormal_vert:Hw,meshnormal_frag:Ww,meshphong_vert:$w,meshphong_frag:Xw,meshphysical_vert:qw,meshphysical_frag:Yw,meshtoon_vert:jw,meshtoon_frag:Kw,points_vert:Zw,points_frag:Qw,shadow_vert:Jw,shadow_frag:eR,sprite_vert:tR,sprite_frag:iR},he={common:{diffuse:{value:new ct(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new We},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new We}},envmap:{envMap:{value:null},envMapRotation:{value:new We},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new We}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new We}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new We},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new We},normalScale:{value:new Je(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new We},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new We}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new We}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new We}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new ct(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new ct(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0},uvTransform:{value:new We}},sprite:{diffuse:{value:new ct(16777215)},opacity:{value:1},center:{value:new Je(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new We},alphaMap:{value:null},alphaMapTransform:{value:new We},alphaTest:{value:0}}},is={basic:{uniforms:Li([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.fog]),vertexShader:Qe.meshbasic_vert,fragmentShader:Qe.meshbasic_frag},lambert:{uniforms:Li([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new ct(0)}}]),vertexShader:Qe.meshlambert_vert,fragmentShader:Qe.meshlambert_frag},phong:{uniforms:Li([he.common,he.specularmap,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.fog,he.lights,{emissive:{value:new ct(0)},specular:{value:new ct(1118481)},shininess:{value:30}}]),vertexShader:Qe.meshphong_vert,fragmentShader:Qe.meshphong_frag},standard:{uniforms:Li([he.common,he.envmap,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.roughnessmap,he.metalnessmap,he.fog,he.lights,{emissive:{value:new ct(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Qe.meshphysical_vert,fragmentShader:Qe.meshphysical_frag},toon:{uniforms:Li([he.common,he.aomap,he.lightmap,he.emissivemap,he.bumpmap,he.normalmap,he.displacementmap,he.gradientmap,he.fog,he.lights,{emissive:{value:new ct(0)}}]),vertexShader:Qe.meshtoon_vert,fragmentShader:Qe.meshtoon_frag},matcap:{uniforms:Li([he.common,he.bumpmap,he.normalmap,he.displacementmap,he.fog,{matcap:{value:null}}]),vertexShader:Qe.meshmatcap_vert,fragmentShader:Qe.meshmatcap_frag},points:{uniforms:Li([he.points,he.fog]),vertexShader:Qe.points_vert,fragmentShader:Qe.points_frag},dashed:{uniforms:Li([he.common,he.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Qe.linedashed_vert,fragmentShader:Qe.linedashed_frag},depth:{uniforms:Li([he.common,he.displacementmap]),vertexShader:Qe.depth_vert,fragmentShader:Qe.depth_frag},normal:{uniforms:Li([he.common,he.bumpmap,he.normalmap,he.displacementmap,{opacity:{value:1}}]),vertexShader:Qe.meshnormal_vert,fragmentShader:Qe.meshnormal_frag},sprite:{uniforms:Li([he.sprite,he.fog]),vertexShader:Qe.sprite_vert,fragmentShader:Qe.sprite_frag},background:{uniforms:{uvTransform:{value:new We},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Qe.background_vert,fragmentShader:Qe.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new We}},vertexShader:Qe.backgroundCube_vert,fragmentShader:Qe.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Qe.cube_vert,fragmentShader:Qe.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Qe.equirect_vert,fragmentShader:Qe.equirect_frag},distanceRGBA:{uniforms:Li([he.common,he.displacementmap,{referencePosition:{value:new B},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Qe.distanceRGBA_vert,fragmentShader:Qe.distanceRGBA_frag},shadow:{uniforms:Li([he.lights,he.fog,{color:{value:new ct(0)},opacity:{value:1}}]),vertexShader:Qe.shadow_vert,fragmentShader:Qe.shadow_frag}};is.physical={uniforms:Li([is.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new We},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new We},clearcoatNormalScale:{value:new Je(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new We},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new We},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new We},sheen:{value:0},sheenColor:{value:new ct(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new We},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new We},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new We},transmissionSamplerSize:{value:new Je},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new We},attenuationDistance:{value:0},attenuationColor:{value:new ct(0)},specularColor:{value:new ct(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new We},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new We},anisotropyVector:{value:new Je},anisotropyMap:{value:null},anisotropyMapTransform:{value:new We}}]),vertexShader:Qe.meshphysical_vert,fragmentShader:Qe.meshphysical_frag};const Ru={r:0,b:0,g:0},Pr=new Hs,nR=new It;function sR(r,e,t,i,n,s,o){const a=new ct(0);let l=s===!0?0:1,c,u,h=null,d=0,f=null;function p(y){let x=y.isScene===!0?y.background:null;return x&&x.isTexture&&(x=(y.backgroundBlurriness>0?t:e).get(x)),x}function _(y){let x=!1;const S=p(y);S===null?m(a,l):S&&S.isColor&&(m(S,1),x=!0);const w=r.xr.getEnvironmentBlendMode();w==="additive"?i.buffers.color.setClear(0,0,0,1,o):w==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(r.autoClear||x)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function g(y,x){const S=p(x);S&&(S.isCubeTexture||S.mapping===lo)?(u===void 0&&(u=new fi(new _o(1,1,1),new Tr({name:"BackgroundCubeMaterial",uniforms:qa(is.backgroundCube.uniforms),vertexShader:is.backgroundCube.vertexShader,fragmentShader:is.backgroundCube.fragmentShader,side:Ct,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),u.geometry.deleteAttribute("normal"),u.geometry.deleteAttribute("uv"),u.onBeforeRender=function(w,M,R){this.matrixWorld.copyPosition(R.matrixWorld)},Object.defineProperty(u.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(u)),Pr.copy(x.backgroundRotation),Pr.x*=-1,Pr.y*=-1,Pr.z*=-1,S.isCubeTexture&&S.isRenderTargetTexture===!1&&(Pr.y*=-1,Pr.z*=-1),u.material.uniforms.envMap.value=S,u.material.uniforms.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,u.material.uniforms.backgroundBlurriness.value=x.backgroundBlurriness,u.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,u.material.uniforms.backgroundRotation.value.setFromMatrix4(nR.makeRotationFromEuler(Pr)),u.material.toneMapped=Be.getTransfer(S.colorSpace)!==xe,(h!==S||d!==S.version||f!==r.toneMapping)&&(u.material.needsUpdate=!0,h=S,d=S.version,f=r.toneMapping),u.layers.enableAll(),y.unshift(u,u.geometry,u.material,0,0,null)):S&&S.isTexture&&(c===void 0&&(c=new fi(new Wc(2,2),new Tr({name:"BackgroundMaterial",uniforms:qa(is.background.uniforms),vertexShader:is.background.vertexShader,fragmentShader:is.background.fragmentShader,side:ji,depthTest:!1,depthWrite:!1,fog:!1,allowOverride:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=S,c.material.uniforms.backgroundIntensity.value=x.backgroundIntensity,c.material.toneMapped=Be.getTransfer(S.colorSpace)!==xe,S.matrixAutoUpdate===!0&&S.updateMatrix(),c.material.uniforms.uvTransform.value.copy(S.matrix),(h!==S||d!==S.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,h=S,d=S.version,f=r.toneMapping),c.layers.enableAll(),y.unshift(c,c.geometry,c.material,0,0,null))}function m(y,x){y.getRGB(Ru,Db(r)),i.buffers.color.setClear(Ru.r,Ru.g,Ru.b,x,o)}function b(){u!==void 0&&(u.geometry.dispose(),u.material.dispose(),u=void 0),c!==void 0&&(c.geometry.dispose(),c.material.dispose(),c=void 0)}return{getClearColor:function(){return a},setClearColor:function(y,x=1){a.set(y),l=x,m(a,l)},getClearAlpha:function(){return l},setClearAlpha:function(y){l=y,m(a,l)},render:_,addToRenderList:g,dispose:b}}function rR(r,e){const t=r.getParameter(r.MAX_VERTEX_ATTRIBS),i={},n=d(null);let s=n,o=!1;function a(E,C,k,U,G){let Y=!1;const W=h(U,k,C);s!==W&&(s=W,c(s.object)),Y=f(E,U,k,G),Y&&p(E,U,k,G),G!==null&&e.update(G,r.ELEMENT_ARRAY_BUFFER),(Y||o)&&(o=!1,x(E,C,k,U),G!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,e.get(G).buffer))}function l(){return r.createVertexArray()}function c(E){return r.bindVertexArray(E)}function u(E){return r.deleteVertexArray(E)}function h(E,C,k){const U=k.wireframe===!0;let G=i[E.id];G===void 0&&(G={},i[E.id]=G);let Y=G[C.id];Y===void 0&&(Y={},G[C.id]=Y);let W=Y[U];return W===void 0&&(W=d(l()),Y[U]=W),W}function d(E){const C=[],k=[],U=[];for(let G=0;G<t;G++)C[G]=0,k[G]=0,U[G]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:C,enabledAttributes:k,attributeDivisors:U,object:E,attributes:{},index:null}}function f(E,C,k,U){const G=s.attributes,Y=C.attributes;let W=0;const Q=k.getAttributes();for(const H in Q)if(Q[H].location>=0){const ae=G[H];let Te=Y[H];if(Te===void 0&&(H==="instanceMatrix"&&E.instanceMatrix&&(Te=E.instanceMatrix),H==="instanceColor"&&E.instanceColor&&(Te=E.instanceColor)),ae===void 0||ae.attribute!==Te||Te&&ae.data!==Te.data)return!0;W++}return s.attributesNum!==W||s.index!==U}function p(E,C,k,U){const G={},Y=C.attributes;let W=0;const Q=k.getAttributes();for(const H in Q)if(Q[H].location>=0){let ae=Y[H];ae===void 0&&(H==="instanceMatrix"&&E.instanceMatrix&&(ae=E.instanceMatrix),H==="instanceColor"&&E.instanceColor&&(ae=E.instanceColor));const Te={};Te.attribute=ae,ae&&ae.data&&(Te.data=ae.data),G[H]=Te,W++}s.attributes=G,s.attributesNum=W,s.index=U}function _(){const E=s.newAttributes;for(let C=0,k=E.length;C<k;C++)E[C]=0}function g(E){m(E,0)}function m(E,C){const k=s.newAttributes,U=s.enabledAttributes,G=s.attributeDivisors;k[E]=1,U[E]===0&&(r.enableVertexAttribArray(E),U[E]=1),G[E]!==C&&(r.vertexAttribDivisor(E,C),G[E]=C)}function b(){const E=s.newAttributes,C=s.enabledAttributes;for(let k=0,U=C.length;k<U;k++)C[k]!==E[k]&&(r.disableVertexAttribArray(k),C[k]=0)}function y(E,C,k,U,G,Y,W){W===!0?r.vertexAttribIPointer(E,C,k,G,Y):r.vertexAttribPointer(E,C,k,U,G,Y)}function x(E,C,k,U){_();const G=U.attributes,Y=k.getAttributes(),W=C.defaultAttributeValues;for(const Q in Y){const H=Y[Q];if(H.location>=0){let ie=G[Q];if(ie===void 0&&(Q==="instanceMatrix"&&E.instanceMatrix&&(ie=E.instanceMatrix),Q==="instanceColor"&&E.instanceColor&&(ie=E.instanceColor)),ie!==void 0){const ae=ie.normalized,Te=ie.itemSize,$e=e.get(ie);if($e===void 0)continue;const gt=$e.buffer,_t=$e.type,j=$e.bytesPerElement,fe=_t===r.INT||_t===r.UNSIGNED_INT||ie.gpuType===hi;if(ie.isInterleavedBufferAttribute){const ce=ie.data,Oe=ce.stride,ke=ie.offset;if(ce.isInstancedInterleavedBuffer){for(let Xe=0;Xe<H.locationSize;Xe++)m(H.location+Xe,ce.meshPerAttribute);E.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=ce.meshPerAttribute*ce.count)}else for(let Xe=0;Xe<H.locationSize;Xe++)g(H.location+Xe);r.bindBuffer(r.ARRAY_BUFFER,gt);for(let Xe=0;Xe<H.locationSize;Xe++)y(H.location+Xe,Te/H.locationSize,_t,ae,Oe*j,(ke+Te/H.locationSize*Xe)*j,fe)}else{if(ie.isInstancedBufferAttribute){for(let ce=0;ce<H.locationSize;ce++)m(H.location+ce,ie.meshPerAttribute);E.isInstancedMesh!==!0&&U._maxInstanceCount===void 0&&(U._maxInstanceCount=ie.meshPerAttribute*ie.count)}else for(let ce=0;ce<H.locationSize;ce++)g(H.location+ce);r.bindBuffer(r.ARRAY_BUFFER,gt);for(let ce=0;ce<H.locationSize;ce++)y(H.location+ce,Te/H.locationSize,_t,ae,Te*j,Te/H.locationSize*ce*j,fe)}}else if(W!==void 0){const ae=W[Q];if(ae!==void 0)switch(ae.length){case 2:r.vertexAttrib2fv(H.location,ae);break;case 3:r.vertexAttrib3fv(H.location,ae);break;case 4:r.vertexAttrib4fv(H.location,ae);break;default:r.vertexAttrib1fv(H.location,ae)}}}}b()}function S(){R();for(const E in i){const C=i[E];for(const k in C){const U=C[k];for(const G in U)u(U[G].object),delete U[G];delete C[k]}delete i[E]}}function w(E){if(i[E.id]===void 0)return;const C=i[E.id];for(const k in C){const U=C[k];for(const G in U)u(U[G].object),delete U[G];delete C[k]}delete i[E.id]}function M(E){for(const C in i){const k=i[C];if(k[E.id]===void 0)continue;const U=k[E.id];for(const G in U)u(U[G].object),delete U[G];delete k[E.id]}}function R(){T(),o=!0,s!==n&&(s=n,c(s.object))}function T(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:R,resetDefaultState:T,dispose:S,releaseStatesOfGeometry:w,releaseStatesOfProgram:M,initAttributes:_,enableAttribute:g,disableUnusedAttributes:b}}function oR(r,e,t){let i;function n(c){i=c}function s(c,u){r.drawArrays(i,c,u),t.update(u,i,1)}function o(c,u,h){h!==0&&(r.drawArraysInstanced(i,c,u,h),t.update(u,i,h))}function a(c,u,h){if(h===0)return;e.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,c,0,u,0,h);let f=0;for(let p=0;p<h;p++)f+=u[p];t.update(f,i,1)}function l(c,u,h,d){if(h===0)return;const f=e.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<c.length;p++)o(c[p],u[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,c,0,u,0,d,0,h);let p=0;for(let _=0;_<h;_++)p+=u[_]*d[_];t.update(p,i,1)}}this.setMode=n,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=l}function aR(r,e,t,i){let n;function s(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const M=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(M.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(M){return!(M!==Gt&&i.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(M){const R=M===pn&&(e.has("EXT_color_buffer_half_float")||e.has("EXT_color_buffer_float"));return!(M!==zt&&i.convert(M)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&M!==Wt&&!R)}function l(M){if(M==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";M="mediump"}return M==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let c=t.precision!==void 0?t.precision:"highp";const u=l(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=t.logarithmicDepthBuffer===!0,d=t.reversedDepthBuffer===!0&&e.has("EXT_clip_control"),f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),_=r.getParameter(r.MAX_TEXTURE_SIZE),g=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),m=r.getParameter(r.MAX_VERTEX_ATTRIBS),b=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),y=r.getParameter(r.MAX_VARYING_VECTORS),x=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),S=p>0,w=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:l,textureFormatReadable:o,textureTypeReadable:a,precision:c,logarithmicDepthBuffer:h,reversedDepthBuffer:d,maxTextures:f,maxVertexTextures:p,maxTextureSize:_,maxCubemapSize:g,maxAttributes:m,maxVertexUniforms:b,maxVaryings:y,maxFragmentUniforms:x,vertexTextures:S,maxSamples:w}}function lR(r){const e=this;let t=null,i=0,n=!1,s=!1;const o=new Ds,a=new We,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(h,d){const f=h.length!==0||d||i!==0||n;return n=d,i=h.length,f},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(h,d){t=u(h,d,0)},this.setState=function(h,d,f){const p=h.clippingPlanes,_=h.clipIntersection,g=h.clipShadows,m=r.get(h);if(!n||p===null||p.length===0||s&&!g)s?u(null):c();else{const b=s?0:i,y=b*4;let x=m.clippingState||null;l.value=x,x=u(p,d,y,f);for(let S=0;S!==y;++S)x[S]=t[S];m.clippingState=x,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=b}};function c(){l.value!==t&&(l.value=t,l.needsUpdate=i>0),e.numPlanes=i,e.numIntersection=0}function u(h,d,f,p){const _=h!==null?h.length:0;let g=null;if(_!==0){if(g=l.value,p!==!0||g===null){const m=f+_*4,b=d.matrixWorldInverse;a.getNormalMatrix(b),(g===null||g.length<m)&&(g=new Float32Array(m));for(let y=0,x=f;y!==_;++y,x+=4)o.copy(h[y]).applyMatrix4(b,a),o.normal.toArray(g,x),g[x+3]=o.constant}l.value=g,l.needsUpdate=!0}return e.numPlanes=_,e.numIntersection=0,g}}function cR(r){let e=new WeakMap;function t(o,a){return a===Aa?o.mapping=ls:a===wa&&(o.mapping=cs),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===Aa||a===wa)if(e.has(o)){const l=e.get(o).texture;return t(l,o.mapping)}else{const l=o.image;if(l&&l.height>0){const c=new Ib(l.height);return c.fromEquirectangularTexture(r,o),e.set(o,c),o.addEventListener("dispose",n),t(c.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const l=e.get(a);l!==void 0&&(e.delete(a),l.dispose())}function s(){e=new WeakMap}return{get:i,dispose:s}}const sa=4,H0=[.125,.215,.35,.446,.526,.582],Yr=20,Yd=new Im,W0=new ct;let jd=null,Kd=0,Zd=0,Qd=!1;const Hr=(1+Math.sqrt(5))/2,Bo=1/Hr,$0=[new B(-Hr,Bo,0),new B(Hr,Bo,0),new B(-Bo,0,Hr),new B(Bo,0,Hr),new B(0,Hr,-Bo),new B(0,Hr,Bo),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)],uR=new B;let X0=class{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,i=.1,n=100,s={}){const{size:o=256,position:a=uR}=s;jd=this._renderer.getRenderTarget(),Kd=this._renderer.getActiveCubeFace(),Zd=this._renderer.getActiveMipmapLevel(),Qd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(o);const l=this._allocateTargets();return l.depthBuffer=!0,this._sceneToCubeUV(e,i,n,l,a),t>0&&this._blur(l,0,0,t),this._applyPMREM(l),this._cleanup(l),l}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=j0(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=Y0(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(jd,Kd,Zd),this._renderer.xr.enabled=Qd,e.scissorTest=!1,Cu(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===ls||e.mapping===cs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),jd=this._renderer.getRenderTarget(),Kd=this._renderer.getActiveCubeFace(),Zd=this._renderer.getActiveMipmapLevel(),Qd=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=t||this._allocateTargets();return this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,i={magFilter:ni,minFilter:ni,generateMipmaps:!1,type:pn,format:Gt,colorSpace:ho,depthBuffer:!1},n=q0(e,t,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=q0(e,t,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=hR(s)),this._blurMaterial=dR(s,e,t)}return n}_compileMaterial(e){const t=new fi(this._lodPlanes[0],e);this._renderer.compile(t,Yd)}_sceneToCubeUV(e,t,i,n,s){const l=new Ei(90,1,t,i),c=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],h=this._renderer,d=h.autoClear,f=h.toneMapping;h.getClearColor(W0),h.toneMapping=Ki,h.autoClear=!1,h.state.buffers.depth.getReversed()&&(h.setRenderTarget(n),h.clearDepth(),h.setRenderTarget(null));const _=new ns({name:"PMREM.Background",side:Ct,depthWrite:!1,depthTest:!1}),g=new fi(new _o,_);let m=!1;const b=e.background;b?b.isColor&&(_.color.copy(b),e.background=null,m=!0):(_.color.copy(W0),m=!0);for(let y=0;y<6;y++){const x=y%3;x===0?(l.up.set(0,c[y],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x+u[y],s.y,s.z)):x===1?(l.up.set(0,0,c[y]),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y+u[y],s.z)):(l.up.set(0,c[y],0),l.position.set(s.x,s.y,s.z),l.lookAt(s.x,s.y,s.z+u[y]));const S=this._cubeSize;Cu(n,x*S,y>2?S:0,S,S),h.setRenderTarget(n),m&&h.render(g,l),h.render(e,l)}g.geometry.dispose(),g.material.dispose(),h.toneMapping=f,h.autoClear=d,e.background=b}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===ls||e.mapping===cs;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=j0()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=Y0());const s=n?this._cubemapMaterial:this._equirectMaterial,o=new fi(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const l=this._cubeSize;Cu(t,0,0,3*l,2*l),i.setRenderTarget(t),i.render(o,Yd)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=$0[(n-s-1)%$0.length];this._blur(e,s-1,s,o,a)}t.autoClear=i}_blur(e,t,i,n,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",s),this._halfBlur(o,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=new fi(this._lodPlanes[n],c),d=c.uniforms,f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Yr-1),_=s/p,g=isFinite(s)?1+Math.floor(u*_):Yr;g>Yr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Yr}`);const m=[];let b=0;for(let M=0;M<Yr;++M){const R=M/_,T=Math.exp(-R*R/2);m.push(T),M===0?b+=T:M<g&&(b+=2*T)}for(let M=0;M<m.length;M++)m[M]=m[M]/b;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-i;const x=this._sizeLods[n],S=3*x*(n>y-sa?n-y+sa:0),w=4*(this._cubeSize-x);Cu(t,S,w,3*x,2*x),l.setRenderTarget(t),l.render(h,Yd)}};function hR(r){const e=[],t=[],i=[];let n=r;const s=r-sa+1+H0.length;for(let o=0;o<s;o++){const a=Math.pow(2,n);t.push(a);let l=1/a;o>r-sa?l=H0[o-r+sa-1]:o===0&&(l=0),i.push(l);const c=1/(a-2),u=-c,h=1+c,d=[u,u,h,u,h,h,u,u,h,h,u,h],f=6,p=6,_=3,g=2,m=1,b=new Float32Array(_*p*f),y=new Float32Array(g*p*f),x=new Float32Array(m*p*f);for(let w=0;w<f;w++){const M=w%3*2/3-1,R=w>2?0:-1,T=[M,R,0,M+2/3,R,0,M+2/3,R+1,0,M,R,0,M+2/3,R+1,0,M,R+1,0];b.set(T,_*p*w),y.set(d,g*p*w);const E=[w,w,w,w,w,w];x.set(E,m*p*w)}const S=new $s;S.setAttribute("position",new Ci(b,_)),S.setAttribute("uv",new Ci(y,g)),S.setAttribute("faceIndex",new Ci(x,m)),e.push(S),n>sa&&n--}return{lodPlanes:e,sizeLods:t,sigmas:i}}function q0(r,e,t){const i=new po(r,e,t);return i.texture.mapping=lo,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Cu(r,e,t,i,n){r.viewport.set(e,t,i,n),r.scissor.set(e,t,i,n)}function dR(r,e,t){const i=new Float32Array(Yr),n=new B(0,1,0);return new Tr({name:"SphericalGaussianBlur",defines:{n:Yr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Fm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:dn,depthTest:!1,depthWrite:!1})}function Y0(){return new Tr({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:dn,depthTest:!1,depthWrite:!1})}function j0(){return new Tr({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:dn,depthTest:!1,depthWrite:!1})}function Fm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function fR(r){let e=new WeakMap,t=null;function i(a){if(a&&a.isTexture){const l=a.mapping,c=l===Aa||l===wa,u=l===ls||l===cs;if(c||u){let h=e.get(a);const d=h!==void 0?h.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return t===null&&(t=new X0(r)),h=c?t.fromEquirectangular(a,h):t.fromCubemap(a,h),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),h.texture;if(h!==void 0)return h.texture;{const f=a.image;return c&&f&&f.height>0||u&&f&&n(f)?(t===null&&(t=new X0(r)),h=c?t.fromEquirectangular(a):t.fromCubemap(a),h.texture.pmremVersion=a.pmremVersion,e.set(a,h),a.addEventListener("dispose",s),h.texture):null}}}return a}function n(a){let l=0;const c=6;for(let u=0;u<c;u++)a[u]!==void 0&&l++;return l===c}function s(a){const l=a.target;l.removeEventListener("dispose",s);const c=e.get(l);c!==void 0&&(e.delete(l),c.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:i,dispose:o}}function pR(r){const e={};function t(i){if(e[i]!==void 0)return e[i];let n;switch(i){case"WEBGL_depth_texture":n=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=r.getExtension(i)}return e[i]=n,n}return{has:function(i){return t(i)!==null},init:function(){t("EXT_color_buffer_float"),t("WEBGL_clip_cull_distance"),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture"),t("WEBGL_render_shared_exponent")},get:function(i){const n=t(i);return n===null&&Zi("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function mR(r,e,t,i){const n={},s=new WeakMap;function o(h){const d=h.target;d.index!==null&&e.remove(d.index);for(const p in d.attributes)e.remove(d.attributes[p]);d.removeEventListener("dispose",o),delete n[d.id];const f=s.get(d);f&&(e.remove(f),s.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(h,d){return n[d.id]===!0||(d.addEventListener("dispose",o),n[d.id]=!0,t.memory.geometries++),d}function l(h){const d=h.attributes;for(const f in d)e.update(d[f],r.ARRAY_BUFFER)}function c(h){const d=[],f=h.index,p=h.attributes.position;let _=0;if(f!==null){const b=f.array;_=f.version;for(let y=0,x=b.length;y<x;y+=3){const S=b[y+0],w=b[y+1],M=b[y+2];d.push(S,w,w,M,M,S)}}else if(p!==void 0){const b=p.array;_=p.version;for(let y=0,x=b.length/3-1;y<x;y+=3){const S=y+0,w=y+1,M=y+2;d.push(S,w,w,M,M,S)}}else return;const g=new(Em(d)?Cm:Rm)(d,1);g.version=_;const m=s.get(h);m&&e.remove(m),s.set(h,g)}function u(h){const d=s.get(h);if(d){const f=h.index;f!==null&&d.version<f.version&&c(h)}else c(h);return s.get(h)}return{get:a,update:l,getWireframeAttribute:u}}function gR(r,e,t){let i;function n(d){i=d}let s,o;function a(d){s=d.type,o=d.bytesPerElement}function l(d,f){r.drawElements(i,f,s,d*o),t.update(f,i,1)}function c(d,f,p){p!==0&&(r.drawElementsInstanced(i,f,s,d*o,p),t.update(f,i,p))}function u(d,f,p){if(p===0)return;e.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,s,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];t.update(g,i,1)}function h(d,f,p,_){if(p===0)return;const g=e.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)c(d[m]/o,f[m],_[m]);else{g.multiDrawElementsInstancedWEBGL(i,f,0,s,d,0,_,0,p);let m=0;for(let b=0;b<p;b++)m+=f[b]*_[b];t.update(m,i,1)}}this.setMode=n,this.setIndex=a,this.render=l,this.renderInstances=c,this.renderMultiDraw=u,this.renderMultiDrawInstances=h}function _R(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:n,update:i}}function xR(r,e,t){const i=new WeakMap,n=new je;function s(o,a,l){const c=o.morphTargetInfluences,u=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,h=u!==void 0?u.length:0;let d=i.get(a);if(d===void 0||d.count!==h){let E=function(){R.dispose(),i.delete(a),a.removeEventListener("dispose",E)};var f=E;d!==void 0&&d.texture.dispose();const p=a.morphAttributes.position!==void 0,_=a.morphAttributes.normal!==void 0,g=a.morphAttributes.color!==void 0,m=a.morphAttributes.position||[],b=a.morphAttributes.normal||[],y=a.morphAttributes.color||[];let x=0;p===!0&&(x=1),_===!0&&(x=2),g===!0&&(x=3);let S=a.attributes.position.count*x,w=1;S>e.maxTextureSize&&(w=Math.ceil(S/e.maxTextureSize),S=e.maxTextureSize);const M=new Float32Array(S*w*4*h),R=new wm(M,S,w,h);R.type=Wt,R.needsUpdate=!0;const T=x*4;for(let C=0;C<h;C++){const k=m[C],U=b[C],G=y[C],Y=S*w*4*C;for(let W=0;W<k.count;W++){const Q=W*T;p===!0&&(n.fromBufferAttribute(k,W),M[Y+Q+0]=n.x,M[Y+Q+1]=n.y,M[Y+Q+2]=n.z,M[Y+Q+3]=0),_===!0&&(n.fromBufferAttribute(U,W),M[Y+Q+4]=n.x,M[Y+Q+5]=n.y,M[Y+Q+6]=n.z,M[Y+Q+7]=0),g===!0&&(n.fromBufferAttribute(G,W),M[Y+Q+8]=n.x,M[Y+Q+9]=n.y,M[Y+Q+10]=n.z,M[Y+Q+11]=G.itemSize===4?n.w:1)}}d={count:h,texture:R,size:new Je(S,w)},i.set(a,d),a.addEventListener("dispose",E)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)l.getUniforms().setValue(r,"morphTexture",o.morphTexture,t);else{let p=0;for(let g=0;g<c.length;g++)p+=c[g];const _=a.morphTargetsRelative?1:1-p;l.getUniforms().setValue(r,"morphTargetBaseInfluence",_),l.getUniforms().setValue(r,"morphTargetInfluences",c)}l.getUniforms().setValue(r,"morphTargetsTexture",d.texture,t),l.getUniforms().setValue(r,"morphTargetsTextureSize",d.size)}return{update:s}}function yR(r,e,t,i){let n=new WeakMap;function s(l){const c=i.render.frame,u=l.geometry,h=e.get(l,u);if(n.get(h)!==c&&(e.update(h),n.set(h,c)),l.isInstancedMesh&&(l.hasEventListener("dispose",a)===!1&&l.addEventListener("dispose",a),n.get(l)!==c&&(t.update(l.instanceMatrix,r.ARRAY_BUFFER),l.instanceColor!==null&&t.update(l.instanceColor,r.ARRAY_BUFFER),n.set(l,c))),l.isSkinnedMesh){const d=l.skeleton;n.get(d)!==c&&(d.update(),n.set(d,c))}return h}function o(){n=new WeakMap}function a(l){const c=l.target;c.removeEventListener("dispose",a),t.remove(c.instanceMatrix),c.instanceColor!==null&&t.remove(c.instanceColor)}return{update:s,dispose:o}}const kb=new ki,K0=new Xn(1,1),zb=new wm,Gb=new qE,Vb=new Hc,Z0=[],Q0=[],J0=new Float32Array(16),e_=new Float32Array(9),t_=new Float32Array(4);function sl(r,e,t){const i=r[0];if(i<=0||i>0)return r;const n=e*t;let s=Z0[n];if(s===void 0&&(s=new Float32Array(n),Z0[n]=s),e!==0){i.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function ri(r,e){if(r.length!==e.length)return!1;for(let t=0,i=r.length;t<i;t++)if(r[t]!==e[t])return!1;return!0}function oi(r,e){for(let t=0,i=e.length;t<i;t++)r[t]=e[t]}function sd(r,e){let t=Q0[e];t===void 0&&(t=new Int32Array(e),Q0[e]=t);for(let i=0;i!==e;++i)t[i]=r.allocateTextureUnit();return t}function bR(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function TR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ri(t,e))return;r.uniform2fv(this.addr,e),oi(t,e)}}function SR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(ri(t,e))return;r.uniform3fv(this.addr,e),oi(t,e)}}function vR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ri(t,e))return;r.uniform4fv(this.addr,e),oi(t,e)}}function MR(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(ri(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),oi(t,e)}else{if(ri(t,i))return;t_.set(i),r.uniformMatrix2fv(this.addr,!1,t_),oi(t,i)}}function ER(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(ri(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),oi(t,e)}else{if(ri(t,i))return;e_.set(i),r.uniformMatrix3fv(this.addr,!1,e_),oi(t,i)}}function AR(r,e){const t=this.cache,i=e.elements;if(i===void 0){if(ri(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),oi(t,e)}else{if(ri(t,i))return;J0.set(i),r.uniformMatrix4fv(this.addr,!1,J0),oi(t,i)}}function wR(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function RR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2i(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ri(t,e))return;r.uniform2iv(this.addr,e),oi(t,e)}}function CR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3i(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ri(t,e))return;r.uniform3iv(this.addr,e),oi(t,e)}}function NR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4i(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ri(t,e))return;r.uniform4iv(this.addr,e),oi(t,e)}}function PR(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function DR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2ui(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(ri(t,e))return;r.uniform2uiv(this.addr,e),oi(t,e)}}function LR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3ui(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else{if(ri(t,e))return;r.uniform3uiv(this.addr,e),oi(t,e)}}function IR(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4ui(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(ri(t,e))return;r.uniform4uiv(this.addr,e),oi(t,e)}}function FR(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n);let s;this.type===r.SAMPLER_2D_SHADOW?(K0.compareFunction=Jh,s=K0):s=kb,t.setTexture2D(e||s,n)}function UR(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture3D(e||Gb,n)}function BR(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTextureCube(e||Vb,n)}function OR(r,e,t){const i=this.cache,n=t.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),t.setTexture2DArray(e||zb,n)}function kR(r){switch(r){case 5126:return bR;case 35664:return TR;case 35665:return SR;case 35666:return vR;case 35674:return MR;case 35675:return ER;case 35676:return AR;case 5124:case 35670:return wR;case 35667:case 35671:return RR;case 35668:case 35672:return CR;case 35669:case 35673:return NR;case 5125:return PR;case 36294:return DR;case 36295:return LR;case 36296:return IR;case 35678:case 36198:case 36298:case 36306:case 35682:return FR;case 35679:case 36299:case 36307:return UR;case 35680:case 36300:case 36308:case 36293:return BR;case 36289:case 36303:case 36311:case 36292:return OR}}function zR(r,e){r.uniform1fv(this.addr,e)}function GR(r,e){const t=sl(e,this.size,2);r.uniform2fv(this.addr,t)}function VR(r,e){const t=sl(e,this.size,3);r.uniform3fv(this.addr,t)}function HR(r,e){const t=sl(e,this.size,4);r.uniform4fv(this.addr,t)}function WR(r,e){const t=sl(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function $R(r,e){const t=sl(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function XR(r,e){const t=sl(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function qR(r,e){r.uniform1iv(this.addr,e)}function YR(r,e){r.uniform2iv(this.addr,e)}function jR(r,e){r.uniform3iv(this.addr,e)}function KR(r,e){r.uniform4iv(this.addr,e)}function ZR(r,e){r.uniform1uiv(this.addr,e)}function QR(r,e){r.uniform2uiv(this.addr,e)}function JR(r,e){r.uniform3uiv(this.addr,e)}function eC(r,e){r.uniform4uiv(this.addr,e)}function tC(r,e,t){const i=this.cache,n=e.length,s=sd(t,n);ri(i,s)||(r.uniform1iv(this.addr,s),oi(i,s));for(let o=0;o!==n;++o)t.setTexture2D(e[o]||kb,s[o])}function iC(r,e,t){const i=this.cache,n=e.length,s=sd(t,n);ri(i,s)||(r.uniform1iv(this.addr,s),oi(i,s));for(let o=0;o!==n;++o)t.setTexture3D(e[o]||Gb,s[o])}function nC(r,e,t){const i=this.cache,n=e.length,s=sd(t,n);ri(i,s)||(r.uniform1iv(this.addr,s),oi(i,s));for(let o=0;o!==n;++o)t.setTextureCube(e[o]||Vb,s[o])}function sC(r,e,t){const i=this.cache,n=e.length,s=sd(t,n);ri(i,s)||(r.uniform1iv(this.addr,s),oi(i,s));for(let o=0;o!==n;++o)t.setTexture2DArray(e[o]||zb,s[o])}function rC(r){switch(r){case 5126:return zR;case 35664:return GR;case 35665:return VR;case 35666:return HR;case 35674:return WR;case 35675:return $R;case 35676:return XR;case 5124:case 35670:return qR;case 35667:case 35671:return YR;case 35668:case 35672:return jR;case 35669:case 35673:return KR;case 5125:return ZR;case 36294:return QR;case 36295:return JR;case 36296:return eC;case 35678:case 36198:case 36298:case 36306:case 35682:return tC;case 35679:case 36299:case 36307:return iC;case 35680:case 36300:case 36308:case 36293:return nC;case 36289:case 36303:case 36311:case 36292:return sC}}class oC{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.setValue=kR(t.type)}}class aC{constructor(e,t,i){this.id=e,this.addr=i,this.cache=[],this.type=t.type,this.size=t.size,this.setValue=rC(t.type)}}class lC{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,i){const n=this.seq;for(let s=0,o=n.length;s!==o;++s){const a=n[s];a.setValue(e,t[a.id],i)}}}const Jd=/(\w+)(\])?(\[|\.)?/g;function i_(r,e){r.seq.push(e),r.map[e.id]=e}function cC(r,e,t){const i=r.name,n=i.length;for(Jd.lastIndex=0;;){const s=Jd.exec(i),o=Jd.lastIndex;let a=s[1];const l=s[2]==="]",c=s[3];if(l&&(a=a|0),c===void 0||c==="["&&o+2===n){i_(t,c===void 0?new oC(a,r,e):new aC(a,r,e));break}else{let h=t.map[a];h===void 0&&(h=new lC(a),i_(t,h)),t=h}}}class bh{constructor(e,t){this.seq=[],this.map={};const i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=e.getActiveUniform(t,n),o=e.getUniformLocation(t,s.name);cC(s,o,this)}}setValue(e,t,i,n){const s=this.map[t];s!==void 0&&s.setValue(e,i,n)}setOptional(e,t,i){const n=t[i];n!==void 0&&this.setValue(e,i,n)}static upload(e,t,i,n){for(let s=0,o=t.length;s!==o;++s){const a=t[s],l=i[a.id];l.needsUpdate!==!1&&a.setValue(e,l.value,n)}}static seqWithValue(e,t){const i=[];for(let n=0,s=e.length;n!==s;++n){const o=e[n];o.id in t&&i.push(o)}return i}}function n_(r,e,t){const i=r.createShader(e);return r.shaderSource(i,t),r.compileShader(i),i}const uC=37297;let hC=0;function dC(r,e){const t=r.split(`
`),i=[],n=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=n;o<s;o++){const a=o+1;i.push(`${a===e?">":" "} ${a}: ${t[o]}`)}return i.join(`
`)}const s_=new We;function fC(r){Be._getMatrix(s_,Be.workingColorSpace,r);const e=`mat3( ${s_.elements.map(t=>t.toFixed(4))} )`;switch(Be.getTransfer(r)){case Wa:return[e,"LinearTransferOETF"];case xe:return[e,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space: ",r),[e,"LinearTransferOETF"]}}function r_(r,e,t){const i=r.getShaderParameter(e,r.COMPILE_STATUS),s=(r.getShaderInfoLog(e)||"").trim();if(i&&s==="")return"";const o=/ERROR: 0:(\d+)/.exec(s);if(o){const a=parseInt(o[1]);return t.toUpperCase()+`

`+s+`

`+dC(r.getShaderSource(e),a)}else return s}function pC(r,e){const t=fC(e);return[`vec4 ${r}( vec4 value ) {`,`	return ${t[1]}( vec4( value.rgb * ${t[0]}, value.a ) );`,"}"].join(`
`)}function mC(r,e){let t;switch(e){case tE:t="Linear";break;case iE:t="Reinhard";break;case nE:t="Cineon";break;case sE:t="ACESFilmic";break;case oE:t="AgX";break;case aE:t="Neutral";break;case rE:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}const Nu=new B;function gC(){Be.getLuminanceCoefficients(Nu);const r=Nu.x.toFixed(4),e=Nu.y.toFixed(4),t=Nu.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${e}, ${t} );`,"	return dot( weights, rgb );","}"].join(`
`)}function _C(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(Wl).join(`
`)}function xC(r){const e=[];for(const t in r){const i=r[t];i!==!1&&e.push("#define "+t+" "+i)}return e.join(`
`)}function yC(r,e){const t={},i=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=r.getActiveAttrib(e,n),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function Wl(r){return r!==""}function o_(r,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function a_(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const bC=/^[ \t]*#include +<([\w\d./]+)>/gm;function wp(r){return r.replace(bC,SC)}const TC=new Map;function SC(r,e){let t=Qe[e];if(t===void 0){const i=TC.get(e);if(i!==void 0)t=Qe[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',e,i);else throw new Error("Can not resolve #include <"+e+">")}return wp(t)}const vC=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function l_(r){return r.replace(vC,MC)}function MC(r,e,t,i){let n="";for(let s=parseInt(e);s<parseInt(t);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function c_(r){let e=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function EC(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===im?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===YM?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Cs&&(e="SHADOWMAP_TYPE_VSM"),e}function AC(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case ls:case cs:e="ENVMAP_TYPE_CUBE";break;case lo:e="ENVMAP_TYPE_CUBE_UV";break}return e}function wC(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case cs:e="ENVMAP_MODE_REFRACTION";break}return e}function RC(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case bb:e="ENVMAP_BLENDING_MULTIPLY";break;case JM:e="ENVMAP_BLENDING_MIX";break;case eE:e="ENVMAP_BLENDING_ADD";break}return e}function CC(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,i=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),112)),texelHeight:i,maxMip:t}}function NC(r,e,t,i){const n=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const l=EC(t),c=AC(t),u=wC(t),h=RC(t),d=CC(t),f=_C(t),p=xC(s),_=n.createProgram();let g,m,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Wl).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p].filter(Wl).join(`
`),m.length>0&&(m+=`
`)):(g=[c_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",t.batching?"#define USE_BATCHING":"",t.batchingColor?"#define USE_BATCHING_COLOR":"",t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.instancingMorph?"#define USE_INSTANCING_MORPH":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.displacementMap?"#define USE_DISPLACEMENTMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.mapUv?"#define MAP_UV "+t.mapUv:"",t.alphaMapUv?"#define ALPHAMAP_UV "+t.alphaMapUv:"",t.lightMapUv?"#define LIGHTMAP_UV "+t.lightMapUv:"",t.aoMapUv?"#define AOMAP_UV "+t.aoMapUv:"",t.emissiveMapUv?"#define EMISSIVEMAP_UV "+t.emissiveMapUv:"",t.bumpMapUv?"#define BUMPMAP_UV "+t.bumpMapUv:"",t.normalMapUv?"#define NORMALMAP_UV "+t.normalMapUv:"",t.displacementMapUv?"#define DISPLACEMENTMAP_UV "+t.displacementMapUv:"",t.metalnessMapUv?"#define METALNESSMAP_UV "+t.metalnessMapUv:"",t.roughnessMapUv?"#define ROUGHNESSMAP_UV "+t.roughnessMapUv:"",t.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+t.anisotropyMapUv:"",t.clearcoatMapUv?"#define CLEARCOATMAP_UV "+t.clearcoatMapUv:"",t.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+t.clearcoatNormalMapUv:"",t.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+t.clearcoatRoughnessMapUv:"",t.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+t.iridescenceMapUv:"",t.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+t.iridescenceThicknessMapUv:"",t.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+t.sheenColorMapUv:"",t.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+t.sheenRoughnessMapUv:"",t.specularMapUv?"#define SPECULARMAP_UV "+t.specularMapUv:"",t.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+t.specularColorMapUv:"",t.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+t.specularIntensityMapUv:"",t.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+t.transmissionMapUv:"",t.thicknessMapUv?"#define THICKNESSMAP_UV "+t.thicknessMapUv:"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Wl).join(`
`),m=[c_(t),"#define SHADER_TYPE "+t.shaderType,"#define SHADER_NAME "+t.shaderName,p,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+c:"",t.envMap?"#define "+u:"",t.envMap?"#define "+h:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",t.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.anisotropy?"#define USE_ANISOTROPY":"",t.anisotropyMap?"#define USE_ANISOTROPYMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.dispersion?"#define USE_DISPERSION":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",t.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.alphaHash?"#define USE_ALPHAHASH":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.vertexTangents&&t.flatShading===!1?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor||t.batchingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUv1s?"#define USE_UV1":"",t.vertexUv2s?"#define USE_UV2":"",t.vertexUv3s?"#define USE_UV3":"",t.pointsUvs?"#define USE_POINTS_UV":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+l:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.numLightProbes>0?"#define USE_LIGHT_PROBES":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.decodeVideoTextureEmissive?"#define DECODE_VIDEO_TEXTURE_EMISSIVE":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.reversedDepthBuffer?"#define USE_REVERSEDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==Ki?"#define TONE_MAPPING":"",t.toneMapping!==Ki?Qe.tonemapping_pars_fragment:"",t.toneMapping!==Ki?mC("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Qe.colorspace_pars_fragment,pC("linearToOutputTexel",t.outputColorSpace),gC(),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Wl).join(`
`)),o=wp(o),o=o_(o,t),o=a_(o,t),a=wp(a),a=o_(a,t),a=a_(a,t),o=l_(o),a=l_(a),t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",t.glslVersion===v0?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===v0?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=b+g+o,x=b+m+a,S=n_(n,n.VERTEX_SHADER,y),w=n_(n,n.FRAGMENT_SHADER,x);n.attachShader(_,S),n.attachShader(_,w),t.index0AttributeName!==void 0?n.bindAttribLocation(_,0,t.index0AttributeName):t.morphTargets===!0&&n.bindAttribLocation(_,0,"position"),n.linkProgram(_);function M(C){if(r.debug.checkShaderErrors){const k=n.getProgramInfoLog(_)||"",U=n.getShaderInfoLog(S)||"",G=n.getShaderInfoLog(w)||"",Y=k.trim(),W=U.trim(),Q=G.trim();let H=!0,ie=!0;if(n.getProgramParameter(_,n.LINK_STATUS)===!1)if(H=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(n,_,S,w);else{const ae=r_(n,S,"vertex"),Te=r_(n,w,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(_,n.VALIDATE_STATUS)+`

Material Name: `+C.name+`
Material Type: `+C.type+`

Program Info Log: `+Y+`
`+ae+`
`+Te)}else Y!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Y):(W===""||Q==="")&&(ie=!1);ie&&(C.diagnostics={runnable:H,programLog:Y,vertexShader:{log:W,prefix:g},fragmentShader:{log:Q,prefix:m}})}n.deleteShader(S),n.deleteShader(w),R=new bh(n,_),T=yC(n,_)}let R;this.getUniforms=function(){return R===void 0&&M(this),R};let T;this.getAttributes=function(){return T===void 0&&M(this),T};let E=t.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return E===!1&&(E=n.getProgramParameter(_,uC)),E},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(_),this.program=void 0},this.type=t.shaderType,this.name=t.shaderName,this.id=hC++,this.cacheKey=e,this.usedTimes=1,this.program=_,this.vertexShader=S,this.fragmentShader=w,this}let PC=0;class DC{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,i=e.fragmentShader,n=this._getShaderStage(t),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(e);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const i of t)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let i=t.get(e);return i===void 0&&(i=new Set,t.set(e,i)),i}_getShaderStage(e){const t=this.shaderCache;let i=t.get(e);return i===void 0&&(i=new LC(e),t.set(e,i)),i}}class LC{constructor(e){this.id=PC++,this.code=e,this.usedTimes=0}}function IC(r,e,t,i,n,s,o){const a=new Rb,l=new DC,c=new Set,u=[],h=n.logarithmicDepthBuffer,d=n.vertexTextures;let f=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(T){return c.add(T),T===0?"uv":`uv${T}`}function g(T,E,C,k,U){const G=k.fog,Y=U.geometry,W=T.isMeshStandardMaterial?k.environment:null,Q=(T.isMeshStandardMaterial?t:e).get(T.envMap||W),H=Q&&Q.mapping===lo?Q.image.height:null,ie=p[T.type];T.precision!==null&&(f=n.getMaxPrecision(T.precision),f!==T.precision&&console.warn("THREE.WebGLProgram.getParameters:",T.precision,"not supported, using",f,"instead."));const ae=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,Te=ae!==void 0?ae.length:0;let $e=0;Y.morphAttributes.position!==void 0&&($e=1),Y.morphAttributes.normal!==void 0&&($e=2),Y.morphAttributes.color!==void 0&&($e=3);let gt,_t,j,fe;if(ie){const pt=is[ie];gt=pt.vertexShader,_t=pt.fragmentShader}else gt=T.vertexShader,_t=T.fragmentShader,l.update(T),j=l.getVertexShaderID(T),fe=l.getFragmentShaderID(T);const ce=r.getRenderTarget(),Oe=r.state.buffers.depth.getReversed(),ke=U.isInstancedMesh===!0,Xe=U.isBatchedMesh===!0,Vt=!!T.map,lt=!!T.matcap,D=!!Q,Et=!!T.aoMap,Ie=!!T.lightMap,dt=!!T.bumpMap,De=!!T.normalMap,Pt=!!T.displacementMap,ve=!!T.emissiveMap,et=!!T.metalnessMap,li=!!T.roughnessMap,Ht=T.anisotropy>0,N=T.clearcoat>0,v=T.dispersion>0,z=T.iridescence>0,Z=T.sheen>0,te=T.transmission>0,K=Ht&&!!T.anisotropyMap,Pe=N&&!!T.clearcoatMap,le=N&&!!T.clearcoatNormalMap,we=N&&!!T.clearcoatRoughnessMap,Ce=z&&!!T.iridescenceMap,re=z&&!!T.iridescenceThicknessMap,_e=Z&&!!T.sheenColorMap,Ge=Z&&!!T.sheenRoughnessMap,Ne=!!T.specularMap,pe=!!T.specularColorMap,Ke=!!T.specularIntensityMap,L=te&&!!T.transmissionMap,oe=te&&!!T.thicknessMap,ue=!!T.gradientMap,Se=!!T.alphaMap,ne=T.alphaTest>0,J=!!T.alphaHash,Ae=!!T.extensions;let qe=Ki;T.toneMapped&&(ce===null||ce.isXRRenderTarget===!0)&&(qe=r.toneMapping);const At={shaderID:ie,shaderType:T.type,shaderName:T.name,vertexShader:gt,fragmentShader:_t,defines:T.defines,customVertexShaderID:j,customFragmentShaderID:fe,isRawShaderMaterial:T.isRawShaderMaterial===!0,glslVersion:T.glslVersion,precision:f,batching:Xe,batchingColor:Xe&&U._colorsTexture!==null,instancing:ke,instancingColor:ke&&U.instanceColor!==null,instancingMorph:ke&&U.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:ce===null?r.outputColorSpace:ce.isXRRenderTarget===!0?ce.texture.colorSpace:ho,alphaToCoverage:!!T.alphaToCoverage,map:Vt,matcap:lt,envMap:D,envMapMode:D&&Q.mapping,envMapCubeUVHeight:H,aoMap:Et,lightMap:Ie,bumpMap:dt,normalMap:De,displacementMap:d&&Pt,emissiveMap:ve,normalMapObjectSpace:De&&T.normalMapType===Tb,normalMapTangentSpace:De&&T.normalMapType===Mp,metalnessMap:et,roughnessMap:li,anisotropy:Ht,anisotropyMap:K,clearcoat:N,clearcoatMap:Pe,clearcoatNormalMap:le,clearcoatRoughnessMap:we,dispersion:v,iridescence:z,iridescenceMap:Ce,iridescenceThicknessMap:re,sheen:Z,sheenColorMap:_e,sheenRoughnessMap:Ge,specularMap:Ne,specularColorMap:pe,specularIntensityMap:Ke,transmission:te,transmissionMap:L,thicknessMap:oe,gradientMap:ue,opaque:T.transparent===!1&&T.blending===fn&&T.alphaToCoverage===!1,alphaMap:Se,alphaTest:ne,alphaHash:J,combine:T.combine,mapUv:Vt&&_(T.map.channel),aoMapUv:Et&&_(T.aoMap.channel),lightMapUv:Ie&&_(T.lightMap.channel),bumpMapUv:dt&&_(T.bumpMap.channel),normalMapUv:De&&_(T.normalMap.channel),displacementMapUv:Pt&&_(T.displacementMap.channel),emissiveMapUv:ve&&_(T.emissiveMap.channel),metalnessMapUv:et&&_(T.metalnessMap.channel),roughnessMapUv:li&&_(T.roughnessMap.channel),anisotropyMapUv:K&&_(T.anisotropyMap.channel),clearcoatMapUv:Pe&&_(T.clearcoatMap.channel),clearcoatNormalMapUv:le&&_(T.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:we&&_(T.clearcoatRoughnessMap.channel),iridescenceMapUv:Ce&&_(T.iridescenceMap.channel),iridescenceThicknessMapUv:re&&_(T.iridescenceThicknessMap.channel),sheenColorMapUv:_e&&_(T.sheenColorMap.channel),sheenRoughnessMapUv:Ge&&_(T.sheenRoughnessMap.channel),specularMapUv:Ne&&_(T.specularMap.channel),specularColorMapUv:pe&&_(T.specularColorMap.channel),specularIntensityMapUv:Ke&&_(T.specularIntensityMap.channel),transmissionMapUv:L&&_(T.transmissionMap.channel),thicknessMapUv:oe&&_(T.thicknessMap.channel),alphaMapUv:Se&&_(T.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&(De||Ht),vertexColors:T.vertexColors,vertexAlphas:T.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:U.isPoints===!0&&!!Y.attributes.uv&&(Vt||Se),fog:!!G,useFog:T.fog===!0,fogExp2:!!G&&G.isFogExp2,flatShading:T.flatShading===!0&&T.wireframe===!1,sizeAttenuation:T.sizeAttenuation===!0,logarithmicDepthBuffer:h,reversedDepthBuffer:Oe,skinning:U.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:Te,morphTextureStride:$e,numDirLights:E.directional.length,numPointLights:E.point.length,numSpotLights:E.spot.length,numSpotLightMaps:E.spotLightMap.length,numRectAreaLights:E.rectArea.length,numHemiLights:E.hemi.length,numDirLightShadows:E.directionalShadowMap.length,numPointLightShadows:E.pointShadowMap.length,numSpotLightShadows:E.spotShadowMap.length,numSpotLightShadowsWithMaps:E.numSpotLightShadowsWithMaps,numLightProbes:E.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:T.dithering,shadowMapEnabled:r.shadowMap.enabled&&C.length>0,shadowMapType:r.shadowMap.type,toneMapping:qe,decodeVideoTexture:Vt&&T.map.isVideoTexture===!0&&Be.getTransfer(T.map.colorSpace)===xe,decodeVideoTextureEmissive:ve&&T.emissiveMap.isVideoTexture===!0&&Be.getTransfer(T.emissiveMap.colorSpace)===xe,premultipliedAlpha:T.premultipliedAlpha,doubleSided:T.side===Ai,flipSided:T.side===Ct,useDepthPacking:T.depthPacking>=0,depthPacking:T.depthPacking||0,index0AttributeName:T.index0AttributeName,extensionClipCullDistance:Ae&&T.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(Ae&&T.extensions.multiDraw===!0||Xe)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:T.customProgramCacheKey()};return At.vertexUv1s=c.has(1),At.vertexUv2s=c.has(2),At.vertexUv3s=c.has(3),c.clear(),At}function m(T){const E=[];if(T.shaderID?E.push(T.shaderID):(E.push(T.customVertexShaderID),E.push(T.customFragmentShaderID)),T.defines!==void 0)for(const C in T.defines)E.push(C),E.push(T.defines[C]);return T.isRawShaderMaterial===!1&&(b(E,T),y(E,T),E.push(r.outputColorSpace)),E.push(T.customProgramCacheKey),E.join()}function b(T,E){T.push(E.precision),T.push(E.outputColorSpace),T.push(E.envMapMode),T.push(E.envMapCubeUVHeight),T.push(E.mapUv),T.push(E.alphaMapUv),T.push(E.lightMapUv),T.push(E.aoMapUv),T.push(E.bumpMapUv),T.push(E.normalMapUv),T.push(E.displacementMapUv),T.push(E.emissiveMapUv),T.push(E.metalnessMapUv),T.push(E.roughnessMapUv),T.push(E.anisotropyMapUv),T.push(E.clearcoatMapUv),T.push(E.clearcoatNormalMapUv),T.push(E.clearcoatRoughnessMapUv),T.push(E.iridescenceMapUv),T.push(E.iridescenceThicknessMapUv),T.push(E.sheenColorMapUv),T.push(E.sheenRoughnessMapUv),T.push(E.specularMapUv),T.push(E.specularColorMapUv),T.push(E.specularIntensityMapUv),T.push(E.transmissionMapUv),T.push(E.thicknessMapUv),T.push(E.combine),T.push(E.fogExp2),T.push(E.sizeAttenuation),T.push(E.morphTargetsCount),T.push(E.morphAttributeCount),T.push(E.numDirLights),T.push(E.numPointLights),T.push(E.numSpotLights),T.push(E.numSpotLightMaps),T.push(E.numHemiLights),T.push(E.numRectAreaLights),T.push(E.numDirLightShadows),T.push(E.numPointLightShadows),T.push(E.numSpotLightShadows),T.push(E.numSpotLightShadowsWithMaps),T.push(E.numLightProbes),T.push(E.shadowMapType),T.push(E.toneMapping),T.push(E.numClippingPlanes),T.push(E.numClipIntersection),T.push(E.depthPacking)}function y(T,E){a.disableAll(),E.supportsVertexTextures&&a.enable(0),E.instancing&&a.enable(1),E.instancingColor&&a.enable(2),E.instancingMorph&&a.enable(3),E.matcap&&a.enable(4),E.envMap&&a.enable(5),E.normalMapObjectSpace&&a.enable(6),E.normalMapTangentSpace&&a.enable(7),E.clearcoat&&a.enable(8),E.iridescence&&a.enable(9),E.alphaTest&&a.enable(10),E.vertexColors&&a.enable(11),E.vertexAlphas&&a.enable(12),E.vertexUv1s&&a.enable(13),E.vertexUv2s&&a.enable(14),E.vertexUv3s&&a.enable(15),E.vertexTangents&&a.enable(16),E.anisotropy&&a.enable(17),E.alphaHash&&a.enable(18),E.batching&&a.enable(19),E.dispersion&&a.enable(20),E.batchingColor&&a.enable(21),E.gradientMap&&a.enable(22),T.push(a.mask),a.disableAll(),E.fog&&a.enable(0),E.useFog&&a.enable(1),E.flatShading&&a.enable(2),E.logarithmicDepthBuffer&&a.enable(3),E.reversedDepthBuffer&&a.enable(4),E.skinning&&a.enable(5),E.morphTargets&&a.enable(6),E.morphNormals&&a.enable(7),E.morphColors&&a.enable(8),E.premultipliedAlpha&&a.enable(9),E.shadowMapEnabled&&a.enable(10),E.doubleSided&&a.enable(11),E.flipSided&&a.enable(12),E.useDepthPacking&&a.enable(13),E.dithering&&a.enable(14),E.transmission&&a.enable(15),E.sheen&&a.enable(16),E.opaque&&a.enable(17),E.pointsUvs&&a.enable(18),E.decodeVideoTexture&&a.enable(19),E.decodeVideoTextureEmissive&&a.enable(20),E.alphaToCoverage&&a.enable(21),T.push(a.mask)}function x(T){const E=p[T.type];let C;if(E){const k=is[E];C=l1.clone(k.uniforms)}else C=T.uniforms;return C}function S(T,E){let C;for(let k=0,U=u.length;k<U;k++){const G=u[k];if(G.cacheKey===E){C=G,++C.usedTimes;break}}return C===void 0&&(C=new NC(r,E,T,s),u.push(C)),C}function w(T){if(--T.usedTimes===0){const E=u.indexOf(T);u[E]=u[u.length-1],u.pop(),T.destroy()}}function M(T){l.remove(T)}function R(){l.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:x,acquireProgram:S,releaseProgram:w,releaseShaderCache:M,programs:u,dispose:R}}function FC(){let r=new WeakMap;function e(o){return r.has(o)}function t(o){let a=r.get(o);return a===void 0&&(a={},r.set(o,a)),a}function i(o){r.delete(o)}function n(o,a,l){r.get(o)[a]=l}function s(){r=new WeakMap}return{has:e,get:t,remove:i,update:n,dispose:s}}function UC(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function u_(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function h_(){const r=[];let e=0;const t=[],i=[],n=[];function s(){e=0,t.length=0,i.length=0,n.length=0}function o(h,d,f,p,_,g){let m=r[e];return m===void 0?(m={id:h.id,object:h,geometry:d,material:f,groupOrder:p,renderOrder:h.renderOrder,z:_,group:g},r[e]=m):(m.id=h.id,m.object=h,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=h.renderOrder,m.z=_,m.group=g),e++,m}function a(h,d,f,p,_,g){const m=o(h,d,f,p,_,g);f.transmission>0?i.push(m):f.transparent===!0?n.push(m):t.push(m)}function l(h,d,f,p,_,g){const m=o(h,d,f,p,_,g);f.transmission>0?i.unshift(m):f.transparent===!0?n.unshift(m):t.unshift(m)}function c(h,d){t.length>1&&t.sort(h||UC),i.length>1&&i.sort(d||u_),n.length>1&&n.sort(d||u_)}function u(){for(let h=e,d=r.length;h<d;h++){const f=r[h];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:t,transmissive:i,transparent:n,init:s,push:a,unshift:l,finish:u,sort:c}}function BC(){let r=new WeakMap;function e(i,n){const s=r.get(i);let o;return s===void 0?(o=new h_,r.set(i,[o])):n>=s.length?(o=new h_,s.push(o)):o=s[n],o}function t(){r=new WeakMap}return{get:e,dispose:t}}function OC(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new B,color:new ct};break;case"SpotLight":t={position:new B,direction:new B,color:new ct,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new B,color:new ct,distance:0,decay:0};break;case"HemisphereLight":t={direction:new B,skyColor:new ct,groundColor:new ct};break;case"RectAreaLight":t={color:new ct,position:new B,halfWidth:new B,halfHeight:new B};break}return r[e.id]=t,t}}}function kC(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Je};break;case"SpotLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Je};break;case"PointLight":t={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Je,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let zC=0;function GC(r,e){return(e.castShadow?2:0)-(r.castShadow?2:0)+(e.map?1:0)-(r.map?1:0)}function VC(r){const e=new OC,t=kC(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let c=0;c<9;c++)i.probe.push(new B);const n=new B,s=new It,o=new It;function a(c){let u=0,h=0,d=0;for(let T=0;T<9;T++)i.probe[T].set(0,0,0);let f=0,p=0,_=0,g=0,m=0,b=0,y=0,x=0,S=0,w=0,M=0;c.sort(GC);for(let T=0,E=c.length;T<E;T++){const C=c[T],k=C.color,U=C.intensity,G=C.distance,Y=C.shadow&&C.shadow.map?C.shadow.map.texture:null;if(C.isAmbientLight)u+=k.r*U,h+=k.g*U,d+=k.b*U;else if(C.isLightProbe){for(let W=0;W<9;W++)i.probe[W].addScaledVector(C.sh.coefficients[W],U);M++}else if(C.isDirectionalLight){const W=e.get(C);if(W.color.copy(C.color).multiplyScalar(C.intensity),C.castShadow){const Q=C.shadow,H=t.get(C);H.shadowIntensity=Q.intensity,H.shadowBias=Q.bias,H.shadowNormalBias=Q.normalBias,H.shadowRadius=Q.radius,H.shadowMapSize=Q.mapSize,i.directionalShadow[f]=H,i.directionalShadowMap[f]=Y,i.directionalShadowMatrix[f]=C.shadow.matrix,b++}i.directional[f]=W,f++}else if(C.isSpotLight){const W=e.get(C);W.position.setFromMatrixPosition(C.matrixWorld),W.color.copy(k).multiplyScalar(U),W.distance=G,W.coneCos=Math.cos(C.angle),W.penumbraCos=Math.cos(C.angle*(1-C.penumbra)),W.decay=C.decay,i.spot[_]=W;const Q=C.shadow;if(C.map&&(i.spotLightMap[S]=C.map,S++,Q.updateMatrices(C),C.castShadow&&w++),i.spotLightMatrix[_]=Q.matrix,C.castShadow){const H=t.get(C);H.shadowIntensity=Q.intensity,H.shadowBias=Q.bias,H.shadowNormalBias=Q.normalBias,H.shadowRadius=Q.radius,H.shadowMapSize=Q.mapSize,i.spotShadow[_]=H,i.spotShadowMap[_]=Y,x++}_++}else if(C.isRectAreaLight){const W=e.get(C);W.color.copy(k).multiplyScalar(U),W.halfWidth.set(C.width*.5,0,0),W.halfHeight.set(0,C.height*.5,0),i.rectArea[g]=W,g++}else if(C.isPointLight){const W=e.get(C);if(W.color.copy(C.color).multiplyScalar(C.intensity),W.distance=C.distance,W.decay=C.decay,C.castShadow){const Q=C.shadow,H=t.get(C);H.shadowIntensity=Q.intensity,H.shadowBias=Q.bias,H.shadowNormalBias=Q.normalBias,H.shadowRadius=Q.radius,H.shadowMapSize=Q.mapSize,H.shadowCameraNear=Q.camera.near,H.shadowCameraFar=Q.camera.far,i.pointShadow[p]=H,i.pointShadowMap[p]=Y,i.pointShadowMatrix[p]=C.shadow.matrix,y++}i.point[p]=W,p++}else if(C.isHemisphereLight){const W=e.get(C);W.skyColor.copy(C.color).multiplyScalar(U),W.groundColor.copy(C.groundColor).multiplyScalar(U),i.hemi[m]=W,m++}}g>0&&(r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=he.LTC_FLOAT_1,i.rectAreaLTC2=he.LTC_FLOAT_2):(i.rectAreaLTC1=he.LTC_HALF_1,i.rectAreaLTC2=he.LTC_HALF_2)),i.ambient[0]=u,i.ambient[1]=h,i.ambient[2]=d;const R=i.hash;(R.directionalLength!==f||R.pointLength!==p||R.spotLength!==_||R.rectAreaLength!==g||R.hemiLength!==m||R.numDirectionalShadows!==b||R.numPointShadows!==y||R.numSpotShadows!==x||R.numSpotMaps!==S||R.numLightProbes!==M)&&(i.directional.length=f,i.spot.length=_,i.rectArea.length=g,i.point.length=p,i.hemi.length=m,i.directionalShadow.length=b,i.directionalShadowMap.length=b,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=x,i.spotShadowMap.length=x,i.directionalShadowMatrix.length=b,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=x+S-w,i.spotLightMap.length=S,i.numSpotLightShadowsWithMaps=w,i.numLightProbes=M,R.directionalLength=f,R.pointLength=p,R.spotLength=_,R.rectAreaLength=g,R.hemiLength=m,R.numDirectionalShadows=b,R.numPointShadows=y,R.numSpotShadows=x,R.numSpotMaps=S,R.numLightProbes=M,i.version=zC++)}function l(c,u){let h=0,d=0,f=0,p=0,_=0;const g=u.matrixWorldInverse;for(let m=0,b=c.length;m<b;m++){const y=c[m];if(y.isDirectionalLight){const x=i.directional[h];x.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(n),x.direction.transformDirection(g),h++}else if(y.isSpotLight){const x=i.spot[f];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(g),x.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),x.direction.sub(n),x.direction.transformDirection(g),f++}else if(y.isRectAreaLight){const x=i.rectArea[p];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(g),o.identity(),s.copy(y.matrixWorld),s.premultiply(g),o.extractRotation(s),x.halfWidth.set(y.width*.5,0,0),x.halfHeight.set(0,y.height*.5,0),x.halfWidth.applyMatrix4(o),x.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const x=i.point[d];x.position.setFromMatrixPosition(y.matrixWorld),x.position.applyMatrix4(g),d++}else if(y.isHemisphereLight){const x=i.hemi[_];x.direction.setFromMatrixPosition(y.matrixWorld),x.direction.transformDirection(g),_++}}}return{setup:a,setupView:l,state:i}}function d_(r){const e=new VC(r),t=[],i=[];function n(u){c.camera=u,t.length=0,i.length=0}function s(u){t.push(u)}function o(u){i.push(u)}function a(){e.setup(t)}function l(u){e.setupView(t,u)}const c={lightsArray:t,shadowsArray:i,camera:null,lights:e,transmissionRenderTarget:{}};return{init:n,state:c,setupLights:a,setupLightsView:l,pushLight:s,pushShadow:o}}function HC(r){let e=new WeakMap;function t(n,s=0){const o=e.get(n);let a;return o===void 0?(a=new d_(r),e.set(n,[a])):s>=o.length?(a=new d_(r),o.push(a)):a=o[s],a}function i(){e=new WeakMap}return{get:t,dispose:i}}const WC=`
void main() {

	gl_Position = vec4( position, 1.0 );

}
`,$C=`
uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;

#include <packing>

void main() {

	const float samples = float( VSM_SAMPLES );

	float mean = 0.0;
	float squared_mean = 0.0;

	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {

		float uvOffset = uvStart + i * uvStride;

		#ifdef HORIZONTAL_PASS

			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;

		#else

			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;

		#endif

	}

	mean = mean / samples;
	squared_mean = squared_mean / samples;

	float std_dev = sqrt( squared_mean - mean * mean );

	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );

}
`;function XC(r,e,t){let i=new id;const n=new Je,s=new Je,o=new je,a=new y1({depthPacking:uE}),l=new b1,c={},u=t.maxTextureSize,h={[ji]:Ct,[Ct]:ji,[Ai]:Ai},d=new Tr({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Je},radius:{value:4}},vertexShader:WC,fragmentShader:$C}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new $s;p.setAttribute("position",new Ci(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new fi(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=im;let m=this.type;this.render=function(w,M,R){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||w.length===0)return;const T=r.getRenderTarget(),E=r.getActiveCubeFace(),C=r.getActiveMipmapLevel(),k=r.state;k.setBlending(dn),k.buffers.depth.getReversed()?k.buffers.color.setClear(0,0,0,0):k.buffers.color.setClear(1,1,1,1),k.buffers.depth.setTest(!0),k.setScissorTest(!1);const U=m!==Cs&&this.type===Cs,G=m===Cs&&this.type!==Cs;for(let Y=0,W=w.length;Y<W;Y++){const Q=w[Y],H=Q.shadow;if(H===void 0){console.warn("THREE.WebGLShadowMap:",Q,"has no shadow.");continue}if(H.autoUpdate===!1&&H.needsUpdate===!1)continue;n.copy(H.mapSize);const ie=H.getFrameExtents();if(n.multiply(ie),s.copy(H.mapSize),(n.x>u||n.y>u)&&(n.x>u&&(s.x=Math.floor(u/ie.x),n.x=s.x*ie.x,H.mapSize.x=s.x),n.y>u&&(s.y=Math.floor(u/ie.y),n.y=s.y*ie.y,H.mapSize.y=s.y)),H.map===null||U===!0||G===!0){const Te=this.type!==Cs?{minFilter:Rt,magFilter:Rt}:{};H.map!==null&&H.map.dispose(),H.map=new po(n.x,n.y,Te),H.map.texture.name=Q.name+".shadowMap",H.camera.updateProjectionMatrix()}r.setRenderTarget(H.map),r.clear();const ae=H.getViewportCount();for(let Te=0;Te<ae;Te++){const $e=H.getViewport(Te);o.set(s.x*$e.x,s.y*$e.y,s.x*$e.z,s.y*$e.w),k.viewport(o),H.updateMatrices(Q,Te),i=H.getFrustum(),x(M,R,H.camera,Q,this.type)}H.isPointLightShadow!==!0&&this.type===Cs&&b(H,R),H.needsUpdate=!1}m=this.type,g.needsUpdate=!1,r.setRenderTarget(T,E,C)};function b(w,M){const R=e.update(_);d.defines.VSM_SAMPLES!==w.blurSamples&&(d.defines.VSM_SAMPLES=w.blurSamples,f.defines.VSM_SAMPLES=w.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),w.mapPass===null&&(w.mapPass=new po(n.x,n.y)),d.uniforms.shadow_pass.value=w.map.texture,d.uniforms.resolution.value=w.mapSize,d.uniforms.radius.value=w.radius,r.setRenderTarget(w.mapPass),r.clear(),r.renderBufferDirect(M,null,R,d,_,null),f.uniforms.shadow_pass.value=w.mapPass.texture,f.uniforms.resolution.value=w.mapSize,f.uniforms.radius.value=w.radius,r.setRenderTarget(w.map),r.clear(),r.renderBufferDirect(M,null,R,f,_,null)}function y(w,M,R,T){let E=null;const C=R.isPointLight===!0?w.customDistanceMaterial:w.customDepthMaterial;if(C!==void 0)E=C;else if(E=R.isPointLight===!0?l:a,r.localClippingEnabled&&M.clipShadows===!0&&Array.isArray(M.clippingPlanes)&&M.clippingPlanes.length!==0||M.displacementMap&&M.displacementScale!==0||M.alphaMap&&M.alphaTest>0||M.map&&M.alphaTest>0||M.alphaToCoverage===!0){const k=E.uuid,U=M.uuid;let G=c[k];G===void 0&&(G={},c[k]=G);let Y=G[U];Y===void 0&&(Y=E.clone(),G[U]=Y,M.addEventListener("dispose",S)),E=Y}if(E.visible=M.visible,E.wireframe=M.wireframe,T===Cs?E.side=M.shadowSide!==null?M.shadowSide:M.side:E.side=M.shadowSide!==null?M.shadowSide:h[M.side],E.alphaMap=M.alphaMap,E.alphaTest=M.alphaToCoverage===!0?.5:M.alphaTest,E.map=M.map,E.clipShadows=M.clipShadows,E.clippingPlanes=M.clippingPlanes,E.clipIntersection=M.clipIntersection,E.displacementMap=M.displacementMap,E.displacementScale=M.displacementScale,E.displacementBias=M.displacementBias,E.wireframeLinewidth=M.wireframeLinewidth,E.linewidth=M.linewidth,R.isPointLight===!0&&E.isMeshDistanceMaterial===!0){const k=r.properties.get(E);k.light=R}return E}function x(w,M,R,T,E){if(w.visible===!1)return;if(w.layers.test(M.layers)&&(w.isMesh||w.isLine||w.isPoints)&&(w.castShadow||w.receiveShadow&&E===Cs)&&(!w.frustumCulled||i.intersectsObject(w))){w.modelViewMatrix.multiplyMatrices(R.matrixWorldInverse,w.matrixWorld);const U=e.update(w),G=w.material;if(Array.isArray(G)){const Y=U.groups;for(let W=0,Q=Y.length;W<Q;W++){const H=Y[W],ie=G[H.materialIndex];if(ie&&ie.visible){const ae=y(w,ie,T,E);w.onBeforeShadow(r,w,M,R,U,ae,H),r.renderBufferDirect(R,null,U,ae,w,H),w.onAfterShadow(r,w,M,R,U,ae,H)}}}else if(G.visible){const Y=y(w,G,T,E);w.onBeforeShadow(r,w,M,R,U,Y,null),r.renderBufferDirect(R,null,U,Y,w,null),w.onAfterShadow(r,w,M,R,U,Y,null)}}const k=w.children;for(let U=0,G=k.length;U<G;U++)x(k[U],M,R,T,E)}function S(w){w.target.removeEventListener("dispose",S);for(const R in c){const T=c[R],E=w.target.uuid;E in T&&(T[E].dispose(),delete T[E])}}}const qC={[uc]:hc,[dc]:mc,[fc]:gc,[br]:pc,[hc]:uc,[mc]:dc,[gc]:fc,[pc]:br};function YC(r,e){function t(){let L=!1;const oe=new je;let ue=null;const Se=new je(0,0,0,0);return{setMask:function(ne){ue!==ne&&!L&&(r.colorMask(ne,ne,ne,ne),ue=ne)},setLocked:function(ne){L=ne},setClear:function(ne,J,Ae,qe,At){At===!0&&(ne*=qe,J*=qe,Ae*=qe),oe.set(ne,J,Ae,qe),Se.equals(oe)===!1&&(r.clearColor(ne,J,Ae,qe),Se.copy(oe))},reset:function(){L=!1,ue=null,Se.set(-1,0,0,0)}}}function i(){let L=!1,oe=!1,ue=null,Se=null,ne=null;return{setReversed:function(J){if(oe!==J){const Ae=e.get("EXT_clip_control");J?Ae.clipControlEXT(Ae.LOWER_LEFT_EXT,Ae.ZERO_TO_ONE_EXT):Ae.clipControlEXT(Ae.LOWER_LEFT_EXT,Ae.NEGATIVE_ONE_TO_ONE_EXT),oe=J;const qe=ne;ne=null,this.setClear(qe)}},getReversed:function(){return oe},setTest:function(J){J?ce(r.DEPTH_TEST):Oe(r.DEPTH_TEST)},setMask:function(J){ue!==J&&!L&&(r.depthMask(J),ue=J)},setFunc:function(J){if(oe&&(J=qC[J]),Se!==J){switch(J){case uc:r.depthFunc(r.NEVER);break;case hc:r.depthFunc(r.ALWAYS);break;case dc:r.depthFunc(r.LESS);break;case br:r.depthFunc(r.LEQUAL);break;case fc:r.depthFunc(r.EQUAL);break;case pc:r.depthFunc(r.GEQUAL);break;case mc:r.depthFunc(r.GREATER);break;case gc:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}Se=J}},setLocked:function(J){L=J},setClear:function(J){ne!==J&&(oe&&(J=1-J),r.clearDepth(J),ne=J)},reset:function(){L=!1,ue=null,Se=null,ne=null,oe=!1}}}function n(){let L=!1,oe=null,ue=null,Se=null,ne=null,J=null,Ae=null,qe=null,At=null;return{setTest:function(pt){L||(pt?ce(r.STENCIL_TEST):Oe(r.STENCIL_TEST))},setMask:function(pt){oe!==pt&&!L&&(r.stencilMask(pt),oe=pt)},setFunc:function(pt,_s,Qn){(ue!==pt||Se!==_s||ne!==Qn)&&(r.stencilFunc(pt,_s,Qn),ue=pt,Se=_s,ne=Qn)},setOp:function(pt,_s,Qn){(J!==pt||Ae!==_s||qe!==Qn)&&(r.stencilOp(pt,_s,Qn),J=pt,Ae=_s,qe=Qn)},setLocked:function(pt){L=pt},setClear:function(pt){At!==pt&&(r.clearStencil(pt),At=pt)},reset:function(){L=!1,oe=null,ue=null,Se=null,ne=null,J=null,Ae=null,qe=null,At=null}}}const s=new t,o=new i,a=new n,l=new WeakMap,c=new WeakMap;let u={},h={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,b=null,y=null,x=null,S=null,w=null,M=new ct(0,0,0),R=0,T=!1,E=null,C=null,k=null,U=null,G=null;const Y=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let W=!1,Q=0;const H=r.getParameter(r.VERSION);H.indexOf("WebGL")!==-1?(Q=parseFloat(/^WebGL (\d)/.exec(H)[1]),W=Q>=1):H.indexOf("OpenGL ES")!==-1&&(Q=parseFloat(/^OpenGL ES (\d)/.exec(H)[1]),W=Q>=2);let ie=null,ae={};const Te=r.getParameter(r.SCISSOR_BOX),$e=r.getParameter(r.VIEWPORT),gt=new je().fromArray(Te),_t=new je().fromArray($e);function j(L,oe,ue,Se){const ne=new Uint8Array(4),J=r.createTexture();r.bindTexture(L,J),r.texParameteri(L,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(L,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Ae=0;Ae<ue;Ae++)L===r.TEXTURE_3D||L===r.TEXTURE_2D_ARRAY?r.texImage3D(oe,0,r.RGBA,1,1,Se,0,r.RGBA,r.UNSIGNED_BYTE,ne):r.texImage2D(oe+Ae,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,ne);return J}const fe={};fe[r.TEXTURE_2D]=j(r.TEXTURE_2D,r.TEXTURE_2D,1),fe[r.TEXTURE_CUBE_MAP]=j(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),fe[r.TEXTURE_2D_ARRAY]=j(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),fe[r.TEXTURE_3D]=j(r.TEXTURE_3D,r.TEXTURE_3D,1,1),s.setClear(0,0,0,1),o.setClear(1),a.setClear(0),ce(r.DEPTH_TEST),o.setFunc(br),dt(!1),De(Tp),ce(r.CULL_FACE),Et(dn);function ce(L){u[L]!==!0&&(r.enable(L),u[L]=!0)}function Oe(L){u[L]!==!1&&(r.disable(L),u[L]=!1)}function ke(L,oe){return h[L]!==oe?(r.bindFramebuffer(L,oe),h[L]=oe,L===r.DRAW_FRAMEBUFFER&&(h[r.FRAMEBUFFER]=oe),L===r.FRAMEBUFFER&&(h[r.DRAW_FRAMEBUFFER]=oe),!0):!1}function Xe(L,oe){let ue=f,Se=!1;if(L){ue=d.get(oe),ue===void 0&&(ue=[],d.set(oe,ue));const ne=L.textures;if(ue.length!==ne.length||ue[0]!==r.COLOR_ATTACHMENT0){for(let J=0,Ae=ne.length;J<Ae;J++)ue[J]=r.COLOR_ATTACHMENT0+J;ue.length=ne.length,Se=!0}}else ue[0]!==r.BACK&&(ue[0]=r.BACK,Se=!0);Se&&r.drawBuffers(ue)}function Vt(L){return p!==L?(r.useProgram(L),p=L,!0):!1}const lt={[wi]:r.FUNC_ADD,[nm]:r.FUNC_SUBTRACT,[sm]:r.FUNC_REVERSE_SUBTRACT};lt[xb]=r.MIN,lt[yb]=r.MAX;const D={[Ps]:r.ZERO,[rm]:r.ONE,[om]:r.SRC_COLOR,[lc]:r.SRC_ALPHA,[dm]:r.SRC_ALPHA_SATURATE,[um]:r.DST_COLOR,[lm]:r.DST_ALPHA,[am]:r.ONE_MINUS_SRC_COLOR,[cc]:r.ONE_MINUS_SRC_ALPHA,[hm]:r.ONE_MINUS_DST_COLOR,[cm]:r.ONE_MINUS_DST_ALPHA,[jM]:r.CONSTANT_COLOR,[KM]:r.ONE_MINUS_CONSTANT_COLOR,[ZM]:r.CONSTANT_ALPHA,[QM]:r.ONE_MINUS_CONSTANT_ALPHA};function Et(L,oe,ue,Se,ne,J,Ae,qe,At,pt){if(L===dn){_===!0&&(Oe(r.BLEND),_=!1);return}if(_===!1&&(ce(r.BLEND),_=!0),L!==ua){if(L!==g||pt!==T){if((m!==wi||x!==wi)&&(r.blendEquation(r.FUNC_ADD),m=wi,x=wi),pt)switch(L){case fn:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case va:r.blendFunc(r.ONE,r.ONE);break;case Ma:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Ea:r.blendFuncSeparate(r.DST_COLOR,r.ONE_MINUS_SRC_ALPHA,r.ZERO,r.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}else switch(L){case fn:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case va:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE,r.ONE,r.ONE);break;case Ma:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ea:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",L);break}b=null,y=null,S=null,w=null,M.set(0,0,0),R=0,g=L,T=pt}return}ne=ne||oe,J=J||ue,Ae=Ae||Se,(oe!==m||ne!==x)&&(r.blendEquationSeparate(lt[oe],lt[ne]),m=oe,x=ne),(ue!==b||Se!==y||J!==S||Ae!==w)&&(r.blendFuncSeparate(D[ue],D[Se],D[J],D[Ae]),b=ue,y=Se,S=J,w=Ae),(qe.equals(M)===!1||At!==R)&&(r.blendColor(qe.r,qe.g,qe.b,At),M.copy(qe),R=At),g=L,T=!1}function Ie(L,oe){L.side===Ai?Oe(r.CULL_FACE):ce(r.CULL_FACE);let ue=L.side===Ct;oe&&(ue=!ue),dt(ue),L.blending===fn&&L.transparent===!1?Et(dn):Et(L.blending,L.blendEquation,L.blendSrc,L.blendDst,L.blendEquationAlpha,L.blendSrcAlpha,L.blendDstAlpha,L.blendColor,L.blendAlpha,L.premultipliedAlpha),o.setFunc(L.depthFunc),o.setTest(L.depthTest),o.setMask(L.depthWrite),s.setMask(L.colorWrite);const Se=L.stencilWrite;a.setTest(Se),Se&&(a.setMask(L.stencilWriteMask),a.setFunc(L.stencilFunc,L.stencilRef,L.stencilFuncMask),a.setOp(L.stencilFail,L.stencilZFail,L.stencilZPass)),ve(L.polygonOffset,L.polygonOffsetFactor,L.polygonOffsetUnits),L.alphaToCoverage===!0?ce(r.SAMPLE_ALPHA_TO_COVERAGE):Oe(r.SAMPLE_ALPHA_TO_COVERAGE)}function dt(L){E!==L&&(L?r.frontFace(r.CW):r.frontFace(r.CCW),E=L)}function De(L){L!==gb?(ce(r.CULL_FACE),L!==C&&(L===Tp?r.cullFace(r.BACK):L===_b?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):Oe(r.CULL_FACE),C=L}function Pt(L){L!==k&&(W&&r.lineWidth(L),k=L)}function ve(L,oe,ue){L?(ce(r.POLYGON_OFFSET_FILL),(U!==oe||G!==ue)&&(r.polygonOffset(oe,ue),U=oe,G=ue)):Oe(r.POLYGON_OFFSET_FILL)}function et(L){L?ce(r.SCISSOR_TEST):Oe(r.SCISSOR_TEST)}function li(L){L===void 0&&(L=r.TEXTURE0+Y-1),ie!==L&&(r.activeTexture(L),ie=L)}function Ht(L,oe,ue){ue===void 0&&(ie===null?ue=r.TEXTURE0+Y-1:ue=ie);let Se=ae[ue];Se===void 0&&(Se={type:void 0,texture:void 0},ae[ue]=Se),(Se.type!==L||Se.texture!==oe)&&(ie!==ue&&(r.activeTexture(ue),ie=ue),r.bindTexture(L,oe||fe[L]),Se.type=L,Se.texture=oe)}function N(){const L=ae[ie];L!==void 0&&L.type!==void 0&&(r.bindTexture(L.type,null),L.type=void 0,L.texture=void 0)}function v(){try{r.compressedTexImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function z(){try{r.compressedTexImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Z(){try{r.texSubImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function te(){try{r.texSubImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function K(){try{r.compressedTexSubImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Pe(){try{r.compressedTexSubImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function le(){try{r.texStorage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function we(){try{r.texStorage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function Ce(){try{r.texImage2D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function re(){try{r.texImage3D(...arguments)}catch(L){console.error("THREE.WebGLState:",L)}}function _e(L){gt.equals(L)===!1&&(r.scissor(L.x,L.y,L.z,L.w),gt.copy(L))}function Ge(L){_t.equals(L)===!1&&(r.viewport(L.x,L.y,L.z,L.w),_t.copy(L))}function Ne(L,oe){let ue=c.get(oe);ue===void 0&&(ue=new WeakMap,c.set(oe,ue));let Se=ue.get(L);Se===void 0&&(Se=r.getUniformBlockIndex(oe,L.name),ue.set(L,Se))}function pe(L,oe){const Se=c.get(oe).get(L);l.get(oe)!==Se&&(r.uniformBlockBinding(oe,Se,L.__bindingPointIndex),l.set(oe,Se))}function Ke(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),o.setReversed(!1),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},ie=null,ae={},h={},d=new WeakMap,f=[],p=null,_=!1,g=null,m=null,b=null,y=null,x=null,S=null,w=null,M=new ct(0,0,0),R=0,T=!1,E=null,C=null,k=null,U=null,G=null,gt.set(0,0,r.canvas.width,r.canvas.height),_t.set(0,0,r.canvas.width,r.canvas.height),s.reset(),o.reset(),a.reset()}return{buffers:{color:s,depth:o,stencil:a},enable:ce,disable:Oe,bindFramebuffer:ke,drawBuffers:Xe,useProgram:Vt,setBlending:Et,setMaterial:Ie,setFlipSided:dt,setCullFace:De,setLineWidth:Pt,setPolygonOffset:ve,setScissorTest:et,activeTexture:li,bindTexture:Ht,unbindTexture:N,compressedTexImage2D:v,compressedTexImage3D:z,texImage2D:Ce,texImage3D:re,updateUBOMapping:Ne,uniformBlockBinding:pe,texStorage2D:le,texStorage3D:we,texSubImage2D:Z,texSubImage3D:te,compressedTexSubImage2D:K,compressedTexSubImage3D:Pe,scissor:_e,viewport:Ge,reset:Ke}}function jC(r,e,t,i,n,s,o){const a=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,l=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),c=new Je,u=new WeakMap;let h;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(N,v){return f?new OffscreenCanvas(N,v):Nh("canvas")}function _(N,v,z){let Z=1;const te=Ht(N);if((te.width>z||te.height>z)&&(Z=z/Math.max(te.width,te.height)),Z<1)if(typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&N instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&N instanceof ImageBitmap||typeof VideoFrame<"u"&&N instanceof VideoFrame){const K=Math.floor(Z*te.width),Pe=Math.floor(Z*te.height);h===void 0&&(h=p(K,Pe));const le=v?p(K,Pe):h;return le.width=K,le.height=Pe,le.getContext("2d").drawImage(N,0,0,K,Pe),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+te.width+"x"+te.height+") to ("+K+"x"+Pe+")."),le}else return"data"in N&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+te.width+"x"+te.height+")."),N;return N}function g(N){return N.generateMipmaps}function m(N){r.generateMipmap(N)}function b(N){return N.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:N.isWebGL3DRenderTarget?r.TEXTURE_3D:N.isWebGLArrayRenderTarget||N.isCompressedArrayTexture?r.TEXTURE_2D_ARRAY:r.TEXTURE_2D}function y(N,v,z,Z,te=!1){if(N!==null){if(r[N]!==void 0)return r[N];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+N+"'")}let K=v;if(v===r.RED&&(z===r.FLOAT&&(K=r.R32F),z===r.HALF_FLOAT&&(K=r.R16F),z===r.UNSIGNED_BYTE&&(K=r.R8)),v===r.RED_INTEGER&&(z===r.UNSIGNED_BYTE&&(K=r.R8UI),z===r.UNSIGNED_SHORT&&(K=r.R16UI),z===r.UNSIGNED_INT&&(K=r.R32UI),z===r.BYTE&&(K=r.R8I),z===r.SHORT&&(K=r.R16I),z===r.INT&&(K=r.R32I)),v===r.RG&&(z===r.FLOAT&&(K=r.RG32F),z===r.HALF_FLOAT&&(K=r.RG16F),z===r.UNSIGNED_BYTE&&(K=r.RG8)),v===r.RG_INTEGER&&(z===r.UNSIGNED_BYTE&&(K=r.RG8UI),z===r.UNSIGNED_SHORT&&(K=r.RG16UI),z===r.UNSIGNED_INT&&(K=r.RG32UI),z===r.BYTE&&(K=r.RG8I),z===r.SHORT&&(K=r.RG16I),z===r.INT&&(K=r.RG32I)),v===r.RGB_INTEGER&&(z===r.UNSIGNED_BYTE&&(K=r.RGB8UI),z===r.UNSIGNED_SHORT&&(K=r.RGB16UI),z===r.UNSIGNED_INT&&(K=r.RGB32UI),z===r.BYTE&&(K=r.RGB8I),z===r.SHORT&&(K=r.RGB16I),z===r.INT&&(K=r.RGB32I)),v===r.RGBA_INTEGER&&(z===r.UNSIGNED_BYTE&&(K=r.RGBA8UI),z===r.UNSIGNED_SHORT&&(K=r.RGBA16UI),z===r.UNSIGNED_INT&&(K=r.RGBA32UI),z===r.BYTE&&(K=r.RGBA8I),z===r.SHORT&&(K=r.RGBA16I),z===r.INT&&(K=r.RGBA32I)),v===r.RGB&&z===r.UNSIGNED_INT_5_9_9_9_REV&&(K=r.RGB9_E5),v===r.RGBA){const Pe=te?Wa:Be.getTransfer(Z);z===r.FLOAT&&(K=r.RGBA32F),z===r.HALF_FLOAT&&(K=r.RGBA16F),z===r.UNSIGNED_BYTE&&(K=Pe===xe?r.SRGB8_ALPHA8:r.RGBA8),z===r.UNSIGNED_SHORT_4_4_4_4&&(K=r.RGBA4),z===r.UNSIGNED_SHORT_5_5_5_1&&(K=r.RGB5_A1)}return(K===r.R16F||K===r.R32F||K===r.RG16F||K===r.RG32F||K===r.RGBA16F||K===r.RGBA32F)&&e.get("EXT_color_buffer_float"),K}function x(N,v){let z;return N?v===null||v===Mt||v===mn?z=r.DEPTH24_STENCIL8:v===Wt?z=r.DEPTH32F_STENCIL8:v===Wn&&(z=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):v===null||v===Mt||v===mn?z=r.DEPTH_COMPONENT24:v===Wt?z=r.DEPTH_COMPONENT32F:v===Wn&&(z=r.DEPTH_COMPONENT16),z}function S(N,v){return g(N)===!0||N.isFramebufferTexture&&N.minFilter!==Rt&&N.minFilter!==ni?Math.log2(Math.max(v.width,v.height))+1:N.mipmaps!==void 0&&N.mipmaps.length>0?N.mipmaps.length:N.isCompressedTexture&&Array.isArray(N.image)?v.mipmaps.length:1}function w(N){const v=N.target;v.removeEventListener("dispose",w),R(v),v.isVideoTexture&&u.delete(v)}function M(N){const v=N.target;v.removeEventListener("dispose",M),E(v)}function R(N){const v=i.get(N);if(v.__webglInit===void 0)return;const z=N.source,Z=d.get(z);if(Z){const te=Z[v.__cacheKey];te.usedTimes--,te.usedTimes===0&&T(N),Object.keys(Z).length===0&&d.delete(z)}i.remove(N)}function T(N){const v=i.get(N);r.deleteTexture(v.__webglTexture);const z=N.source,Z=d.get(z);delete Z[v.__cacheKey],o.memory.textures--}function E(N){const v=i.get(N);if(N.depthTexture&&(N.depthTexture.dispose(),i.remove(N.depthTexture)),N.isWebGLCubeRenderTarget)for(let Z=0;Z<6;Z++){if(Array.isArray(v.__webglFramebuffer[Z]))for(let te=0;te<v.__webglFramebuffer[Z].length;te++)r.deleteFramebuffer(v.__webglFramebuffer[Z][te]);else r.deleteFramebuffer(v.__webglFramebuffer[Z]);v.__webglDepthbuffer&&r.deleteRenderbuffer(v.__webglDepthbuffer[Z])}else{if(Array.isArray(v.__webglFramebuffer))for(let Z=0;Z<v.__webglFramebuffer.length;Z++)r.deleteFramebuffer(v.__webglFramebuffer[Z]);else r.deleteFramebuffer(v.__webglFramebuffer);if(v.__webglDepthbuffer&&r.deleteRenderbuffer(v.__webglDepthbuffer),v.__webglMultisampledFramebuffer&&r.deleteFramebuffer(v.__webglMultisampledFramebuffer),v.__webglColorRenderbuffer)for(let Z=0;Z<v.__webglColorRenderbuffer.length;Z++)v.__webglColorRenderbuffer[Z]&&r.deleteRenderbuffer(v.__webglColorRenderbuffer[Z]);v.__webglDepthRenderbuffer&&r.deleteRenderbuffer(v.__webglDepthRenderbuffer)}const z=N.textures;for(let Z=0,te=z.length;Z<te;Z++){const K=i.get(z[Z]);K.__webglTexture&&(r.deleteTexture(K.__webglTexture),o.memory.textures--),i.remove(z[Z])}i.remove(N)}let C=0;function k(){C=0}function U(){const N=C;return N>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+N+" texture units while this GPU supports only "+n.maxTextures),C+=1,N}function G(N){const v=[];return v.push(N.wrapS),v.push(N.wrapT),v.push(N.wrapR||0),v.push(N.magFilter),v.push(N.minFilter),v.push(N.anisotropy),v.push(N.internalFormat),v.push(N.format),v.push(N.type),v.push(N.generateMipmaps),v.push(N.premultiplyAlpha),v.push(N.flipY),v.push(N.unpackAlignment),v.push(N.colorSpace),v.join()}function Y(N,v){const z=i.get(N);if(N.isVideoTexture&&et(N),N.isRenderTargetTexture===!1&&N.isExternalTexture!==!0&&N.version>0&&z.__version!==N.version){const Z=N.image;if(Z===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Z.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{fe(z,N,v);return}}else N.isExternalTexture&&(z.__webglTexture=N.sourceTexture?N.sourceTexture:null);t.bindTexture(r.TEXTURE_2D,z.__webglTexture,r.TEXTURE0+v)}function W(N,v){const z=i.get(N);if(N.isRenderTargetTexture===!1&&N.version>0&&z.__version!==N.version){fe(z,N,v);return}t.bindTexture(r.TEXTURE_2D_ARRAY,z.__webglTexture,r.TEXTURE0+v)}function Q(N,v){const z=i.get(N);if(N.isRenderTargetTexture===!1&&N.version>0&&z.__version!==N.version){fe(z,N,v);return}t.bindTexture(r.TEXTURE_3D,z.__webglTexture,r.TEXTURE0+v)}function H(N,v){const z=i.get(N);if(N.version>0&&z.__version!==N.version){ce(z,N,v);return}t.bindTexture(r.TEXTURE_CUBE_MAP,z.__webglTexture,r.TEXTURE0+v)}const ie={[co]:r.REPEAT,[rs]:r.CLAMP_TO_EDGE,[uo]:r.MIRRORED_REPEAT},ae={[Rt]:r.NEAREST,[pm]:r.NEAREST_MIPMAP_NEAREST,[Bs]:r.NEAREST_MIPMAP_LINEAR,[ni]:r.LINEAR,[ha]:r.LINEAR_MIPMAP_NEAREST,[Xi]:r.LINEAR_MIPMAP_LINEAR},Te={[_m]:r.NEVER,[vm]:r.ALWAYS,[xm]:r.LESS,[Jh]:r.LEQUAL,[ym]:r.EQUAL,[Sm]:r.GEQUAL,[bm]:r.GREATER,[Tm]:r.NOTEQUAL};function $e(N,v){if(v.type===Wt&&e.has("OES_texture_float_linear")===!1&&(v.magFilter===ni||v.magFilter===ha||v.magFilter===Bs||v.magFilter===Xi||v.minFilter===ni||v.minFilter===ha||v.minFilter===Bs||v.minFilter===Xi)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(N,r.TEXTURE_WRAP_S,ie[v.wrapS]),r.texParameteri(N,r.TEXTURE_WRAP_T,ie[v.wrapT]),(N===r.TEXTURE_3D||N===r.TEXTURE_2D_ARRAY)&&r.texParameteri(N,r.TEXTURE_WRAP_R,ie[v.wrapR]),r.texParameteri(N,r.TEXTURE_MAG_FILTER,ae[v.magFilter]),r.texParameteri(N,r.TEXTURE_MIN_FILTER,ae[v.minFilter]),v.compareFunction&&(r.texParameteri(N,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(N,r.TEXTURE_COMPARE_FUNC,Te[v.compareFunction])),e.has("EXT_texture_filter_anisotropic")===!0){if(v.magFilter===Rt||v.minFilter!==Bs&&v.minFilter!==Xi||v.type===Wt&&e.has("OES_texture_float_linear")===!1)return;if(v.anisotropy>1||i.get(v).__currentAnisotropy){const z=e.get("EXT_texture_filter_anisotropic");r.texParameterf(N,z.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(v.anisotropy,n.getMaxAnisotropy())),i.get(v).__currentAnisotropy=v.anisotropy}}}function gt(N,v){let z=!1;N.__webglInit===void 0&&(N.__webglInit=!0,v.addEventListener("dispose",w));const Z=v.source;let te=d.get(Z);te===void 0&&(te={},d.set(Z,te));const K=G(v);if(K!==N.__cacheKey){te[K]===void 0&&(te[K]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,z=!0),te[K].usedTimes++;const Pe=te[N.__cacheKey];Pe!==void 0&&(te[N.__cacheKey].usedTimes--,Pe.usedTimes===0&&T(v)),N.__cacheKey=K,N.__webglTexture=te[K].texture}return z}function _t(N,v,z){return Math.floor(Math.floor(N/z)/v)}function j(N,v,z,Z){const K=N.updateRanges;if(K.length===0)t.texSubImage2D(r.TEXTURE_2D,0,0,0,v.width,v.height,z,Z,v.data);else{K.sort((re,_e)=>re.start-_e.start);let Pe=0;for(let re=1;re<K.length;re++){const _e=K[Pe],Ge=K[re],Ne=_e.start+_e.count,pe=_t(Ge.start,v.width,4),Ke=_t(_e.start,v.width,4);Ge.start<=Ne+1&&pe===Ke&&_t(Ge.start+Ge.count-1,v.width,4)===pe?_e.count=Math.max(_e.count,Ge.start+Ge.count-_e.start):(++Pe,K[Pe]=Ge)}K.length=Pe+1;const le=r.getParameter(r.UNPACK_ROW_LENGTH),we=r.getParameter(r.UNPACK_SKIP_PIXELS),Ce=r.getParameter(r.UNPACK_SKIP_ROWS);r.pixelStorei(r.UNPACK_ROW_LENGTH,v.width);for(let re=0,_e=K.length;re<_e;re++){const Ge=K[re],Ne=Math.floor(Ge.start/4),pe=Math.ceil(Ge.count/4),Ke=Ne%v.width,L=Math.floor(Ne/v.width),oe=pe,ue=1;r.pixelStorei(r.UNPACK_SKIP_PIXELS,Ke),r.pixelStorei(r.UNPACK_SKIP_ROWS,L),t.texSubImage2D(r.TEXTURE_2D,0,Ke,L,oe,ue,z,Z,v.data)}N.clearUpdateRanges(),r.pixelStorei(r.UNPACK_ROW_LENGTH,le),r.pixelStorei(r.UNPACK_SKIP_PIXELS,we),r.pixelStorei(r.UNPACK_SKIP_ROWS,Ce)}}function fe(N,v,z){let Z=r.TEXTURE_2D;(v.isDataArrayTexture||v.isCompressedArrayTexture)&&(Z=r.TEXTURE_2D_ARRAY),v.isData3DTexture&&(Z=r.TEXTURE_3D);const te=gt(N,v),K=v.source;t.bindTexture(Z,N.__webglTexture,r.TEXTURE0+z);const Pe=i.get(K);if(K.version!==Pe.__version||te===!0){t.activeTexture(r.TEXTURE0+z);const le=Be.getPrimaries(Be.workingColorSpace),we=v.colorSpace===Wi?null:Be.getPrimaries(v.colorSpace),Ce=v.colorSpace===Wi||le===we?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,v.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,v.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,v.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Ce);let re=_(v.image,!1,n.maxTextureSize);re=li(v,re);const _e=s.convert(v.format,v.colorSpace),Ge=s.convert(v.type);let Ne=y(v.internalFormat,_e,Ge,v.colorSpace,v.isVideoTexture);$e(Z,v);let pe;const Ke=v.mipmaps,L=v.isVideoTexture!==!0,oe=Pe.__version===void 0||te===!0,ue=K.dataReady,Se=S(v,re);if(v.isDepthTexture)Ne=x(v.format===_n,v.type),oe&&(L?t.texStorage2D(r.TEXTURE_2D,1,Ne,re.width,re.height):t.texImage2D(r.TEXTURE_2D,0,Ne,re.width,re.height,0,_e,Ge,null));else if(v.isDataTexture)if(Ke.length>0){L&&oe&&t.texStorage2D(r.TEXTURE_2D,Se,Ne,Ke[0].width,Ke[0].height);for(let ne=0,J=Ke.length;ne<J;ne++)pe=Ke[ne],L?ue&&t.texSubImage2D(r.TEXTURE_2D,ne,0,0,pe.width,pe.height,_e,Ge,pe.data):t.texImage2D(r.TEXTURE_2D,ne,Ne,pe.width,pe.height,0,_e,Ge,pe.data);v.generateMipmaps=!1}else L?(oe&&t.texStorage2D(r.TEXTURE_2D,Se,Ne,re.width,re.height),ue&&j(v,re,_e,Ge)):t.texImage2D(r.TEXTURE_2D,0,Ne,re.width,re.height,0,_e,Ge,re.data);else if(v.isCompressedTexture)if(v.isCompressedArrayTexture){L&&oe&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Se,Ne,Ke[0].width,Ke[0].height,re.depth);for(let ne=0,J=Ke.length;ne<J;ne++)if(pe=Ke[ne],v.format!==Gt)if(_e!==null)if(L){if(ue)if(v.layerUpdates.size>0){const Ae=V0(pe.width,pe.height,v.format,v.type);for(const qe of v.layerUpdates){const At=pe.data.subarray(qe*Ae/pe.data.BYTES_PER_ELEMENT,(qe+1)*Ae/pe.data.BYTES_PER_ELEMENT);t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ne,0,0,qe,pe.width,pe.height,1,_e,At)}v.clearLayerUpdates()}else t.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,ne,0,0,0,pe.width,pe.height,re.depth,_e,pe.data)}else t.compressedTexImage3D(r.TEXTURE_2D_ARRAY,ne,Ne,pe.width,pe.height,re.depth,0,pe.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else L?ue&&t.texSubImage3D(r.TEXTURE_2D_ARRAY,ne,0,0,0,pe.width,pe.height,re.depth,_e,Ge,pe.data):t.texImage3D(r.TEXTURE_2D_ARRAY,ne,Ne,pe.width,pe.height,re.depth,0,_e,Ge,pe.data)}else{L&&oe&&t.texStorage2D(r.TEXTURE_2D,Se,Ne,Ke[0].width,Ke[0].height);for(let ne=0,J=Ke.length;ne<J;ne++)pe=Ke[ne],v.format!==Gt?_e!==null?L?ue&&t.compressedTexSubImage2D(r.TEXTURE_2D,ne,0,0,pe.width,pe.height,_e,pe.data):t.compressedTexImage2D(r.TEXTURE_2D,ne,Ne,pe.width,pe.height,0,pe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):L?ue&&t.texSubImage2D(r.TEXTURE_2D,ne,0,0,pe.width,pe.height,_e,Ge,pe.data):t.texImage2D(r.TEXTURE_2D,ne,Ne,pe.width,pe.height,0,_e,Ge,pe.data)}else if(v.isDataArrayTexture)if(L){if(oe&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Se,Ne,re.width,re.height,re.depth),ue)if(v.layerUpdates.size>0){const ne=V0(re.width,re.height,v.format,v.type);for(const J of v.layerUpdates){const Ae=re.data.subarray(J*ne/re.data.BYTES_PER_ELEMENT,(J+1)*ne/re.data.BYTES_PER_ELEMENT);t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,J,re.width,re.height,1,_e,Ge,Ae)}v.clearLayerUpdates()}else t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,re.width,re.height,re.depth,_e,Ge,re.data)}else t.texImage3D(r.TEXTURE_2D_ARRAY,0,Ne,re.width,re.height,re.depth,0,_e,Ge,re.data);else if(v.isData3DTexture)L?(oe&&t.texStorage3D(r.TEXTURE_3D,Se,Ne,re.width,re.height,re.depth),ue&&t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,re.width,re.height,re.depth,_e,Ge,re.data)):t.texImage3D(r.TEXTURE_3D,0,Ne,re.width,re.height,re.depth,0,_e,Ge,re.data);else if(v.isFramebufferTexture){if(oe)if(L)t.texStorage2D(r.TEXTURE_2D,Se,Ne,re.width,re.height);else{let ne=re.width,J=re.height;for(let Ae=0;Ae<Se;Ae++)t.texImage2D(r.TEXTURE_2D,Ae,Ne,ne,J,0,_e,Ge,null),ne>>=1,J>>=1}}else if(Ke.length>0){if(L&&oe){const ne=Ht(Ke[0]);t.texStorage2D(r.TEXTURE_2D,Se,Ne,ne.width,ne.height)}for(let ne=0,J=Ke.length;ne<J;ne++)pe=Ke[ne],L?ue&&t.texSubImage2D(r.TEXTURE_2D,ne,0,0,_e,Ge,pe):t.texImage2D(r.TEXTURE_2D,ne,Ne,_e,Ge,pe);v.generateMipmaps=!1}else if(L){if(oe){const ne=Ht(re);t.texStorage2D(r.TEXTURE_2D,Se,Ne,ne.width,ne.height)}ue&&t.texSubImage2D(r.TEXTURE_2D,0,0,0,_e,Ge,re)}else t.texImage2D(r.TEXTURE_2D,0,Ne,_e,Ge,re);g(v)&&m(Z),Pe.__version=K.version,v.onUpdate&&v.onUpdate(v)}N.__version=v.version}function ce(N,v,z){if(v.image.length!==6)return;const Z=gt(N,v),te=v.source;t.bindTexture(r.TEXTURE_CUBE_MAP,N.__webglTexture,r.TEXTURE0+z);const K=i.get(te);if(te.version!==K.__version||Z===!0){t.activeTexture(r.TEXTURE0+z);const Pe=Be.getPrimaries(Be.workingColorSpace),le=v.colorSpace===Wi?null:Be.getPrimaries(v.colorSpace),we=v.colorSpace===Wi||Pe===le?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,v.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,v.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,v.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,we);const Ce=v.isCompressedTexture||v.image[0].isCompressedTexture,re=v.image[0]&&v.image[0].isDataTexture,_e=[];for(let J=0;J<6;J++)!Ce&&!re?_e[J]=_(v.image[J],!0,n.maxCubemapSize):_e[J]=re?v.image[J].image:v.image[J],_e[J]=li(v,_e[J]);const Ge=_e[0],Ne=s.convert(v.format,v.colorSpace),pe=s.convert(v.type),Ke=y(v.internalFormat,Ne,pe,v.colorSpace),L=v.isVideoTexture!==!0,oe=K.__version===void 0||Z===!0,ue=te.dataReady;let Se=S(v,Ge);$e(r.TEXTURE_CUBE_MAP,v);let ne;if(Ce){L&&oe&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Se,Ke,Ge.width,Ge.height);for(let J=0;J<6;J++){ne=_e[J].mipmaps;for(let Ae=0;Ae<ne.length;Ae++){const qe=ne[Ae];v.format!==Gt?Ne!==null?L?ue&&t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae,0,0,qe.width,qe.height,Ne,qe.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae,Ke,qe.width,qe.height,0,qe.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):L?ue&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae,0,0,qe.width,qe.height,Ne,pe,qe.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae,Ke,qe.width,qe.height,0,Ne,pe,qe.data)}}}else{if(ne=v.mipmaps,L&&oe){ne.length>0&&Se++;const J=Ht(_e[0]);t.texStorage2D(r.TEXTURE_CUBE_MAP,Se,Ke,J.width,J.height)}for(let J=0;J<6;J++)if(re){L?ue&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,0,0,_e[J].width,_e[J].height,Ne,pe,_e[J].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,Ke,_e[J].width,_e[J].height,0,Ne,pe,_e[J].data);for(let Ae=0;Ae<ne.length;Ae++){const At=ne[Ae].image[J].image;L?ue&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae+1,0,0,At.width,At.height,Ne,pe,At.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae+1,Ke,At.width,At.height,0,Ne,pe,At.data)}}else{L?ue&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,0,0,Ne,pe,_e[J]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,0,Ke,Ne,pe,_e[J]);for(let Ae=0;Ae<ne.length;Ae++){const qe=ne[Ae];L?ue&&t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae+1,0,0,Ne,pe,qe.image[J]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+J,Ae+1,Ke,Ne,pe,qe.image[J])}}}g(v)&&m(r.TEXTURE_CUBE_MAP),K.__version=te.version,v.onUpdate&&v.onUpdate(v)}N.__version=v.version}function Oe(N,v,z,Z,te,K){const Pe=s.convert(z.format,z.colorSpace),le=s.convert(z.type),we=y(z.internalFormat,Pe,le,z.colorSpace),Ce=i.get(v),re=i.get(z);if(re.__renderTarget=v,!Ce.__hasExternalTextures){const _e=Math.max(1,v.width>>K),Ge=Math.max(1,v.height>>K);te===r.TEXTURE_3D||te===r.TEXTURE_2D_ARRAY?t.texImage3D(te,K,we,_e,Ge,v.depth,0,Pe,le,null):t.texImage2D(te,K,we,_e,Ge,0,Pe,le,null)}t.bindFramebuffer(r.FRAMEBUFFER,N),ve(v)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,Z,te,re.__webglTexture,0,Pt(v)):(te===r.TEXTURE_2D||te>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&te<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,Z,te,re.__webglTexture,K),t.bindFramebuffer(r.FRAMEBUFFER,null)}function ke(N,v,z){if(r.bindRenderbuffer(r.RENDERBUFFER,N),v.depthBuffer){const Z=v.depthTexture,te=Z&&Z.isDepthTexture?Z.type:null,K=x(v.stencilBuffer,te),Pe=v.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,le=Pt(v);ve(v)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,le,K,v.width,v.height):z?r.renderbufferStorageMultisample(r.RENDERBUFFER,le,K,v.width,v.height):r.renderbufferStorage(r.RENDERBUFFER,K,v.width,v.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Pe,r.RENDERBUFFER,N)}else{const Z=v.textures;for(let te=0;te<Z.length;te++){const K=Z[te],Pe=s.convert(K.format,K.colorSpace),le=s.convert(K.type),we=y(K.internalFormat,Pe,le,K.colorSpace),Ce=Pt(v);z&&ve(v)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Ce,we,v.width,v.height):ve(v)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Ce,we,v.width,v.height):r.renderbufferStorage(r.RENDERBUFFER,we,v.width,v.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function Xe(N,v){if(v&&v.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,N),!(v.depthTexture&&v.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");const Z=i.get(v.depthTexture);Z.__renderTarget=v,(!Z.__webglTexture||v.depthTexture.image.width!==v.width||v.depthTexture.image.height!==v.height)&&(v.depthTexture.image.width=v.width,v.depthTexture.image.height=v.height,v.depthTexture.needsUpdate=!0),Y(v.depthTexture,0);const te=Z.__webglTexture,K=Pt(v);if(v.depthTexture.format===gn)ve(v)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,te,0,K):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,te,0);else if(v.depthTexture.format===_n)ve(v)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,te,0,K):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,te,0);else throw new Error("Unknown depthTexture format")}function Vt(N){const v=i.get(N),z=N.isWebGLCubeRenderTarget===!0;if(v.__boundDepthTexture!==N.depthTexture){const Z=N.depthTexture;if(v.__depthDisposeCallback&&v.__depthDisposeCallback(),Z){const te=()=>{delete v.__boundDepthTexture,delete v.__depthDisposeCallback,Z.removeEventListener("dispose",te)};Z.addEventListener("dispose",te),v.__depthDisposeCallback=te}v.__boundDepthTexture=Z}if(N.depthTexture&&!v.__autoAllocateDepthBuffer){if(z)throw new Error("target.depthTexture not supported in Cube render targets");const Z=N.texture.mipmaps;Z&&Z.length>0?Xe(v.__webglFramebuffer[0],N):Xe(v.__webglFramebuffer,N)}else if(z){v.__webglDepthbuffer=[];for(let Z=0;Z<6;Z++)if(t.bindFramebuffer(r.FRAMEBUFFER,v.__webglFramebuffer[Z]),v.__webglDepthbuffer[Z]===void 0)v.__webglDepthbuffer[Z]=r.createRenderbuffer(),ke(v.__webglDepthbuffer[Z],N,!1);else{const te=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,K=v.__webglDepthbuffer[Z];r.bindRenderbuffer(r.RENDERBUFFER,K),r.framebufferRenderbuffer(r.FRAMEBUFFER,te,r.RENDERBUFFER,K)}}else{const Z=N.texture.mipmaps;if(Z&&Z.length>0?t.bindFramebuffer(r.FRAMEBUFFER,v.__webglFramebuffer[0]):t.bindFramebuffer(r.FRAMEBUFFER,v.__webglFramebuffer),v.__webglDepthbuffer===void 0)v.__webglDepthbuffer=r.createRenderbuffer(),ke(v.__webglDepthbuffer,N,!1);else{const te=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,K=v.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,K),r.framebufferRenderbuffer(r.FRAMEBUFFER,te,r.RENDERBUFFER,K)}}t.bindFramebuffer(r.FRAMEBUFFER,null)}function lt(N,v,z){const Z=i.get(N);v!==void 0&&Oe(Z.__webglFramebuffer,N,N.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),z!==void 0&&Vt(N)}function D(N){const v=N.texture,z=i.get(N),Z=i.get(v);N.addEventListener("dispose",M);const te=N.textures,K=N.isWebGLCubeRenderTarget===!0,Pe=te.length>1;if(Pe||(Z.__webglTexture===void 0&&(Z.__webglTexture=r.createTexture()),Z.__version=v.version,o.memory.textures++),K){z.__webglFramebuffer=[];for(let le=0;le<6;le++)if(v.mipmaps&&v.mipmaps.length>0){z.__webglFramebuffer[le]=[];for(let we=0;we<v.mipmaps.length;we++)z.__webglFramebuffer[le][we]=r.createFramebuffer()}else z.__webglFramebuffer[le]=r.createFramebuffer()}else{if(v.mipmaps&&v.mipmaps.length>0){z.__webglFramebuffer=[];for(let le=0;le<v.mipmaps.length;le++)z.__webglFramebuffer[le]=r.createFramebuffer()}else z.__webglFramebuffer=r.createFramebuffer();if(Pe)for(let le=0,we=te.length;le<we;le++){const Ce=i.get(te[le]);Ce.__webglTexture===void 0&&(Ce.__webglTexture=r.createTexture(),o.memory.textures++)}if(N.samples>0&&ve(N)===!1){z.__webglMultisampledFramebuffer=r.createFramebuffer(),z.__webglColorRenderbuffer=[],t.bindFramebuffer(r.FRAMEBUFFER,z.__webglMultisampledFramebuffer);for(let le=0;le<te.length;le++){const we=te[le];z.__webglColorRenderbuffer[le]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,z.__webglColorRenderbuffer[le]);const Ce=s.convert(we.format,we.colorSpace),re=s.convert(we.type),_e=y(we.internalFormat,Ce,re,we.colorSpace,N.isXRRenderTarget===!0),Ge=Pt(N);r.renderbufferStorageMultisample(r.RENDERBUFFER,Ge,_e,N.width,N.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+le,r.RENDERBUFFER,z.__webglColorRenderbuffer[le])}r.bindRenderbuffer(r.RENDERBUFFER,null),N.depthBuffer&&(z.__webglDepthRenderbuffer=r.createRenderbuffer(),ke(z.__webglDepthRenderbuffer,N,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}}if(K){t.bindTexture(r.TEXTURE_CUBE_MAP,Z.__webglTexture),$e(r.TEXTURE_CUBE_MAP,v);for(let le=0;le<6;le++)if(v.mipmaps&&v.mipmaps.length>0)for(let we=0;we<v.mipmaps.length;we++)Oe(z.__webglFramebuffer[le][we],N,v,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+le,we);else Oe(z.__webglFramebuffer[le],N,v,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+le,0);g(v)&&m(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(Pe){for(let le=0,we=te.length;le<we;le++){const Ce=te[le],re=i.get(Ce);let _e=r.TEXTURE_2D;(N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(_e=N.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(_e,re.__webglTexture),$e(_e,Ce),Oe(z.__webglFramebuffer,N,Ce,r.COLOR_ATTACHMENT0+le,_e,0),g(Ce)&&m(_e)}t.unbindTexture()}else{let le=r.TEXTURE_2D;if((N.isWebGL3DRenderTarget||N.isWebGLArrayRenderTarget)&&(le=N.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),t.bindTexture(le,Z.__webglTexture),$e(le,v),v.mipmaps&&v.mipmaps.length>0)for(let we=0;we<v.mipmaps.length;we++)Oe(z.__webglFramebuffer[we],N,v,r.COLOR_ATTACHMENT0,le,we);else Oe(z.__webglFramebuffer,N,v,r.COLOR_ATTACHMENT0,le,0);g(v)&&m(le),t.unbindTexture()}N.depthBuffer&&Vt(N)}function Et(N){const v=N.textures;for(let z=0,Z=v.length;z<Z;z++){const te=v[z];if(g(te)){const K=b(N),Pe=i.get(te).__webglTexture;t.bindTexture(K,Pe),m(K),t.unbindTexture()}}}const Ie=[],dt=[];function De(N){if(N.samples>0){if(ve(N)===!1){const v=N.textures,z=N.width,Z=N.height;let te=r.COLOR_BUFFER_BIT;const K=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Pe=i.get(N),le=v.length>1;if(le)for(let Ce=0;Ce<v.length;Ce++)t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ce,r.RENDERBUFFER,null),t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ce,r.TEXTURE_2D,null,0);t.bindFramebuffer(r.READ_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer);const we=N.texture.mipmaps;we&&we.length>0?t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer[0]):t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglFramebuffer);for(let Ce=0;Ce<v.length;Ce++){if(N.resolveDepthBuffer&&(N.depthBuffer&&(te|=r.DEPTH_BUFFER_BIT),N.stencilBuffer&&N.resolveStencilBuffer&&(te|=r.STENCIL_BUFFER_BIT)),le){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Pe.__webglColorRenderbuffer[Ce]);const re=i.get(v[Ce]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,re,0)}r.blitFramebuffer(0,0,z,Z,0,0,z,Z,te,r.NEAREST),l===!0&&(Ie.length=0,dt.length=0,Ie.push(r.COLOR_ATTACHMENT0+Ce),N.depthBuffer&&N.resolveDepthBuffer===!1&&(Ie.push(K),dt.push(K),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,dt)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,Ie))}if(t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),le)for(let Ce=0;Ce<v.length;Ce++){t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ce,r.RENDERBUFFER,Pe.__webglColorRenderbuffer[Ce]);const re=i.get(v[Ce]).__webglTexture;t.bindFramebuffer(r.FRAMEBUFFER,Pe.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+Ce,r.TEXTURE_2D,re,0)}t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Pe.__webglMultisampledFramebuffer)}else if(N.depthBuffer&&N.resolveDepthBuffer===!1&&l){const v=N.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[v])}}}function Pt(N){return Math.min(n.maxSamples,N.samples)}function ve(N){const v=i.get(N);return N.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&v.__useRenderToTexture!==!1}function et(N){const v=o.render.frame;u.get(N)!==v&&(u.set(N,v),N.update())}function li(N,v){const z=N.colorSpace,Z=N.format,te=N.type;return N.isCompressedTexture===!0||N.isVideoTexture===!0||z!==ho&&z!==Wi&&(Be.getTransfer(z)===xe?(Z!==Gt||te!==zt)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",z)),v}function Ht(N){return typeof HTMLImageElement<"u"&&N instanceof HTMLImageElement?(c.width=N.naturalWidth||N.width,c.height=N.naturalHeight||N.height):typeof VideoFrame<"u"&&N instanceof VideoFrame?(c.width=N.displayWidth,c.height=N.displayHeight):(c.width=N.width,c.height=N.height),c}this.allocateTextureUnit=U,this.resetTextureUnits=k,this.setTexture2D=Y,this.setTexture2DArray=W,this.setTexture3D=Q,this.setTextureCube=H,this.rebindTextures=lt,this.setupRenderTarget=D,this.updateRenderTargetMipmap=Et,this.updateMultisampleRenderTarget=De,this.setupDepthRenderbuffer=Vt,this.setupFrameBufferTexture=Oe,this.useMultisampledRTT=ve}function KC(r,e){function t(i,n=Wi){let s;const o=Be.getTransfer(n);if(i===zt)return r.UNSIGNED_BYTE;if(i===Kh)return r.UNSIGNED_SHORT_4_4_4_4;if(i===Zh)return r.UNSIGNED_SHORT_5_5_5_1;if(i===Qh)return r.UNSIGNED_INT_5_9_9_9_REV;if(i===io)return r.BYTE;if(i===no)return r.SHORT;if(i===Wn)return r.UNSIGNED_SHORT;if(i===hi)return r.INT;if(i===Mt)return r.UNSIGNED_INT;if(i===Wt)return r.FLOAT;if(i===pn)return r.HALF_FLOAT;if(i===mm)return r.ALPHA;if(i===kc)return r.RGB;if(i===Gt)return r.RGBA;if(i===gn)return r.DEPTH_COMPONENT;if(i===_n)return r.DEPTH_STENCIL;if(i===zc)return r.RED;if(i===el)return r.RED_INTEGER;if(i===Gc)return r.RG;if(i===tl)return r.RG_INTEGER;if(i===il)return r.RGBA_INTEGER;if(i===so||i===fr||i===pr||i===mr)if(o===xe)if(s=e.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===so)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===fr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===pr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===mr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=e.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===so)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===fr)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===pr)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===mr)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===_c||i===xc||i===yc||i===bc)if(s=e.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===_c)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===xc)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===yc)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===bc)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===Tc||i===Ra||i===Ca)if(s=e.get("WEBGL_compressed_texture_etc"),s!==null){if(i===Tc||i===Ra)return o===xe?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===Ca)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===Na||i===Pa||i===Da||i===La||i===Ia||i===Fa||i===Ua||i===Ba||i===Oa||i===ka||i===za||i===Ga||i===Va||i===Ha)if(s=e.get("WEBGL_compressed_texture_astc"),s!==null){if(i===Na)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Pa)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Da)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===La)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Ia)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Fa)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ua)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Ba)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Oa)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===ka)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===za)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Ga)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Va)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===Ha)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===ro||i===Sp||i===vp)if(s=e.get("EXT_texture_compression_bptc"),s!==null){if(i===ro)return o===xe?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Sp)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===vp)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===gm||i===Sc||i===vc||i===Mc)if(s=e.get("EXT_texture_compression_rgtc"),s!==null){if(i===ro)return s.COMPRESSED_RED_RGTC1_EXT;if(i===Sc)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===vc)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Mc)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===mn?r.UNSIGNED_INT_24_8:r[i]!==void 0?r[i]:null}return{convert:t}}class Hb extends ki{constructor(e=null){super(),this.sourceTexture=e,this.isExternalTexture=!0}}const ZC=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,QC=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class JC{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(e,t){if(this.texture===null){const i=new Hb(e.texture);(e.depthNear!==t.depthNear||e.depthFar!==t.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=i}}getMesh(e){if(this.texture!==null&&this.mesh===null){const t=e.cameras[0].viewport,i=new Tr({vertexShader:ZC,fragmentShader:QC,uniforms:{depthColor:{value:this.texture},depthWidth:{value:t.z},depthHeight:{value:t.w}}});this.mesh=new fi(new Wc(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class e2 extends Sr{constructor(e,t){super();const i=this;let n=null,s=1,o=null,a="local-floor",l=1,c=null,u=null,h=null,d=null,f=null,p=null;const _=new JC,g={},m=t.getContextAttributes();let b=null,y=null;const x=[],S=[],w=new Je;let M=null;const R=new Ei;R.viewport=new je;const T=new Ei;T.viewport=new je;const E=[R,T],C=new Bb;let k=null,U=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let fe=x[j];return fe===void 0&&(fe=new yh,x[j]=fe),fe.getTargetRaySpace()},this.getControllerGrip=function(j){let fe=x[j];return fe===void 0&&(fe=new yh,x[j]=fe),fe.getGripSpace()},this.getHand=function(j){let fe=x[j];return fe===void 0&&(fe=new yh,x[j]=fe),fe.getHandSpace()};function G(j){const fe=S.indexOf(j.inputSource);if(fe===-1)return;const ce=x[fe];ce!==void 0&&(ce.update(j.inputSource,j.frame,c||o),ce.dispatchEvent({type:j.type,data:j.inputSource}))}function Y(){n.removeEventListener("select",G),n.removeEventListener("selectstart",G),n.removeEventListener("selectend",G),n.removeEventListener("squeeze",G),n.removeEventListener("squeezestart",G),n.removeEventListener("squeezeend",G),n.removeEventListener("end",Y),n.removeEventListener("inputsourceschange",W);for(let j=0;j<x.length;j++){const fe=S[j];fe!==null&&(S[j]=null,x[j].disconnect(fe))}k=null,U=null,_.reset();for(const j in g)delete g[j];e.setRenderTarget(b),f=null,d=null,h=null,n=null,y=null,_t.stop(),i.isPresenting=!1,e.setPixelRatio(M),e.setSize(w.width,w.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){s=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){a=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||o},this.setReferenceSpace=function(j){c=j},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return h},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(j){if(n=j,n!==null){if(b=e.getRenderTarget(),n.addEventListener("select",G),n.addEventListener("selectstart",G),n.addEventListener("selectend",G),n.addEventListener("squeeze",G),n.addEventListener("squeezestart",G),n.addEventListener("squeezeend",G),n.addEventListener("end",Y),n.addEventListener("inputsourceschange",W),m.xrCompatible!==!0&&await t.makeXRCompatible(),M=e.getPixelRatio(),e.getSize(w),typeof XRWebGLBinding<"u"&&(h=new XRWebGLBinding(n,t)),h!==null&&"createProjectionLayer"in XRWebGLBinding.prototype){let ce=null,Oe=null,ke=null;m.depth&&(ke=m.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,ce=m.stencil?_n:gn,Oe=m.stencil?mn:Mt);const Xe={colorFormat:t.RGBA8,depthFormat:ke,scaleFactor:s};d=h.createProjectionLayer(Xe),n.updateRenderState({layers:[d]}),e.setPixelRatio(1),e.setSize(d.textureWidth,d.textureHeight,!1),y=new po(d.textureWidth,d.textureHeight,{format:Gt,type:zt,depthTexture:new Xn(d.textureWidth,d.textureHeight,Oe,void 0,void 0,void 0,void 0,void 0,void 0,ce),stencilBuffer:m.stencil,colorSpace:e.outputColorSpace,samples:m.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1,resolveStencilBuffer:d.ignoreDepthValues===!1})}else{const ce={antialias:m.antialias,alpha:!0,depth:m.depth,stencil:m.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,t,ce),n.updateRenderState({baseLayer:f}),e.setPixelRatio(1),e.setSize(f.framebufferWidth,f.framebufferHeight,!1),y=new po(f.framebufferWidth,f.framebufferHeight,{format:Gt,type:zt,colorSpace:e.outputColorSpace,stencilBuffer:m.stencil,resolveDepthBuffer:f.ignoreDepthValues===!1,resolveStencilBuffer:f.ignoreDepthValues===!1})}y.isXRRenderTarget=!0,this.setFoveation(l),c=null,o=await n.requestReferenceSpace(a),_t.setContext(n),_t.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function W(j){for(let fe=0;fe<j.removed.length;fe++){const ce=j.removed[fe],Oe=S.indexOf(ce);Oe>=0&&(S[Oe]=null,x[Oe].disconnect(ce))}for(let fe=0;fe<j.added.length;fe++){const ce=j.added[fe];let Oe=S.indexOf(ce);if(Oe===-1){for(let Xe=0;Xe<x.length;Xe++)if(Xe>=S.length){S.push(ce),Oe=Xe;break}else if(S[Xe]===null){S[Xe]=ce,Oe=Xe;break}if(Oe===-1)break}const ke=x[Oe];ke&&ke.connect(ce)}}const Q=new B,H=new B;function ie(j,fe,ce){Q.setFromMatrixPosition(fe.matrixWorld),H.setFromMatrixPosition(ce.matrixWorld);const Oe=Q.distanceTo(H),ke=fe.projectionMatrix.elements,Xe=ce.projectionMatrix.elements,Vt=ke[14]/(ke[10]-1),lt=ke[14]/(ke[10]+1),D=(ke[9]+1)/ke[5],Et=(ke[9]-1)/ke[5],Ie=(ke[8]-1)/ke[0],dt=(Xe[8]+1)/Xe[0],De=Vt*Ie,Pt=Vt*dt,ve=Oe/(-Ie+dt),et=ve*-Ie;if(fe.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(et),j.translateZ(ve),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert(),ke[10]===-1)j.projectionMatrix.copy(fe.projectionMatrix),j.projectionMatrixInverse.copy(fe.projectionMatrixInverse);else{const li=Vt+ve,Ht=lt+ve,N=De-et,v=Pt+(Oe-et),z=D*lt/Ht*li,Z=Et*lt/Ht*li;j.projectionMatrix.makePerspective(N,v,z,Z,li,Ht),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}}function ae(j,fe){fe===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(fe.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(n===null)return;let fe=j.near,ce=j.far;_.texture!==null&&(_.depthNear>0&&(fe=_.depthNear),_.depthFar>0&&(ce=_.depthFar)),C.near=T.near=R.near=fe,C.far=T.far=R.far=ce,(k!==C.near||U!==C.far)&&(n.updateRenderState({depthNear:C.near,depthFar:C.far}),k=C.near,U=C.far),C.layers.mask=j.layers.mask|6,R.layers.mask=C.layers.mask&3,T.layers.mask=C.layers.mask&5;const Oe=j.parent,ke=C.cameras;ae(C,Oe);for(let Xe=0;Xe<ke.length;Xe++)ae(ke[Xe],Oe);ke.length===2?ie(C,R,T):C.projectionMatrix.copy(R.projectionMatrix),Te(j,C,Oe)};function Te(j,fe,ce){ce===null?j.matrix.copy(fe.matrixWorld):(j.matrix.copy(ce.matrixWorld),j.matrix.invert(),j.matrix.multiply(fe.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(fe.projectionMatrix),j.projectionMatrixInverse.copy(fe.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=$a*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return C},this.getFoveation=function(){if(!(d===null&&f===null))return l},this.setFoveation=function(j){l=j,d!==null&&(d.fixedFoveation=j),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=j)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(C)},this.getCameraTexture=function(j){return g[j]};let $e=null;function gt(j,fe){if(u=fe.getViewerPose(c||o),p=fe,u!==null){const ce=u.views;f!==null&&(e.setRenderTargetFramebuffer(y,f.framebuffer),e.setRenderTarget(y));let Oe=!1;ce.length!==C.cameras.length&&(C.cameras.length=0,Oe=!0);for(let lt=0;lt<ce.length;lt++){const D=ce[lt];let Et=null;if(f!==null)Et=f.getViewport(D);else{const dt=h.getViewSubImage(d,D);Et=dt.viewport,lt===0&&(e.setRenderTargetTextures(y,dt.colorTexture,dt.depthStencilTexture),e.setRenderTarget(y))}let Ie=E[lt];Ie===void 0&&(Ie=new Ei,Ie.layers.enable(lt),Ie.viewport=new je,E[lt]=Ie),Ie.matrix.fromArray(D.transform.matrix),Ie.matrix.decompose(Ie.position,Ie.quaternion,Ie.scale),Ie.projectionMatrix.fromArray(D.projectionMatrix),Ie.projectionMatrixInverse.copy(Ie.projectionMatrix).invert(),Ie.viewport.set(Et.x,Et.y,Et.width,Et.height),lt===0&&(C.matrix.copy(Ie.matrix),C.matrix.decompose(C.position,C.quaternion,C.scale)),Oe===!0&&C.cameras.push(Ie)}const ke=n.enabledFeatures;if(ke&&ke.includes("depth-sensing")&&n.depthUsage=="gpu-optimized"&&h){const lt=h.getDepthInformation(ce[0]);lt&&lt.isValid&&lt.texture&&_.init(lt,n.renderState)}if(ke&&ke.includes("camera-access")&&(e.state.unbindTexture(),h))for(let lt=0;lt<ce.length;lt++){const D=ce[lt].camera;if(D){let Et=g[D];Et||(Et=new Hb,g[D]=Et);const Ie=h.getCameraImage(D);Et.sourceTexture=Ie}}}for(let ce=0;ce<x.length;ce++){const Oe=S[ce],ke=x[ce];Oe!==null&&ke!==void 0&&ke.update(Oe,fe,c||o)}$e&&$e(j,fe),fe.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:fe}),p=null}const _t=new Ob;_t.setAnimationLoop(gt),this.setAnimationLoop=function(j){$e=j},this.dispose=function(){}}}const Dr=new Hs,t2=new It;function i2(r,e){function t(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function i(g,m){m.color.getRGB(g.fogColor.value,Db(r)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,b,y,x){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(g,m):m.isMeshToonMaterial?(s(g,m),h(g,m)):m.isMeshPhongMaterial?(s(g,m),u(g,m)):m.isMeshStandardMaterial?(s(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,x)):m.isMeshMatcapMaterial?(s(g,m),p(g,m)):m.isMeshDepthMaterial?s(g,m):m.isMeshDistanceMaterial?(s(g,m),_(g,m)):m.isMeshNormalMaterial?s(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?l(g,m,b,y):m.isSpriteMaterial?c(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,t(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===Ct&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,t(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===Ct&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,t(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,t(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,t(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const b=e.get(m),y=b.envMap,x=b.envMapRotation;y&&(g.envMap.value=y,Dr.copy(x),Dr.x*=-1,Dr.y*=-1,Dr.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(Dr.y*=-1,Dr.z*=-1),g.envMapRotation.value.setFromMatrix4(t2.makeRotationFromEuler(Dr)),g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,t(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,t(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function l(g,m,b,y){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*b,g.scale.value=y*.5,m.map&&(g.map.value=m.map,t(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function c(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,t(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,t(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function u(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function h(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,t(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,t(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,b){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,t(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,t(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,t(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,t(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,t(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===Ct&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,t(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,t(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=b.texture,g.transmissionSamplerSize.value.set(b.width,b.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,t(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,t(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,t(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,t(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,t(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){const b=e.get(m).light;g.referencePosition.value.setFromMatrixPosition(b.matrixWorld),g.nearDistance.value=b.shadow.camera.near,g.farDistance.value=b.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function n2(r,e,t,i){let n={},s={},o=[];const a=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function l(b,y){const x=y.program;i.uniformBlockBinding(b,x)}function c(b,y){let x=n[b.id];x===void 0&&(p(b),x=u(b),n[b.id]=x,b.addEventListener("dispose",g));const S=y.program;i.updateUBOMapping(b,S);const w=e.render.frame;s[b.id]!==w&&(d(b),s[b.id]=w)}function u(b){const y=h();b.__bindingPointIndex=y;const x=r.createBuffer(),S=b.__size,w=b.usage;return r.bindBuffer(r.UNIFORM_BUFFER,x),r.bufferData(r.UNIFORM_BUFFER,S,w),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,y,x),x}function h(){for(let b=0;b<a;b++)if(o.indexOf(b)===-1)return o.push(b),b;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(b){const y=n[b.id],x=b.uniforms,S=b.__cache;r.bindBuffer(r.UNIFORM_BUFFER,y);for(let w=0,M=x.length;w<M;w++){const R=Array.isArray(x[w])?x[w]:[x[w]];for(let T=0,E=R.length;T<E;T++){const C=R[T];if(f(C,w,T,S)===!0){const k=C.__offset,U=Array.isArray(C.value)?C.value:[C.value];let G=0;for(let Y=0;Y<U.length;Y++){const W=U[Y],Q=_(W);typeof W=="number"||typeof W=="boolean"?(C.__data[0]=W,r.bufferSubData(r.UNIFORM_BUFFER,k+G,C.__data)):W.isMatrix3?(C.__data[0]=W.elements[0],C.__data[1]=W.elements[1],C.__data[2]=W.elements[2],C.__data[3]=0,C.__data[4]=W.elements[3],C.__data[5]=W.elements[4],C.__data[6]=W.elements[5],C.__data[7]=0,C.__data[8]=W.elements[6],C.__data[9]=W.elements[7],C.__data[10]=W.elements[8],C.__data[11]=0):(W.toArray(C.__data,G),G+=Q.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,k,C.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(b,y,x,S){const w=b.value,M=y+"_"+x;if(S[M]===void 0)return typeof w=="number"||typeof w=="boolean"?S[M]=w:S[M]=w.clone(),!0;{const R=S[M];if(typeof w=="number"||typeof w=="boolean"){if(R!==w)return S[M]=w,!0}else if(R.equals(w)===!1)return R.copy(w),!0}return!1}function p(b){const y=b.uniforms;let x=0;const S=16;for(let M=0,R=y.length;M<R;M++){const T=Array.isArray(y[M])?y[M]:[y[M]];for(let E=0,C=T.length;E<C;E++){const k=T[E],U=Array.isArray(k.value)?k.value:[k.value];for(let G=0,Y=U.length;G<Y;G++){const W=U[G],Q=_(W),H=x%S,ie=H%Q.boundary,ae=H+ie;x+=ie,ae!==0&&S-ae<Q.storage&&(x+=S-ae),k.__data=new Float32Array(Q.storage/Float32Array.BYTES_PER_ELEMENT),k.__offset=x,x+=Q.storage}}}const w=x%S;return w>0&&(x+=S-w),b.__size=x,b.__cache={},this}function _(b){const y={boundary:0,storage:0};return typeof b=="number"||typeof b=="boolean"?(y.boundary=4,y.storage=4):b.isVector2?(y.boundary=8,y.storage=8):b.isVector3||b.isColor?(y.boundary=16,y.storage=12):b.isVector4?(y.boundary=16,y.storage=16):b.isMatrix3?(y.boundary=48,y.storage=48):b.isMatrix4?(y.boundary=64,y.storage=64):b.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",b),y}function g(b){const y=b.target;y.removeEventListener("dispose",g);const x=o.indexOf(y.__bindingPointIndex);o.splice(x,1),r.deleteBuffer(n[y.id]),delete n[y.id],delete s[y.id]}function m(){for(const b in n)r.deleteBuffer(n[b]);o=[],n={},s={}}return{bind:l,update:c,dispose:m}}class s2{constructor(e={}){const{canvas:t=Eb(),context:i=null,depth:n=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:c=!1,powerPreference:u="default",failIfMajorPerformanceCaveat:h=!1,reversedDepthBuffer:d=!1}=e;this.isWebGLRenderer=!0;let f;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");f=i.getContextAttributes().alpha}else f=o;const p=new Uint32Array(4),_=new Int32Array(4);let g=null,m=null;const b=[],y=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.toneMapping=Ki,this.toneMappingExposure=1,this.transmissionResolutionScale=1;const x=this;let S=!1;this._outputColorSpace=cn;let w=0,M=0,R=null,T=-1,E=null;const C=new je,k=new je;let U=null;const G=new ct(0);let Y=0,W=t.width,Q=t.height,H=1,ie=null,ae=null;const Te=new je(0,0,W,Q),$e=new je(0,0,W,Q);let gt=!1;const _t=new id;let j=!1,fe=!1;const ce=new It,Oe=new B,ke=new je,Xe={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Vt=!1;function lt(){return R===null?H:1}let D=i;function Et(A,F){return t.getContext(A,F)}try{const A={alpha:!0,depth:n,stencil:s,antialias:a,premultipliedAlpha:l,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${tm}`),t.addEventListener("webglcontextlost",ue,!1),t.addEventListener("webglcontextrestored",Se,!1),t.addEventListener("webglcontextcreationerror",ne,!1),D===null){const F="webgl2";if(D=Et(F,A),D===null)throw Et(F)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(A){throw console.error("THREE.WebGLRenderer: "+A.message),A}let Ie,dt,De,Pt,ve,et,li,Ht,N,v,z,Z,te,K,Pe,le,we,Ce,re,_e,Ge,Ne,pe,Ke;function L(){Ie=new pR(D),Ie.init(),Ne=new KC(D,Ie),dt=new aR(D,Ie,e,Ne),De=new YC(D,Ie),dt.reversedDepthBuffer&&d&&De.buffers.depth.setReversed(!0),Pt=new _R(D),ve=new FC,et=new jC(D,Ie,De,ve,dt,Ne,Pt),li=new cR(x),Ht=new fR(x),N=new v1(D),pe=new rR(D,N),v=new mR(D,N,Pt,pe),z=new yR(D,v,N,Pt),re=new xR(D,dt,et),le=new lR(ve),Z=new IC(x,li,Ht,Ie,dt,pe,le),te=new i2(x,ve),K=new BC,Pe=new HC(Ie),Ce=new sR(x,li,Ht,De,z,f,l),we=new XC(x,z,dt),Ke=new n2(D,Pt,dt,De),_e=new oR(D,Ie,Pt),Ge=new gR(D,Ie,Pt),Pt.programs=Z.programs,x.capabilities=dt,x.extensions=Ie,x.properties=ve,x.renderLists=K,x.shadowMap=we,x.state=De,x.info=Pt}L();const oe=new e2(x,D);this.xr=oe,this.getContext=function(){return D},this.getContextAttributes=function(){return D.getContextAttributes()},this.forceContextLoss=function(){const A=Ie.get("WEBGL_lose_context");A&&A.loseContext()},this.forceContextRestore=function(){const A=Ie.get("WEBGL_lose_context");A&&A.restoreContext()},this.getPixelRatio=function(){return H},this.setPixelRatio=function(A){A!==void 0&&(H=A,this.setSize(W,Q,!1))},this.getSize=function(A){return A.set(W,Q)},this.setSize=function(A,F,$=!0){if(oe.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}W=A,Q=F,t.width=Math.floor(A*H),t.height=Math.floor(F*H),$===!0&&(t.style.width=A+"px",t.style.height=F+"px"),this.setViewport(0,0,A,F)},this.getDrawingBufferSize=function(A){return A.set(W*H,Q*H).floor()},this.setDrawingBufferSize=function(A,F,$){W=A,Q=F,H=$,t.width=Math.floor(A*$),t.height=Math.floor(F*$),this.setViewport(0,0,A,F)},this.getCurrentViewport=function(A){return A.copy(C)},this.getViewport=function(A){return A.copy(Te)},this.setViewport=function(A,F,$,X){A.isVector4?Te.set(A.x,A.y,A.z,A.w):Te.set(A,F,$,X),De.viewport(C.copy(Te).multiplyScalar(H).round())},this.getScissor=function(A){return A.copy($e)},this.setScissor=function(A,F,$,X){A.isVector4?$e.set(A.x,A.y,A.z,A.w):$e.set(A,F,$,X),De.scissor(k.copy($e).multiplyScalar(H).round())},this.getScissorTest=function(){return gt},this.setScissorTest=function(A){De.setScissorTest(gt=A)},this.setOpaqueSort=function(A){ie=A},this.setTransparentSort=function(A){ae=A},this.getClearColor=function(A){return A.copy(Ce.getClearColor())},this.setClearColor=function(){Ce.setClearColor(...arguments)},this.getClearAlpha=function(){return Ce.getClearAlpha()},this.setClearAlpha=function(){Ce.setClearAlpha(...arguments)},this.clear=function(A=!0,F=!0,$=!0){let X=0;if(A){let O=!1;if(R!==null){const se=R.texture.format;O=se===il||se===tl||se===el}if(O){const se=R.texture.type,me=se===zt||se===Mt||se===Wn||se===mn||se===Kh||se===Zh,Me=Ce.getClearColor(),be=Ce.getClearAlpha(),ze=Me.r,Ve=Me.g,Le=Me.b;me?(p[0]=ze,p[1]=Ve,p[2]=Le,p[3]=be,D.clearBufferuiv(D.COLOR,0,p)):(_[0]=ze,_[1]=Ve,_[2]=Le,_[3]=be,D.clearBufferiv(D.COLOR,0,_))}else X|=D.COLOR_BUFFER_BIT}F&&(X|=D.DEPTH_BUFFER_BIT),$&&(X|=D.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),D.clear(X)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",ue,!1),t.removeEventListener("webglcontextrestored",Se,!1),t.removeEventListener("webglcontextcreationerror",ne,!1),Ce.dispose(),K.dispose(),Pe.dispose(),ve.dispose(),li.dispose(),Ht.dispose(),z.dispose(),pe.dispose(),Ke.dispose(),Z.dispose(),oe.dispose(),oe.removeEventListener("sessionstart",Qn),oe.removeEventListener("sessionend",bg),Er.stop()};function ue(A){A.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),S=!0}function Se(){console.log("THREE.WebGLRenderer: Context Restored."),S=!1;const A=Pt.autoReset,F=we.enabled,$=we.autoUpdate,X=we.needsUpdate,O=we.type;L(),Pt.autoReset=A,we.enabled=F,we.autoUpdate=$,we.needsUpdate=X,we.type=O}function ne(A){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",A.statusMessage)}function J(A){const F=A.target;F.removeEventListener("dispose",J),Ae(F)}function Ae(A){qe(A),ve.remove(A)}function qe(A){const F=ve.get(A).programs;F!==void 0&&(F.forEach(function($){Z.releaseProgram($)}),A.isShaderMaterial&&Z.releaseShaderCache(A))}this.renderBufferDirect=function(A,F,$,X,O,se){F===null&&(F=Xe);const me=O.isMesh&&O.matrixWorld.determinant()<0,Me=zS(A,F,$,X,O);De.setMaterial(X,me);let be=$.index,ze=1;if(X.wireframe===!0){if(be=v.getWireframeAttribute($),be===void 0)return;ze=2}const Ve=$.drawRange,Le=$.attributes.position;let ot=Ve.start*ze,bt=(Ve.start+Ve.count)*ze;se!==null&&(ot=Math.max(ot,se.start*ze),bt=Math.min(bt,(se.start+se.count)*ze)),be!==null?(ot=Math.max(ot,0),bt=Math.min(bt,be.count)):Le!=null&&(ot=Math.max(ot,0),bt=Math.min(bt,Le.count));const kt=bt-ot;if(kt<0||kt===1/0)return;pe.setup(O,X,Me,$,be);let Nt,vt=_e;if(be!==null&&(Nt=N.get(be),vt=Ge,vt.setIndex(Nt)),O.isMesh)X.wireframe===!0?(De.setLineWidth(X.wireframeLinewidth*lt()),vt.setMode(D.LINES)):vt.setMode(D.TRIANGLES);else if(O.isLine){let Fe=X.linewidth;Fe===void 0&&(Fe=1),De.setLineWidth(Fe*lt()),O.isLineSegments?vt.setMode(D.LINES):O.isLineLoop?vt.setMode(D.LINE_LOOP):vt.setMode(D.LINE_STRIP)}else O.isPoints?vt.setMode(D.POINTS):O.isSprite&&vt.setMode(D.TRIANGLES);if(O.isBatchedMesh)if(O._multiDrawInstances!==null)Zi("THREE.WebGLRenderer: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),vt.renderMultiDrawInstances(O._multiDrawStarts,O._multiDrawCounts,O._multiDrawCount,O._multiDrawInstances);else if(Ie.get("WEBGL_multi_draw"))vt.renderMultiDraw(O._multiDrawStarts,O._multiDrawCounts,O._multiDrawCount);else{const Fe=O._multiDrawStarts,Ut=O._multiDrawCounts,ut=O._multiDrawCount,Ji=be?N.get(be).bytesPerElement:1,bo=ve.get(X).currentProgram.getUniforms();for(let en=0;en<ut;en++)bo.setValue(D,"_gl_DrawID",en),vt.render(Fe[en]/Ji,Ut[en])}else if(O.isInstancedMesh)vt.renderInstances(ot,kt,O.count);else if($.isInstancedBufferGeometry){const Fe=$._maxInstanceCount!==void 0?$._maxInstanceCount:1/0,Ut=Math.min($.instanceCount,Fe);vt.renderInstances(ot,kt,Ut)}else vt.render(ot,kt)};function At(A,F,$){A.transparent===!0&&A.side===Ai&&A.forceSinglePass===!1?(A.side=Ct,A.needsUpdate=!0,eu(A,F,$),A.side=ji,A.needsUpdate=!0,eu(A,F,$),A.side=Ai):eu(A,F,$)}this.compile=function(A,F,$=null){$===null&&($=A),m=Pe.get($),m.init(F),y.push(m),$.traverseVisible(function(O){O.isLight&&O.layers.test(F.layers)&&(m.pushLight(O),O.castShadow&&m.pushShadow(O))}),A!==$&&A.traverseVisible(function(O){O.isLight&&O.layers.test(F.layers)&&(m.pushLight(O),O.castShadow&&m.pushShadow(O))}),m.setupLights();const X=new Set;return A.traverse(function(O){if(!(O.isMesh||O.isPoints||O.isLine||O.isSprite))return;const se=O.material;if(se)if(Array.isArray(se))for(let me=0;me<se.length;me++){const Me=se[me];At(Me,$,O),X.add(Me)}else At(se,$,O),X.add(se)}),m=y.pop(),X},this.compileAsync=function(A,F,$=null){const X=this.compile(A,F,$);return new Promise(O=>{function se(){if(X.forEach(function(me){ve.get(me).currentProgram.isReady()&&X.delete(me)}),X.size===0){O(A);return}setTimeout(se,10)}Ie.get("KHR_parallel_shader_compile")!==null?se():setTimeout(se,10)})};let pt=null;function _s(A){pt&&pt(A)}function Qn(){Er.stop()}function bg(){Er.start()}const Er=new Ob;Er.setAnimationLoop(_s),typeof self<"u"&&Er.setContext(self),this.setAnimationLoop=function(A){pt=A,oe.setAnimationLoop(A),A===null?Er.stop():Er.start()},oe.addEventListener("sessionstart",Qn),oe.addEventListener("sessionend",bg),this.render=function(A,F){if(F!==void 0&&F.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(S===!0)return;if(A.matrixWorldAutoUpdate===!0&&A.updateMatrixWorld(),F.parent===null&&F.matrixWorldAutoUpdate===!0&&F.updateMatrixWorld(),oe.enabled===!0&&oe.isPresenting===!0&&(oe.cameraAutoUpdate===!0&&oe.updateCamera(F),F=oe.getCamera()),A.isScene===!0&&A.onBeforeRender(x,A,F,R),m=Pe.get(A,y.length),m.init(F),y.push(m),ce.multiplyMatrices(F.projectionMatrix,F.matrixWorldInverse),_t.setFromProjectionMatrix(ce,Ri,F.reversedDepth),fe=this.localClippingEnabled,j=le.init(this.clippingPlanes,fe),g=K.get(A,b.length),g.init(),b.push(g),oe.enabled===!0&&oe.isPresenting===!0){const se=x.xr.getDepthSensingMesh();se!==null&&md(se,F,-1/0,x.sortObjects)}md(A,F,0,x.sortObjects),g.finish(),x.sortObjects===!0&&g.sort(ie,ae),Vt=oe.enabled===!1||oe.isPresenting===!1||oe.hasDepthSensing()===!1,Vt&&Ce.addToRenderList(g,A),this.info.render.frame++,j===!0&&le.beginShadows();const $=m.state.shadowsArray;we.render($,A,F),j===!0&&le.endShadows(),this.info.autoReset===!0&&this.info.reset();const X=g.opaque,O=g.transmissive;if(m.setupLights(),F.isArrayCamera){const se=F.cameras;if(O.length>0)for(let me=0,Me=se.length;me<Me;me++){const be=se[me];Sg(X,O,A,be)}Vt&&Ce.render(A);for(let me=0,Me=se.length;me<Me;me++){const be=se[me];Tg(g,A,be,be.viewport)}}else O.length>0&&Sg(X,O,A,F),Vt&&Ce.render(A),Tg(g,A,F);R!==null&&M===0&&(et.updateMultisampleRenderTarget(R),et.updateRenderTargetMipmap(R)),A.isScene===!0&&A.onAfterRender(x,A,F),pe.resetDefaultState(),T=-1,E=null,y.pop(),y.length>0?(m=y[y.length-1],j===!0&&le.setGlobalState(x.clippingPlanes,m.state.camera)):m=null,b.pop(),b.length>0?g=b[b.length-1]:g=null};function md(A,F,$,X){if(A.visible===!1)return;if(A.layers.test(F.layers)){if(A.isGroup)$=A.renderOrder;else if(A.isLOD)A.autoUpdate===!0&&A.update(F);else if(A.isLight)m.pushLight(A),A.castShadow&&m.pushShadow(A);else if(A.isSprite){if(!A.frustumCulled||_t.intersectsSprite(A)){X&&ke.setFromMatrixPosition(A.matrixWorld).applyMatrix4(ce);const me=z.update(A),Me=A.material;Me.visible&&g.push(A,me,Me,$,ke.z,null)}}else if((A.isMesh||A.isLine||A.isPoints)&&(!A.frustumCulled||_t.intersectsObject(A))){const me=z.update(A),Me=A.material;if(X&&(A.boundingSphere!==void 0?(A.boundingSphere===null&&A.computeBoundingSphere(),ke.copy(A.boundingSphere.center)):(me.boundingSphere===null&&me.computeBoundingSphere(),ke.copy(me.boundingSphere.center)),ke.applyMatrix4(A.matrixWorld).applyMatrix4(ce)),Array.isArray(Me)){const be=me.groups;for(let ze=0,Ve=be.length;ze<Ve;ze++){const Le=be[ze],ot=Me[Le.materialIndex];ot&&ot.visible&&g.push(A,me,ot,$,ke.z,Le)}}else Me.visible&&g.push(A,me,Me,$,ke.z,null)}}const se=A.children;for(let me=0,Me=se.length;me<Me;me++)md(se[me],F,$,X)}function Tg(A,F,$,X){const O=A.opaque,se=A.transmissive,me=A.transparent;m.setupLightsView($),j===!0&&le.setGlobalState(x.clippingPlanes,$),X&&De.viewport(C.copy(X)),O.length>0&&Jc(O,F,$),se.length>0&&Jc(se,F,$),me.length>0&&Jc(me,F,$),De.buffers.depth.setTest(!0),De.buffers.depth.setMask(!0),De.buffers.color.setMask(!0),De.setPolygonOffset(!1)}function Sg(A,F,$,X){if(($.isScene===!0?$.overrideMaterial:null)!==null)return;m.state.transmissionRenderTarget[X.id]===void 0&&(m.state.transmissionRenderTarget[X.id]=new po(1,1,{generateMipmaps:!0,type:Ie.has("EXT_color_buffer_half_float")||Ie.has("EXT_color_buffer_float")?pn:zt,minFilter:Xi,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:Be.workingColorSpace}));const se=m.state.transmissionRenderTarget[X.id],me=X.viewport||C;se.setSize(me.z*x.transmissionResolutionScale,me.w*x.transmissionResolutionScale);const Me=x.getRenderTarget(),be=x.getActiveCubeFace(),ze=x.getActiveMipmapLevel();x.setRenderTarget(se),x.getClearColor(G),Y=x.getClearAlpha(),Y<1&&x.setClearColor(16777215,.5),x.clear(),Vt&&Ce.render($);const Ve=x.toneMapping;x.toneMapping=Ki;const Le=X.viewport;if(X.viewport!==void 0&&(X.viewport=void 0),m.setupLightsView(X),j===!0&&le.setGlobalState(x.clippingPlanes,X),Jc(A,$,X),et.updateMultisampleRenderTarget(se),et.updateRenderTargetMipmap(se),Ie.has("WEBGL_multisampled_render_to_texture")===!1){let ot=!1;for(let bt=0,kt=F.length;bt<kt;bt++){const Nt=F[bt],vt=Nt.object,Fe=Nt.geometry,Ut=Nt.material,ut=Nt.group;if(Ut.side===Ai&&vt.layers.test(X.layers)){const Ji=Ut.side;Ut.side=Ct,Ut.needsUpdate=!0,vg(vt,$,X,Fe,Ut,ut),Ut.side=Ji,Ut.needsUpdate=!0,ot=!0}}ot===!0&&(et.updateMultisampleRenderTarget(se),et.updateRenderTargetMipmap(se))}x.setRenderTarget(Me,be,ze),x.setClearColor(G,Y),Le!==void 0&&(X.viewport=Le),x.toneMapping=Ve}function Jc(A,F,$){const X=F.isScene===!0?F.overrideMaterial:null;for(let O=0,se=A.length;O<se;O++){const me=A[O],Me=me.object,be=me.geometry,ze=me.group;let Ve=me.material;Ve.allowOverride===!0&&X!==null&&(Ve=X),Me.layers.test($.layers)&&vg(Me,F,$,be,Ve,ze)}}function vg(A,F,$,X,O,se){A.onBeforeRender(x,F,$,X,O,se),A.modelViewMatrix.multiplyMatrices($.matrixWorldInverse,A.matrixWorld),A.normalMatrix.getNormalMatrix(A.modelViewMatrix),O.onBeforeRender(x,F,$,X,A,se),O.transparent===!0&&O.side===Ai&&O.forceSinglePass===!1?(O.side=Ct,O.needsUpdate=!0,x.renderBufferDirect($,F,X,O,A,se),O.side=ji,O.needsUpdate=!0,x.renderBufferDirect($,F,X,O,A,se),O.side=Ai):x.renderBufferDirect($,F,X,O,A,se),A.onAfterRender(x,F,$,X,O,se)}function eu(A,F,$){F.isScene!==!0&&(F=Xe);const X=ve.get(A),O=m.state.lights,se=m.state.shadowsArray,me=O.state.version,Me=Z.getParameters(A,O.state,se,F,$),be=Z.getProgramCacheKey(Me);let ze=X.programs;X.environment=A.isMeshStandardMaterial?F.environment:null,X.fog=F.fog,X.envMap=(A.isMeshStandardMaterial?Ht:li).get(A.envMap||X.environment),X.envMapRotation=X.environment!==null&&A.envMap===null?F.environmentRotation:A.envMapRotation,ze===void 0&&(A.addEventListener("dispose",J),ze=new Map,X.programs=ze);let Ve=ze.get(be);if(Ve!==void 0){if(X.currentProgram===Ve&&X.lightsStateVersion===me)return Eg(A,Me),Ve}else Me.uniforms=Z.getUniforms(A),A.onBeforeCompile(Me,x),Ve=Z.acquireProgram(Me,be),ze.set(be,Ve),X.uniforms=Me.uniforms;const Le=X.uniforms;return(!A.isShaderMaterial&&!A.isRawShaderMaterial||A.clipping===!0)&&(Le.clippingPlanes=le.uniform),Eg(A,Me),X.needsLights=VS(A),X.lightsStateVersion=me,X.needsLights&&(Le.ambientLightColor.value=O.state.ambient,Le.lightProbe.value=O.state.probe,Le.directionalLights.value=O.state.directional,Le.directionalLightShadows.value=O.state.directionalShadow,Le.spotLights.value=O.state.spot,Le.spotLightShadows.value=O.state.spotShadow,Le.rectAreaLights.value=O.state.rectArea,Le.ltc_1.value=O.state.rectAreaLTC1,Le.ltc_2.value=O.state.rectAreaLTC2,Le.pointLights.value=O.state.point,Le.pointLightShadows.value=O.state.pointShadow,Le.hemisphereLights.value=O.state.hemi,Le.directionalShadowMap.value=O.state.directionalShadowMap,Le.directionalShadowMatrix.value=O.state.directionalShadowMatrix,Le.spotShadowMap.value=O.state.spotShadowMap,Le.spotLightMatrix.value=O.state.spotLightMatrix,Le.spotLightMap.value=O.state.spotLightMap,Le.pointShadowMap.value=O.state.pointShadowMap,Le.pointShadowMatrix.value=O.state.pointShadowMatrix),X.currentProgram=Ve,X.uniformsList=null,Ve}function Mg(A){if(A.uniformsList===null){const F=A.currentProgram.getUniforms();A.uniformsList=bh.seqWithValue(F.seq,A.uniforms)}return A.uniformsList}function Eg(A,F){const $=ve.get(A);$.outputColorSpace=F.outputColorSpace,$.batching=F.batching,$.batchingColor=F.batchingColor,$.instancing=F.instancing,$.instancingColor=F.instancingColor,$.instancingMorph=F.instancingMorph,$.skinning=F.skinning,$.morphTargets=F.morphTargets,$.morphNormals=F.morphNormals,$.morphColors=F.morphColors,$.morphTargetsCount=F.morphTargetsCount,$.numClippingPlanes=F.numClippingPlanes,$.numIntersection=F.numClipIntersection,$.vertexAlphas=F.vertexAlphas,$.vertexTangents=F.vertexTangents,$.toneMapping=F.toneMapping}function zS(A,F,$,X,O){F.isScene!==!0&&(F=Xe),et.resetTextureUnits();const se=F.fog,me=X.isMeshStandardMaterial?F.environment:null,Me=R===null?x.outputColorSpace:R.isXRRenderTarget===!0?R.texture.colorSpace:ho,be=(X.isMeshStandardMaterial?Ht:li).get(X.envMap||me),ze=X.vertexColors===!0&&!!$.attributes.color&&$.attributes.color.itemSize===4,Ve=!!$.attributes.tangent&&(!!X.normalMap||X.anisotropy>0),Le=!!$.morphAttributes.position,ot=!!$.morphAttributes.normal,bt=!!$.morphAttributes.color;let kt=Ki;X.toneMapped&&(R===null||R.isXRRenderTarget===!0)&&(kt=x.toneMapping);const Nt=$.morphAttributes.position||$.morphAttributes.normal||$.morphAttributes.color,vt=Nt!==void 0?Nt.length:0,Fe=ve.get(X),Ut=m.state.lights;if(j===!0&&(fe===!0||A!==E)){const Ni=A===E&&X.id===T;le.setState(X,A,Ni)}let ut=!1;X.version===Fe.__version?(Fe.needsLights&&Fe.lightsStateVersion!==Ut.state.version||Fe.outputColorSpace!==Me||O.isBatchedMesh&&Fe.batching===!1||!O.isBatchedMesh&&Fe.batching===!0||O.isBatchedMesh&&Fe.batchingColor===!0&&O.colorTexture===null||O.isBatchedMesh&&Fe.batchingColor===!1&&O.colorTexture!==null||O.isInstancedMesh&&Fe.instancing===!1||!O.isInstancedMesh&&Fe.instancing===!0||O.isSkinnedMesh&&Fe.skinning===!1||!O.isSkinnedMesh&&Fe.skinning===!0||O.isInstancedMesh&&Fe.instancingColor===!0&&O.instanceColor===null||O.isInstancedMesh&&Fe.instancingColor===!1&&O.instanceColor!==null||O.isInstancedMesh&&Fe.instancingMorph===!0&&O.morphTexture===null||O.isInstancedMesh&&Fe.instancingMorph===!1&&O.morphTexture!==null||Fe.envMap!==be||X.fog===!0&&Fe.fog!==se||Fe.numClippingPlanes!==void 0&&(Fe.numClippingPlanes!==le.numPlanes||Fe.numIntersection!==le.numIntersection)||Fe.vertexAlphas!==ze||Fe.vertexTangents!==Ve||Fe.morphTargets!==Le||Fe.morphNormals!==ot||Fe.morphColors!==bt||Fe.toneMapping!==kt||Fe.morphTargetsCount!==vt)&&(ut=!0):(ut=!0,Fe.__version=X.version);let Ji=Fe.currentProgram;ut===!0&&(Ji=eu(X,F,O));let bo=!1,en=!1,ml=!1;const Bt=Ji.getUniforms(),bn=Fe.uniforms;if(De.useProgram(Ji.program)&&(bo=!0,en=!0,ml=!0),X.id!==T&&(T=X.id,en=!0),bo||E!==A){De.buffers.depth.getReversed()&&A.reversedDepth!==!0&&(A._reversedDepth=!0,A.updateProjectionMatrix()),Bt.setValue(D,"projectionMatrix",A.projectionMatrix),Bt.setValue(D,"viewMatrix",A.matrixWorldInverse);const zi=Bt.map.cameraPosition;zi!==void 0&&zi.setValue(D,Oe.setFromMatrixPosition(A.matrixWorld)),dt.logarithmicDepthBuffer&&Bt.setValue(D,"logDepthBufFC",2/(Math.log(A.far+1)/Math.LN2)),(X.isMeshPhongMaterial||X.isMeshToonMaterial||X.isMeshLambertMaterial||X.isMeshBasicMaterial||X.isMeshStandardMaterial||X.isShaderMaterial)&&Bt.setValue(D,"isOrthographic",A.isOrthographicCamera===!0),E!==A&&(E=A,en=!0,ml=!0)}if(O.isSkinnedMesh){Bt.setOptional(D,O,"bindMatrix"),Bt.setOptional(D,O,"bindMatrixInverse");const Ni=O.skeleton;Ni&&(Ni.boneTexture===null&&Ni.computeBoneTexture(),Bt.setValue(D,"boneTexture",Ni.boneTexture,et))}O.isBatchedMesh&&(Bt.setOptional(D,O,"batchingTexture"),Bt.setValue(D,"batchingTexture",O._matricesTexture,et),Bt.setOptional(D,O,"batchingIdTexture"),Bt.setValue(D,"batchingIdTexture",O._indirectTexture,et),Bt.setOptional(D,O,"batchingColorTexture"),O._colorsTexture!==null&&Bt.setValue(D,"batchingColorTexture",O._colorsTexture,et));const Tn=$.morphAttributes;if((Tn.position!==void 0||Tn.normal!==void 0||Tn.color!==void 0)&&re.update(O,$,Ji),(en||Fe.receiveShadow!==O.receiveShadow)&&(Fe.receiveShadow=O.receiveShadow,Bt.setValue(D,"receiveShadow",O.receiveShadow)),X.isMeshGouraudMaterial&&X.envMap!==null&&(bn.envMap.value=be,bn.flipEnvMap.value=be.isCubeTexture&&be.isRenderTargetTexture===!1?-1:1),X.isMeshStandardMaterial&&X.envMap===null&&F.environment!==null&&(bn.envMapIntensity.value=F.environmentIntensity),en&&(Bt.setValue(D,"toneMappingExposure",x.toneMappingExposure),Fe.needsLights&&GS(bn,ml),se&&X.fog===!0&&te.refreshFogUniforms(bn,se),te.refreshMaterialUniforms(bn,X,H,Q,m.state.transmissionRenderTarget[A.id]),bh.upload(D,Mg(Fe),bn,et)),X.isShaderMaterial&&X.uniformsNeedUpdate===!0&&(bh.upload(D,Mg(Fe),bn,et),X.uniformsNeedUpdate=!1),X.isSpriteMaterial&&Bt.setValue(D,"center",O.center),Bt.setValue(D,"modelViewMatrix",O.modelViewMatrix),Bt.setValue(D,"normalMatrix",O.normalMatrix),Bt.setValue(D,"modelMatrix",O.matrixWorld),X.isShaderMaterial||X.isRawShaderMaterial){const Ni=X.uniformsGroups;for(let zi=0,gd=Ni.length;zi<gd;zi++){const Ar=Ni[zi];Ke.update(Ar,Ji),Ke.bind(Ar,Ji)}}return Ji}function GS(A,F){A.ambientLightColor.needsUpdate=F,A.lightProbe.needsUpdate=F,A.directionalLights.needsUpdate=F,A.directionalLightShadows.needsUpdate=F,A.pointLights.needsUpdate=F,A.pointLightShadows.needsUpdate=F,A.spotLights.needsUpdate=F,A.spotLightShadows.needsUpdate=F,A.rectAreaLights.needsUpdate=F,A.hemisphereLights.needsUpdate=F}function VS(A){return A.isMeshLambertMaterial||A.isMeshToonMaterial||A.isMeshPhongMaterial||A.isMeshStandardMaterial||A.isShadowMaterial||A.isShaderMaterial&&A.lights===!0}this.getActiveCubeFace=function(){return w},this.getActiveMipmapLevel=function(){return M},this.getRenderTarget=function(){return R},this.setRenderTargetTextures=function(A,F,$){const X=ve.get(A);X.__autoAllocateDepthBuffer=A.resolveDepthBuffer===!1,X.__autoAllocateDepthBuffer===!1&&(X.__useRenderToTexture=!1),ve.get(A.texture).__webglTexture=F,ve.get(A.depthTexture).__webglTexture=X.__autoAllocateDepthBuffer?void 0:$,X.__hasExternalTextures=!0},this.setRenderTargetFramebuffer=function(A,F){const $=ve.get(A);$.__webglFramebuffer=F,$.__useDefaultFramebuffer=F===void 0};const HS=D.createFramebuffer();this.setRenderTarget=function(A,F=0,$=0){R=A,w=F,M=$;let X=!0,O=null,se=!1,me=!1;if(A){const be=ve.get(A);if(be.__useDefaultFramebuffer!==void 0)De.bindFramebuffer(D.FRAMEBUFFER,null),X=!1;else if(be.__webglFramebuffer===void 0)et.setupRenderTarget(A);else if(be.__hasExternalTextures)et.rebindTextures(A,ve.get(A.texture).__webglTexture,ve.get(A.depthTexture).__webglTexture);else if(A.depthBuffer){const Le=A.depthTexture;if(be.__boundDepthTexture!==Le){if(Le!==null&&ve.has(Le)&&(A.width!==Le.image.width||A.height!==Le.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");et.setupDepthRenderbuffer(A)}}const ze=A.texture;(ze.isData3DTexture||ze.isDataArrayTexture||ze.isCompressedArrayTexture)&&(me=!0);const Ve=ve.get(A).__webglFramebuffer;A.isWebGLCubeRenderTarget?(Array.isArray(Ve[F])?O=Ve[F][$]:O=Ve[F],se=!0):A.samples>0&&et.useMultisampledRTT(A)===!1?O=ve.get(A).__webglMultisampledFramebuffer:Array.isArray(Ve)?O=Ve[$]:O=Ve,C.copy(A.viewport),k.copy(A.scissor),U=A.scissorTest}else C.copy(Te).multiplyScalar(H).floor(),k.copy($e).multiplyScalar(H).floor(),U=gt;if($!==0&&(O=HS),De.bindFramebuffer(D.FRAMEBUFFER,O)&&X&&De.drawBuffers(A,O),De.viewport(C),De.scissor(k),De.setScissorTest(U),se){const be=ve.get(A.texture);D.framebufferTexture2D(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_CUBE_MAP_POSITIVE_X+F,be.__webglTexture,$)}else if(me){const be=F;for(let ze=0;ze<A.textures.length;ze++){const Ve=ve.get(A.textures[ze]);D.framebufferTextureLayer(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0+ze,Ve.__webglTexture,$,be)}}else if(A!==null&&$!==0){const be=ve.get(A.texture);D.framebufferTexture2D(D.FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,be.__webglTexture,$)}T=-1},this.readRenderTargetPixels=function(A,F,$,X,O,se,me,Me=0){if(!(A&&A.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let be=ve.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&me!==void 0&&(be=be[me]),be){De.bindFramebuffer(D.FRAMEBUFFER,be);try{const ze=A.textures[Me],Ve=ze.format,Le=ze.type;if(!dt.textureFormatReadable(Ve)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!dt.textureTypeReadable(Le)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}F>=0&&F<=A.width-X&&$>=0&&$<=A.height-O&&(A.textures.length>1&&D.readBuffer(D.COLOR_ATTACHMENT0+Me),D.readPixels(F,$,X,O,Ne.convert(Ve),Ne.convert(Le),se))}finally{const ze=R!==null?ve.get(R).__webglFramebuffer:null;De.bindFramebuffer(D.FRAMEBUFFER,ze)}}},this.readRenderTargetPixelsAsync=async function(A,F,$,X,O,se,me,Me=0){if(!(A&&A.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let be=ve.get(A).__webglFramebuffer;if(A.isWebGLCubeRenderTarget&&me!==void 0&&(be=be[me]),be)if(F>=0&&F<=A.width-X&&$>=0&&$<=A.height-O){De.bindFramebuffer(D.FRAMEBUFFER,be);const ze=A.textures[Me],Ve=ze.format,Le=ze.type;if(!dt.textureFormatReadable(Ve))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!dt.textureTypeReadable(Le))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");const ot=D.createBuffer();D.bindBuffer(D.PIXEL_PACK_BUFFER,ot),D.bufferData(D.PIXEL_PACK_BUFFER,se.byteLength,D.STREAM_READ),A.textures.length>1&&D.readBuffer(D.COLOR_ATTACHMENT0+Me),D.readPixels(F,$,X,O,Ne.convert(Ve),Ne.convert(Le),0);const bt=R!==null?ve.get(R).__webglFramebuffer:null;De.bindFramebuffer(D.FRAMEBUFFER,bt);const kt=D.fenceSync(D.SYNC_GPU_COMMANDS_COMPLETE,0);return D.flush(),await VE(D,kt,4),D.bindBuffer(D.PIXEL_PACK_BUFFER,ot),D.getBufferSubData(D.PIXEL_PACK_BUFFER,0,se),D.deleteBuffer(ot),D.deleteSync(kt),se}else throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: requested read bounds are out of range.")},this.copyFramebufferToTexture=function(A,F=null,$=0){const X=Math.pow(2,-$),O=Math.floor(A.image.width*X),se=Math.floor(A.image.height*X),me=F!==null?F.x:0,Me=F!==null?F.y:0;et.setTexture2D(A,0),D.copyTexSubImage2D(D.TEXTURE_2D,$,0,0,me,Me,O,se),De.unbindTexture()};const WS=D.createFramebuffer(),$S=D.createFramebuffer();this.copyTextureToTexture=function(A,F,$=null,X=null,O=0,se=null){se===null&&(O!==0?(Zi("WebGLRenderer: copyTextureToTexture function signature has changed to support src and dst mipmap levels."),se=O,O=0):se=0);let me,Me,be,ze,Ve,Le,ot,bt,kt;const Nt=A.isCompressedTexture?A.mipmaps[se]:A.image;if($!==null)me=$.max.x-$.min.x,Me=$.max.y-$.min.y,be=$.isBox3?$.max.z-$.min.z:1,ze=$.min.x,Ve=$.min.y,Le=$.isBox3?$.min.z:0;else{const Tn=Math.pow(2,-O);me=Math.floor(Nt.width*Tn),Me=Math.floor(Nt.height*Tn),A.isDataArrayTexture?be=Nt.depth:A.isData3DTexture?be=Math.floor(Nt.depth*Tn):be=1,ze=0,Ve=0,Le=0}X!==null?(ot=X.x,bt=X.y,kt=X.z):(ot=0,bt=0,kt=0);const vt=Ne.convert(F.format),Fe=Ne.convert(F.type);let Ut;F.isData3DTexture?(et.setTexture3D(F,0),Ut=D.TEXTURE_3D):F.isDataArrayTexture||F.isCompressedArrayTexture?(et.setTexture2DArray(F,0),Ut=D.TEXTURE_2D_ARRAY):(et.setTexture2D(F,0),Ut=D.TEXTURE_2D),D.pixelStorei(D.UNPACK_FLIP_Y_WEBGL,F.flipY),D.pixelStorei(D.UNPACK_PREMULTIPLY_ALPHA_WEBGL,F.premultiplyAlpha),D.pixelStorei(D.UNPACK_ALIGNMENT,F.unpackAlignment);const ut=D.getParameter(D.UNPACK_ROW_LENGTH),Ji=D.getParameter(D.UNPACK_IMAGE_HEIGHT),bo=D.getParameter(D.UNPACK_SKIP_PIXELS),en=D.getParameter(D.UNPACK_SKIP_ROWS),ml=D.getParameter(D.UNPACK_SKIP_IMAGES);D.pixelStorei(D.UNPACK_ROW_LENGTH,Nt.width),D.pixelStorei(D.UNPACK_IMAGE_HEIGHT,Nt.height),D.pixelStorei(D.UNPACK_SKIP_PIXELS,ze),D.pixelStorei(D.UNPACK_SKIP_ROWS,Ve),D.pixelStorei(D.UNPACK_SKIP_IMAGES,Le);const Bt=A.isDataArrayTexture||A.isData3DTexture,bn=F.isDataArrayTexture||F.isData3DTexture;if(A.isDepthTexture){const Tn=ve.get(A),Ni=ve.get(F),zi=ve.get(Tn.__renderTarget),gd=ve.get(Ni.__renderTarget);De.bindFramebuffer(D.READ_FRAMEBUFFER,zi.__webglFramebuffer),De.bindFramebuffer(D.DRAW_FRAMEBUFFER,gd.__webglFramebuffer);for(let Ar=0;Ar<be;Ar++)Bt&&(D.framebufferTextureLayer(D.READ_FRAMEBUFFER,D.COLOR_ATTACHMENT0,ve.get(A).__webglTexture,O,Le+Ar),D.framebufferTextureLayer(D.DRAW_FRAMEBUFFER,D.COLOR_ATTACHMENT0,ve.get(F).__webglTexture,se,kt+Ar)),D.blitFramebuffer(ze,Ve,me,Me,ot,bt,me,Me,D.DEPTH_BUFFER_BIT,D.NEAREST);De.bindFramebuffer(D.READ_FRAMEBUFFER,null),De.bindFramebuffer(D.DRAW_FRAMEBUFFER,null)}else if(O!==0||A.isRenderTargetTexture||ve.has(A)){const Tn=ve.get(A),Ni=ve.get(F);De.bindFramebuffer(D.READ_FRAMEBUFFER,WS),De.bindFramebuffer(D.DRAW_FRAMEBUFFER,$S);for(let zi=0;zi<be;zi++)Bt?D.framebufferTextureLayer(D.READ_FRAMEBUFFER,D.COLOR_ATTACHMENT0,Tn.__webglTexture,O,Le+zi):D.framebufferTexture2D(D.READ_FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,Tn.__webglTexture,O),bn?D.framebufferTextureLayer(D.DRAW_FRAMEBUFFER,D.COLOR_ATTACHMENT0,Ni.__webglTexture,se,kt+zi):D.framebufferTexture2D(D.DRAW_FRAMEBUFFER,D.COLOR_ATTACHMENT0,D.TEXTURE_2D,Ni.__webglTexture,se),O!==0?D.blitFramebuffer(ze,Ve,me,Me,ot,bt,me,Me,D.COLOR_BUFFER_BIT,D.NEAREST):bn?D.copyTexSubImage3D(Ut,se,ot,bt,kt+zi,ze,Ve,me,Me):D.copyTexSubImage2D(Ut,se,ot,bt,ze,Ve,me,Me);De.bindFramebuffer(D.READ_FRAMEBUFFER,null),De.bindFramebuffer(D.DRAW_FRAMEBUFFER,null)}else bn?A.isDataTexture||A.isData3DTexture?D.texSubImage3D(Ut,se,ot,bt,kt,me,Me,be,vt,Fe,Nt.data):F.isCompressedArrayTexture?D.compressedTexSubImage3D(Ut,se,ot,bt,kt,me,Me,be,vt,Nt.data):D.texSubImage3D(Ut,se,ot,bt,kt,me,Me,be,vt,Fe,Nt):A.isDataTexture?D.texSubImage2D(D.TEXTURE_2D,se,ot,bt,me,Me,vt,Fe,Nt.data):A.isCompressedTexture?D.compressedTexSubImage2D(D.TEXTURE_2D,se,ot,bt,Nt.width,Nt.height,vt,Nt.data):D.texSubImage2D(D.TEXTURE_2D,se,ot,bt,me,Me,vt,Fe,Nt);D.pixelStorei(D.UNPACK_ROW_LENGTH,ut),D.pixelStorei(D.UNPACK_IMAGE_HEIGHT,Ji),D.pixelStorei(D.UNPACK_SKIP_PIXELS,bo),D.pixelStorei(D.UNPACK_SKIP_ROWS,en),D.pixelStorei(D.UNPACK_SKIP_IMAGES,ml),se===0&&F.generateMipmaps&&D.generateMipmap(Ut),De.unbindTexture()},this.copyTextureToTexture3D=function(A,F,$=null,X=null,O=0){return Zi('WebGLRenderer: copyTextureToTexture3D function has been deprecated. Use "copyTextureToTexture" instead.'),this.copyTextureToTexture(A,F,$,X,O)},this.initRenderTarget=function(A){ve.get(A).__webglFramebuffer===void 0&&et.setupRenderTarget(A)},this.initTexture=function(A){A.isCubeTexture?et.setTextureCube(A,0):A.isData3DTexture?et.setTexture3D(A,0):A.isDataArrayTexture||A.isCompressedArrayTexture?et.setTexture2DArray(A,0):et.setTexture2D(A,0),De.unbindTexture()},this.resetState=function(){w=0,M=0,R=null,De.reset(),pe.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ri}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(e){this._outputColorSpace=e;const t=this.getContext();t.drawingBufferColorSpace=Be._getDrawingBufferColorSpace(e),t.unpackColorSpace=Be._getUnpackColorSpace()}}/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Wb="179",fa={ROTATE:0,DOLLY:1,PAN:2},ra={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Ph=0,r2=1,o2=2,f_=1,p_=100,m_=204,g_=205,__=3,a2=0,x_="attached",l2="detached",$b=300,Ec=1e3,$l=1001,Rp=1002,Dh=1003,c2=1004,u2=1005,Lh=1006,h2=1007,Um=1008,Xb=1009,Bm=1015,qb=1023,d2=1028,Ac=2300,wc=2301,ef=2302,y_=2400,b_=2401,T_=2402,f2=2500,p2=0,Yb=1,Cp=2,m2=0,jb="",Mi="srgb",Kn="srgb-linear",S_="linear",tf="srgb",Oo=7680,v_=519,Np=35044,eo=2e3,Pp=2001;class $c{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[e]===void 0&&(i[e]=[]),i[e].indexOf(t)===-1&&i[e].push(t)}hasEventListener(e,t){const i=this._listeners;return i===void 0?!1:i[e]!==void 0&&i[e].indexOf(t)!==-1}removeEventListener(e,t){const i=this._listeners;if(i===void 0)return;const n=i[e];if(n!==void 0){const s=n.indexOf(t);s!==-1&&n.splice(s,1)}}dispatchEvent(e){const t=this._listeners;if(t===void 0)return;const i=t[e.type];if(i!==void 0){e.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,e);e.target=null}}}const Si=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let M_=1234567;const Ql=Math.PI/180,Rc=180/Math.PI;function qn(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Si[r&255]+Si[r>>8&255]+Si[r>>16&255]+Si[r>>24&255]+"-"+Si[e&255]+Si[e>>8&255]+"-"+Si[e>>16&15|64]+Si[e>>24&255]+"-"+Si[t&63|128]+Si[t>>8&255]+"-"+Si[t>>16&255]+Si[t>>24&255]+Si[i&255]+Si[i>>8&255]+Si[i>>16&255]+Si[i>>24&255]).toLowerCase()}function tt(r,e,t){return Math.max(e,Math.min(t,r))}function Om(r,e){return(r%e+e)%e}function g2(r,e,t,i,n){return i+(r-e)*(n-i)/(t-e)}function _2(r,e,t){return r!==e?(t-r)/(e-r):0}function Jl(r,e,t){return(1-t)*r+t*e}function x2(r,e,t,i){return Jl(r,e,1-Math.exp(-t*i))}function y2(r,e=1){return e-Math.abs(Om(r,e*2)-e)}function b2(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function T2(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function S2(r,e){return r+Math.floor(Math.random()*(e-r+1))}function v2(r,e){return r+Math.random()*(e-r)}function M2(r){return r*(.5-Math.random())}function E2(r){r!==void 0&&(M_=r);let e=M_+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function A2(r){return r*Ql}function w2(r){return r*Rc}function R2(r){return(r&r-1)===0&&r!==0}function C2(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function N2(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function P2(r,e,t,i,n){const s=Math.cos,o=Math.sin,a=s(t/2),l=o(t/2),c=s((e+i)/2),u=o((e+i)/2),h=s((e-i)/2),d=o((e-i)/2),f=s((i-e)/2),p=o((i-e)/2);switch(n){case"XYX":r.set(a*u,l*h,l*d,a*c);break;case"YZY":r.set(l*d,a*u,l*h,a*c);break;case"ZXZ":r.set(l*h,l*d,a*u,a*c);break;case"XZX":r.set(a*u,l*p,l*f,a*c);break;case"YXY":r.set(l*f,a*u,l*p,a*c);break;case"ZYZ":r.set(l*p,l*f,a*u,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function Vn(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function xt(r,e){switch(e.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const Kb={DEG2RAD:Ql,RAD2DEG:Rc,generateUUID:qn,clamp:tt,euclideanModulo:Om,mapLinear:g2,inverseLerp:_2,lerp:Jl,damp:x2,pingpong:y2,smoothstep:b2,smootherstep:T2,randInt:S2,randFloat:v2,randFloatSpread:M2,seededRandom:E2,degToRad:A2,radToDeg:w2,isPowerOfTwo:R2,ceilPowerOfTwo:C2,floorPowerOfTwo:N2,setQuaternionFromProperEuler:P2,normalize:xt,denormalize:Vn};class ht{constructor(e=0,t=0){ht.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,i=this.y,n=e.elements;return this.x=n[0]*t+n[3]*i+n[6],this.y=n[1]*t+n[4]*i+n[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=tt(this.x,e.x,t.x),this.y=tt(this.y,e.y,t.y),this}clampScalar(e,t){return this.x=tt(this.x,e,t),this.y=tt(this.y,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(tt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(tt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y;return t*t+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const i=Math.cos(t),n=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*i-o*n+e.x,this.y=s*n+o*i+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class us{constructor(e=0,t=0,i=0,n=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=i,this._w=n}static slerpFlat(e,t,i,n,s,o,a){let l=i[n+0],c=i[n+1],u=i[n+2],h=i[n+3];const d=s[o+0],f=s[o+1],p=s[o+2],_=s[o+3];if(a===0){e[t+0]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h;return}if(a===1){e[t+0]=d,e[t+1]=f,e[t+2]=p,e[t+3]=_;return}if(h!==_||l!==d||c!==f||u!==p){let g=1-a;const m=l*d+c*f+u*p+h*_,b=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const S=Math.sqrt(y),w=Math.atan2(S,m*b);g=Math.sin(g*w)/S,a=Math.sin(a*w)/S}const x=a*b;if(l=l*g+d*x,c=c*g+f*x,u=u*g+p*x,h=h*g+_*x,g===1-a){const S=1/Math.sqrt(l*l+c*c+u*u+h*h);l*=S,c*=S,u*=S,h*=S}}e[t]=l,e[t+1]=c,e[t+2]=u,e[t+3]=h}static multiplyQuaternionsFlat(e,t,i,n,s,o){const a=i[n],l=i[n+1],c=i[n+2],u=i[n+3],h=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return e[t]=a*p+u*h+l*f-c*d,e[t+1]=l*p+u*d+c*h-a*f,e[t+2]=c*p+u*f+a*d-l*h,e[t+3]=u*p-a*h-l*d-c*f,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,i,n){return this._x=e,this._y=t,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t=!0){const i=e._x,n=e._y,s=e._z,o=e._order,a=Math.cos,l=Math.sin,c=a(i/2),u=a(n/2),h=a(s/2),d=l(i/2),f=l(n/2),p=l(s/2);switch(o){case"XYZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"YXZ":this._x=d*u*h+c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"ZXY":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h-d*f*p;break;case"ZYX":this._x=d*u*h-c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h+d*f*p;break;case"YZX":this._x=d*u*h+c*f*p,this._y=c*f*h+d*u*p,this._z=c*u*p-d*f*h,this._w=c*u*h-d*f*p;break;case"XZY":this._x=d*u*h-c*f*p,this._y=c*f*h-d*u*p,this._z=c*u*p+d*f*h,this._w=c*u*h+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t===!0&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const i=t/2,n=Math.sin(i);return this._x=e.x*n,this._y=e.y*n,this._z=e.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,i=t[0],n=t[4],s=t[8],o=t[1],a=t[5],l=t[9],c=t[2],u=t[6],h=t[10],d=i+a+h;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(u-l)*f,this._y=(s-c)*f,this._z=(o-n)*f}else if(i>a&&i>h){const f=2*Math.sqrt(1+i-a-h);this._w=(u-l)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+c)/f}else if(a>h){const f=2*Math.sqrt(1+a-i-h);this._w=(s-c)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(l+u)/f}else{const f=2*Math.sqrt(1+h-i-a);this._w=(o-n)/f,this._x=(s+c)/f,this._y=(l+u)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let i=e.dot(t)+1;return i<1e-8?(i=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=i):(this._x=0,this._y=-e.z,this._z=e.y,this._w=i)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=i),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(tt(this.dot(e),-1,1)))}rotateTowards(e,t){const i=this.angleTo(e);if(i===0)return this;const n=Math.min(1,t/i);return this.slerp(e,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const i=e._x,n=e._y,s=e._z,o=e._w,a=t._x,l=t._y,c=t._z,u=t._w;return this._x=i*u+o*a+n*c-s*l,this._y=n*u+o*l+s*a-i*c,this._z=s*u+o*c+i*l-n*a,this._w=o*u-i*a-n*l-s*c,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*e._w+i*e._x+n*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const l=1-a*a;if(l<=Number.EPSILON){const f=1-t;return this._w=f*o+t*this._w,this._x=f*i+t*this._x,this._y=f*n+t*this._y,this._z=f*s+t*this._z,this.normalize(),this}const c=Math.sqrt(l),u=Math.atan2(c,a),h=Math.sin((1-t)*u)/c,d=Math.sin(t*u)/c;return this._w=o*h+this._w*d,this._x=i*h+this._x*d,this._y=n*h+this._y*d,this._z=s*h+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,i){return this.copy(e).slerp(t,i)}random(){const e=2*Math.PI*Math.random(),t=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(e),n*Math.cos(e),s*Math.sin(t),s*Math.cos(t))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class V{constructor(e=0,t=0,i=0){V.prototype.isVector3=!0,this.x=e,this.y=t,this.z=i}set(e,t,i){return i===void 0&&(i=this.z),this.x=e,this.y=t,this.z=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(E_.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(E_.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[3]*i+s[6]*n,this.y=s[1]*t+s[4]*i+s[7]*n,this.z=s[2]*t+s[5]*i+s[8]*n,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=e.elements,o=1/(s[3]*t+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*t+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*t+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*t+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(e){const t=this.x,i=this.y,n=this.z,s=e.x,o=e.y,a=e.z,l=e.w,c=2*(o*n-a*i),u=2*(a*t-s*n),h=2*(s*i-o*t);return this.x=t+l*c+o*h-a*u,this.y=i+l*u+a*c-s*h,this.z=n+l*h+s*u-o*c,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,i=this.y,n=this.z,s=e.elements;return this.x=s[0]*t+s[4]*i+s[8]*n,this.y=s[1]*t+s[5]*i+s[9]*n,this.z=s[2]*t+s[6]*i+s[10]*n,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=tt(this.x,e.x,t.x),this.y=tt(this.y,e.y,t.y),this.z=tt(this.z,e.z,t.z),this}clampScalar(e,t){return this.x=tt(this.x,e,t),this.y=tt(this.y,e,t),this.z=tt(this.z,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(tt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const i=e.x,n=e.y,s=e.z,o=t.x,a=t.y,l=t.z;return this.x=n*l-s*a,this.y=s*o-i*l,this.z=i*a-n*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const i=e.dot(this)/t;return this.copy(e).multiplyScalar(i)}projectOnPlane(e){return nf.copy(this).projectOnVector(e),this.sub(nf)}reflect(e){return this.sub(nf.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const i=this.dot(e)/t;return Math.acos(tt(i,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,i=this.y-e.y,n=this.z-e.z;return t*t+i*i+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,i){const n=Math.sin(t)*e;return this.x=n*Math.sin(i),this.y=Math.cos(t)*e,this.z=n*Math.cos(i),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,i){return this.x=e*Math.sin(t),this.y=i,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),i=this.setFromMatrixColumn(e,1).length(),n=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=i,this.z=n,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=Math.random()*Math.PI*2,t=Math.random()*2-1,i=Math.sqrt(1-t*t);return this.x=i*Math.cos(e),this.y=t,this.z=i*Math.sin(e),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const nf=new V,E_=new us;class Xs{constructor(e,t,i,n,s,o,a,l,c){Xs.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c)}set(e,t,i,n,s,o,a,l,c){const u=this.elements;return u[0]=e,u[1]=n,u[2]=a,u[3]=t,u[4]=s,u[5]=l,u[6]=i,u[7]=o,u[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],this}extractBasis(e,t,i){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[3],l=i[6],c=i[1],u=i[4],h=i[7],d=i[2],f=i[5],p=i[8],_=n[0],g=n[3],m=n[6],b=n[1],y=n[4],x=n[7],S=n[2],w=n[5],M=n[8];return s[0]=o*_+a*b+l*S,s[3]=o*g+a*y+l*w,s[6]=o*m+a*x+l*M,s[1]=c*_+u*b+h*S,s[4]=c*g+u*y+h*w,s[7]=c*m+u*x+h*M,s[2]=d*_+f*b+p*S,s[5]=d*g+f*y+p*w,s[8]=d*m+f*x+p*M,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8];return t*o*u-t*a*c-i*s*u+i*a*l+n*s*c-n*o*l}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=u*o-a*c,d=a*l-u*s,f=c*s-o*l,p=t*h+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return e[0]=h*_,e[1]=(n*c-u*i)*_,e[2]=(a*i-n*o)*_,e[3]=d*_,e[4]=(u*t-n*l)*_,e[5]=(n*s-a*t)*_,e[6]=f*_,e[7]=(i*l-c*t)*_,e[8]=(o*t-i*s)*_,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,i,n,s,o,a){const l=Math.cos(s),c=Math.sin(s);return this.set(i*l,i*c,-i*(l*o+c*a)+o+e,-n*c,n*l,-n*(-c*o+l*a)+a+t,0,0,1),this}scale(e,t){return this.premultiply(sf.makeScale(e,t)),this}rotate(e){return this.premultiply(sf.makeRotation(-e)),this}translate(e,t){return this.premultiply(sf.makeTranslation(e,t)),this}makeTranslation(e,t){return e.isVector2?this.set(1,0,e.x,0,1,e.y,0,0,1):this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,i,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<9;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<9;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e}clone(){return new this.constructor().fromArray(this.elements)}}const sf=new Xs;function D2(r){for(let e=r.length-1;e>=0;--e)if(r[e]>=65535)return!0;return!1}function Dp(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const A_={};function w_(r){r in A_||(A_[r]=!0,console.warn(r))}const R_=new Xs().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),C_=new Xs().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function L2(){const r={enabled:!0,workingColorSpace:Kn,spaces:{},convert:function(n,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===tf&&(n.r=Gs(n.r),n.g=Gs(n.g),n.b=Gs(n.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[s].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===tf&&(n.r=pa(n.r),n.g=pa(n.g),n.b=pa(n.b))),n},workingToColorSpace:function(n,s){return this.convert(n,this.workingColorSpace,s)},colorSpaceToWorking:function(n,s){return this.convert(n,s,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===jb?S_:this.spaces[n].transfer},getLuminanceCoefficients:function(n,s=this.workingColorSpace){return n.fromArray(this.spaces[s].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,s,o){return n.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace},fromWorkingColorSpace:function(n,s){return w_("THREE.ColorManagement: .fromWorkingColorSpace() has been renamed to .workingToColorSpace()."),r.workingToColorSpace(n,s)},toWorkingColorSpace:function(n,s){return w_("THREE.ColorManagement: .toWorkingColorSpace() has been renamed to .colorSpaceToWorking()."),r.colorSpaceToWorking(n,s)}},e=[.64,.33,.3,.6,.15,.06],t=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[Kn]:{primaries:e,whitePoint:i,transfer:S_,toXYZ:R_,fromXYZ:C_,luminanceCoefficients:t,workingColorSpaceConfig:{unpackColorSpace:Mi},outputColorSpaceConfig:{drawingBufferColorSpace:Mi}},[Mi]:{primaries:e,whitePoint:i,transfer:tf,toXYZ:R_,fromXYZ:C_,luminanceCoefficients:t,outputColorSpaceConfig:{drawingBufferColorSpace:Mi}}}),r}const ln=L2();function Gs(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function pa(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let ko;class I2{static getDataURL(e,t="image/png"){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let i;if(e instanceof HTMLCanvasElement)i=e;else{ko===void 0&&(ko=Dp("canvas")),ko.width=e.width,ko.height=e.height;const n=ko.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),i=ko}return i.toDataURL(t)}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=Dp("canvas");t.width=e.width,t.height=e.height;const i=t.getContext("2d");i.drawImage(e,0,0,e.width,e.height);const n=i.getImageData(0,0,e.width,e.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=Gs(s[o]/255)*255;return i.putImageData(n,0,0),t}else if(e.data){const t=e.data.slice(0);for(let i=0;i<t.length;i++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[i]=Math.floor(Gs(t[i]/255)*255):t[i]=Gs(t[i]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}let F2=0;class U2{constructor(e=null){this.isSource=!0,Object.defineProperty(this,"id",{value:F2++}),this.uuid=qn(),this.data=e,this.dataReady=!0,this.version=0}getSize(e){const t=this.data;return t instanceof HTMLVideoElement?e.set(t.videoWidth,t.videoHeight,0):t instanceof VideoFrame?e.set(t.displayHeight,t.displayWidth,0):t!==null?e.set(t.width,t.height,t.depth||0):e.set(0,0,0),e}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push(rf(n[o].image)):s.push(rf(n[o]))}else s=rf(n);i.url=s}return t||(e.images[this.uuid]=i),i}}function rf(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?I2.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let B2=0;const of=new V;class Yn extends $c{constructor(e=Yn.DEFAULT_IMAGE,t=Yn.DEFAULT_MAPPING,i=$l,n=$l,s=Lh,o=Um,a=qb,l=Xb,c=Yn.DEFAULT_ANISOTROPY,u=jb){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:B2++}),this.uuid=qn(),this.name="",this.source=new U2(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=c,this.format=a,this.internalFormat=null,this.type=l,this.offset=new ht(0,0),this.repeat=new ht(1,1),this.center=new ht(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Xs,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=u,this.userData={},this.updateRanges=[],this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.isArrayTexture=!!(e&&e.depth&&e.depth>1),this.pmremVersion=0}get width(){return this.source.getSize(of).x}get height(){return this.source.getSize(of).y}get depth(){return this.source.getSize(of).z}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.renderTarget=e.renderTarget,this.isRenderTargetTexture=e.isRenderTargetTexture,this.isArrayTexture=e.isArrayTexture,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}setValues(e){for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Texture.setValues(): parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Texture.setValues(): property '${t}' does not exist.`);continue}n&&i&&n.isVector2&&i.isVector2||n&&i&&n.isVector3&&i.isVector3||n&&i&&n.isMatrix3&&i.isMatrix3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const i={metadata:{version:4.7,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),t||(e.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==$b)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case Ec:e.x=e.x-Math.floor(e.x);break;case $l:e.x=e.x<0?0:1;break;case Rp:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Ec:e.y=e.y-Math.floor(e.y);break;case $l:e.y=e.y<0?0:1;break;case Rp:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(e){e===!0&&this.pmremVersion++}}Yn.DEFAULT_IMAGE=null;Yn.DEFAULT_MAPPING=$b;Yn.DEFAULT_ANISOTROPY=1;class Fi{constructor(e=0,t=0,i=0,n=1){Fi.prototype.isVector4=!0,this.x=e,this.y=t,this.z=i,this.w=n}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,i,n){return this.x=e,this.y=t,this.z=i,this.w=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,i=this.y,n=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*i+o[8]*n+o[12]*s,this.y=o[1]*t+o[5]*i+o[9]*n+o[13]*s,this.z=o[2]*t+o[6]*i+o[10]*n+o[14]*s,this.w=o[3]*t+o[7]*i+o[11]*n+o[15]*s,this}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this.w/=e.w,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,i,n,s;const l=e.elements,c=l[0],u=l[4],h=l[8],d=l[1],f=l[5],p=l[9],_=l[2],g=l[6],m=l[10];if(Math.abs(u-d)<.01&&Math.abs(h-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(h+_)<.1&&Math.abs(p+g)<.1&&Math.abs(c+f+m-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const y=(c+1)/2,x=(f+1)/2,S=(m+1)/2,w=(u+d)/4,M=(h+_)/4,R=(p+g)/4;return y>x&&y>S?y<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(y),n=w/i,s=M/i):x>S?x<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(x),i=w/n,s=R/n):S<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(S),i=M/s,n=R/s),this.set(i,n,s,t),this}let b=Math.sqrt((g-p)*(g-p)+(h-_)*(h-_)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(g-p)/b,this.y=(h-_)/b,this.z=(d-u)/b,this.w=Math.acos((c+f+m-1)/2),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this.w=t[15],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=tt(this.x,e.x,t.x),this.y=tt(this.y,e.y,t.y),this.z=tt(this.z,e.z,t.z),this.w=tt(this.w,e.w,t.w),this}clampScalar(e,t){return this.x=tt(this.x,e,t),this.y=tt(this.y,e,t),this.z=tt(this.z,e,t),this.w=tt(this.w,e,t),this}clampLength(e,t){const i=this.length();return this.divideScalar(i||1).multiplyScalar(tt(i,e,t))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,i){return this.x=e.x+(t.x-e.x)*i,this.y=e.y+(t.y-e.y)*i,this.z=e.z+(t.z-e.z)*i,this.w=e.w+(t.w-e.w)*i,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class qs{constructor(e=new V(1/0,1/0,1/0),t=new V(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t+=3)this.expandByPoint(In.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,i=e.count;t<i;t++)this.expandByPoint(In.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,i=e.length;t<i;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const i=In.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(i),this.max.copy(e).add(i),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const i=e.geometry;if(i!==void 0){const s=i.getAttribute("position");if(t===!0&&s!==void 0&&e.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)e.isMesh===!0?e.getVertexPosition(o,In):In.fromBufferAttribute(s,o),In.applyMatrix4(e.matrixWorld),this.expandByPoint(In);else e.boundingBox!==void 0?(e.boundingBox===null&&e.computeBoundingBox(),Pu.copy(e.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Pu.copy(i.boundingBox)),Pu.applyMatrix4(e.matrixWorld),this.union(Pu)}const n=e.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],t);return this}containsPoint(e){return e.x>=this.min.x&&e.x<=this.max.x&&e.y>=this.min.y&&e.y<=this.max.y&&e.z>=this.min.z&&e.z<=this.max.z}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return e.max.x>=this.min.x&&e.min.x<=this.max.x&&e.max.y>=this.min.y&&e.min.y<=this.max.y&&e.max.z>=this.min.z&&e.min.z<=this.max.z}intersectsSphere(e){return this.clampPoint(e.center,In),In.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,i;return e.normal.x>0?(t=e.normal.x*this.min.x,i=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,i=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,i+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,i+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,i+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,i+=e.normal.z*this.min.z),t<=-e.constant&&i>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Tl),Du.subVectors(this.max,Tl),zo.subVectors(e.a,Tl),Go.subVectors(e.b,Tl),Vo.subVectors(e.c,Tl),tr.subVectors(Go,zo),ir.subVectors(Vo,Go),Lr.subVectors(zo,Vo);let t=[0,-tr.z,tr.y,0,-ir.z,ir.y,0,-Lr.z,Lr.y,tr.z,0,-tr.x,ir.z,0,-ir.x,Lr.z,0,-Lr.x,-tr.y,tr.x,0,-ir.y,ir.x,0,-Lr.y,Lr.x,0];return!af(t,zo,Go,Vo,Du)||(t=[1,0,0,0,1,0,0,0,1],!af(t,zo,Go,Vo,Du))?!1:(Lu.crossVectors(tr,ir),t=[Lu.x,Lu.y,Lu.z],af(t,zo,Go,Vo,Du))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,In).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=this.getSize(In).length()*.5),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(vs[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),vs[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),vs[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),vs[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),vs[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),vs[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),vs[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),vs[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(vs),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}toJSON(){return{min:this.min.toArray(),max:this.max.toArray()}}fromJSON(e){return this.min.fromArray(e.min),this.max.fromArray(e.max),this}}const vs=[new V,new V,new V,new V,new V,new V,new V,new V],In=new V,Pu=new qs,zo=new V,Go=new V,Vo=new V,tr=new V,ir=new V,Lr=new V,Tl=new V,Du=new V,Lu=new V,Ir=new V;function af(r,e,t,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){Ir.fromArray(r,s);const a=n.x*Math.abs(Ir.x)+n.y*Math.abs(Ir.y)+n.z*Math.abs(Ir.z),l=e.dot(Ir),c=t.dot(Ir),u=i.dot(Ir);if(Math.max(-Math.max(l,c,u),Math.min(l,c,u))>a)return!1}return!0}const O2=new qs,Sl=new V,lf=new V;class ps{constructor(e=new V,t=-1){this.isSphere=!0,this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const i=this.center;t!==void 0?i.copy(t):O2.setFromPoints(e).getCenter(i);let n=0;for(let s=0,o=e.length;s<o;s++)n=Math.max(n,i.distanceToSquared(e[s]));return this.radius=Math.sqrt(n),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const i=this.center.distanceToSquared(e);return t.copy(e),i>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;Sl.subVectors(e,this.center);const t=Sl.lengthSq();if(t>this.radius*this.radius){const i=Math.sqrt(t),n=(i-this.radius)*.5;this.center.addScaledVector(Sl,n/i),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?this.radius=Math.max(this.radius,e.radius):(lf.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(Sl.copy(e.center).add(lf)),this.expandByPoint(Sl.copy(e.center).sub(lf))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}toJSON(){return{radius:this.radius,center:this.center.toArray()}}fromJSON(e){return this.radius=e.radius,this.center.fromArray(e.center),this}}const Ms=new V,cf=new V,Iu=new V,nr=new V,uf=new V,Fu=new V,hf=new V;class Xc{constructor(e=new V,t=new V(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ms)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const i=t.dot(this.direction);return i<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ms.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ms.copy(this.origin).addScaledVector(this.direction,t),Ms.distanceToSquared(e))}distanceSqToSegment(e,t,i,n){cf.copy(e).add(t).multiplyScalar(.5),Iu.copy(t).sub(e).normalize(),nr.copy(this.origin).sub(cf);const s=e.distanceTo(t)*.5,o=-this.direction.dot(Iu),a=nr.dot(this.direction),l=-nr.dot(Iu),c=nr.lengthSq(),u=Math.abs(1-o*o);let h,d,f,p;if(u>0)if(h=o*l-a,d=o*a-l,p=s*u,h>=0)if(d>=-p)if(d<=p){const _=1/u;h*=_,d*=_,f=h*(h+o*d+2*a)+d*(o*h+d+2*l)+c}else d=s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d=-s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;else d<=-p?(h=Math.max(0,-(-o*s+a)),d=h>0?-s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c):d<=p?(h=0,d=Math.min(Math.max(-s,-l),s),f=d*(d+2*l)+c):(h=Math.max(0,-(o*s+a)),d=h>0?s:Math.min(Math.max(-s,-l),s),f=-h*h+d*(d+2*l)+c);else d=o>0?-s:s,h=Math.max(0,-(o*d+a)),f=-h*h+d*(d+2*l)+c;return i&&i.copy(this.origin).addScaledVector(this.direction,h),n&&n.copy(cf).addScaledVector(Iu,d),f}intersectSphere(e,t){Ms.subVectors(e.center,this.origin);const i=Ms.dot(this.direction),n=Ms.dot(Ms)-i*i,s=e.radius*e.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,l=i+o;return l<0?null:a<0?this.at(l,t):this.at(a,t)}intersectsSphere(e){return e.radius<0?!1:this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(e.normal)+e.constant)/t;return i>=0?i:null}intersectPlane(e,t){const i=this.distanceToPlane(e);return i===null?null:this.at(i,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let i,n,s,o,a,l;const c=1/this.direction.x,u=1/this.direction.y,h=1/this.direction.z,d=this.origin;return c>=0?(i=(e.min.x-d.x)*c,n=(e.max.x-d.x)*c):(i=(e.max.x-d.x)*c,n=(e.min.x-d.x)*c),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),h>=0?(a=(e.min.z-d.z)*h,l=(e.max.z-d.z)*h):(a=(e.max.z-d.z)*h,l=(e.min.z-d.z)*h),i>l||a>n)||((a>i||i!==i)&&(i=a),(l<n||n!==n)&&(n=l),n<0)?null:this.at(i>=0?i:n,t)}intersectsBox(e){return this.intersectBox(e,Ms)!==null}intersectTriangle(e,t,i,n,s){uf.subVectors(t,e),Fu.subVectors(i,e),hf.crossVectors(uf,Fu);let o=this.direction.dot(hf),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;nr.subVectors(this.origin,e);const l=a*this.direction.dot(Fu.crossVectors(nr,Fu));if(l<0)return null;const c=a*this.direction.dot(uf.cross(nr));if(c<0||l+c>o)return null;const u=-a*nr.dot(hf);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class at{constructor(e,t,i,n,s,o,a,l,c,u,h,d,f,p,_,g){at.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],e!==void 0&&this.set(e,t,i,n,s,o,a,l,c,u,h,d,f,p,_,g)}set(e,t,i,n,s,o,a,l,c,u,h,d,f,p,_,g){const m=this.elements;return m[0]=e,m[4]=t,m[8]=i,m[12]=n,m[1]=s,m[5]=o,m[9]=a,m[13]=l,m[2]=c,m[6]=u,m[10]=h,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new at().fromArray(this.elements)}copy(e){const t=this.elements,i=e.elements;return t[0]=i[0],t[1]=i[1],t[2]=i[2],t[3]=i[3],t[4]=i[4],t[5]=i[5],t[6]=i[6],t[7]=i[7],t[8]=i[8],t[9]=i[9],t[10]=i[10],t[11]=i[11],t[12]=i[12],t[13]=i[13],t[14]=i[14],t[15]=i[15],this}copyPosition(e){const t=this.elements,i=e.elements;return t[12]=i[12],t[13]=i[13],t[14]=i[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,i){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(e,t,i){return this.set(e.x,t.x,i.x,0,e.y,t.y,i.y,0,e.z,t.z,i.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,i=e.elements,n=1/Ho.setFromMatrixColumn(e,0).length(),s=1/Ho.setFromMatrixColumn(e,1).length(),o=1/Ho.setFromMatrixColumn(e,2).length();return t[0]=i[0]*n,t[1]=i[1]*n,t[2]=i[2]*n,t[3]=0,t[4]=i[4]*s,t[5]=i[5]*s,t[6]=i[6]*s,t[7]=0,t[8]=i[8]*o,t[9]=i[9]*o,t[10]=i[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,i=e.x,n=e.y,s=e.z,o=Math.cos(i),a=Math.sin(i),l=Math.cos(n),c=Math.sin(n),u=Math.cos(s),h=Math.sin(s);if(e.order==="XYZ"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=l*u,t[4]=-l*h,t[8]=c,t[1]=f+p*c,t[5]=d-_*c,t[9]=-a*l,t[2]=_-d*c,t[6]=p+f*c,t[10]=o*l}else if(e.order==="YXZ"){const d=l*u,f=l*h,p=c*u,_=c*h;t[0]=d+_*a,t[4]=p*a-f,t[8]=o*c,t[1]=o*h,t[5]=o*u,t[9]=-a,t[2]=f*a-p,t[6]=_+d*a,t[10]=o*l}else if(e.order==="ZXY"){const d=l*u,f=l*h,p=c*u,_=c*h;t[0]=d-_*a,t[4]=-o*h,t[8]=p+f*a,t[1]=f+p*a,t[5]=o*u,t[9]=_-d*a,t[2]=-o*c,t[6]=a,t[10]=o*l}else if(e.order==="ZYX"){const d=o*u,f=o*h,p=a*u,_=a*h;t[0]=l*u,t[4]=p*c-f,t[8]=d*c+_,t[1]=l*h,t[5]=_*c+d,t[9]=f*c-p,t[2]=-c,t[6]=a*l,t[10]=o*l}else if(e.order==="YZX"){const d=o*l,f=o*c,p=a*l,_=a*c;t[0]=l*u,t[4]=_-d*h,t[8]=p*h+f,t[1]=h,t[5]=o*u,t[9]=-a*u,t[2]=-c*u,t[6]=f*h+p,t[10]=d-_*h}else if(e.order==="XZY"){const d=o*l,f=o*c,p=a*l,_=a*c;t[0]=l*u,t[4]=-h,t[8]=c*u,t[1]=d*h+_,t[5]=o*u,t[9]=f*h-p,t[2]=p*h-f,t[6]=a*u,t[10]=_*h+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(k2,e,z2)}lookAt(e,t,i){const n=this.elements;return rn.subVectors(e,t),rn.lengthSq()===0&&(rn.z=1),rn.normalize(),sr.crossVectors(i,rn),sr.lengthSq()===0&&(Math.abs(i.z)===1?rn.x+=1e-4:rn.z+=1e-4,rn.normalize(),sr.crossVectors(i,rn)),sr.normalize(),Uu.crossVectors(rn,sr),n[0]=sr.x,n[4]=Uu.x,n[8]=rn.x,n[1]=sr.y,n[5]=Uu.y,n[9]=rn.y,n[2]=sr.z,n[6]=Uu.z,n[10]=rn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const i=e.elements,n=t.elements,s=this.elements,o=i[0],a=i[4],l=i[8],c=i[12],u=i[1],h=i[5],d=i[9],f=i[13],p=i[2],_=i[6],g=i[10],m=i[14],b=i[3],y=i[7],x=i[11],S=i[15],w=n[0],M=n[4],R=n[8],T=n[12],E=n[1],C=n[5],k=n[9],U=n[13],G=n[2],Y=n[6],W=n[10],Q=n[14],H=n[3],ie=n[7],ae=n[11],Te=n[15];return s[0]=o*w+a*E+l*G+c*H,s[4]=o*M+a*C+l*Y+c*ie,s[8]=o*R+a*k+l*W+c*ae,s[12]=o*T+a*U+l*Q+c*Te,s[1]=u*w+h*E+d*G+f*H,s[5]=u*M+h*C+d*Y+f*ie,s[9]=u*R+h*k+d*W+f*ae,s[13]=u*T+h*U+d*Q+f*Te,s[2]=p*w+_*E+g*G+m*H,s[6]=p*M+_*C+g*Y+m*ie,s[10]=p*R+_*k+g*W+m*ae,s[14]=p*T+_*U+g*Q+m*Te,s[3]=b*w+y*E+x*G+S*H,s[7]=b*M+y*C+x*Y+S*ie,s[11]=b*R+y*k+x*W+S*ae,s[15]=b*T+y*U+x*Q+S*Te,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],i=e[4],n=e[8],s=e[12],o=e[1],a=e[5],l=e[9],c=e[13],u=e[2],h=e[6],d=e[10],f=e[14],p=e[3],_=e[7],g=e[11],m=e[15];return p*(+s*l*h-n*c*h-s*a*d+i*c*d+n*a*f-i*l*f)+_*(+t*l*f-t*c*d+s*o*d-n*o*f+n*c*u-s*l*u)+g*(+t*c*h-t*a*f-s*o*h+i*o*f+s*a*u-i*c*u)+m*(-n*a*u-t*l*h+t*a*d+n*o*h-i*o*d+i*l*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,i){const n=this.elements;return e.isVector3?(n[12]=e.x,n[13]=e.y,n[14]=e.z):(n[12]=e,n[13]=t,n[14]=i),this}invert(){const e=this.elements,t=e[0],i=e[1],n=e[2],s=e[3],o=e[4],a=e[5],l=e[6],c=e[7],u=e[8],h=e[9],d=e[10],f=e[11],p=e[12],_=e[13],g=e[14],m=e[15],b=h*g*c-_*d*c+_*l*f-a*g*f-h*l*m+a*d*m,y=p*d*c-u*g*c-p*l*f+o*g*f+u*l*m-o*d*m,x=u*_*c-p*h*c+p*a*f-o*_*f-u*a*m+o*h*m,S=p*h*l-u*_*l-p*a*d+o*_*d+u*a*g-o*h*g,w=t*b+i*y+n*x+s*S;if(w===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const M=1/w;return e[0]=b*M,e[1]=(_*d*s-h*g*s-_*n*f+i*g*f+h*n*m-i*d*m)*M,e[2]=(a*g*s-_*l*s+_*n*c-i*g*c-a*n*m+i*l*m)*M,e[3]=(h*l*s-a*d*s-h*n*c+i*d*c+a*n*f-i*l*f)*M,e[4]=y*M,e[5]=(u*g*s-p*d*s+p*n*f-t*g*f-u*n*m+t*d*m)*M,e[6]=(p*l*s-o*g*s-p*n*c+t*g*c+o*n*m-t*l*m)*M,e[7]=(o*d*s-u*l*s+u*n*c-t*d*c-o*n*f+t*l*f)*M,e[8]=x*M,e[9]=(p*h*s-u*_*s-p*i*f+t*_*f+u*i*m-t*h*m)*M,e[10]=(o*_*s-p*a*s+p*i*c-t*_*c-o*i*m+t*a*m)*M,e[11]=(u*a*s-o*h*s-u*i*c+t*h*c+o*i*f-t*a*f)*M,e[12]=S*M,e[13]=(u*_*n-p*h*n+p*i*d-t*_*d-u*i*g+t*h*g)*M,e[14]=(p*a*n-o*_*n-p*i*l+t*_*l+o*i*g-t*a*g)*M,e[15]=(o*h*n-u*a*n+u*i*l-t*h*l-o*i*d+t*a*d)*M,this}scale(e){const t=this.elements,i=e.x,n=e.y,s=e.z;return t[0]*=i,t[4]*=n,t[8]*=s,t[1]*=i,t[5]*=n,t[9]*=s,t[2]*=i,t[6]*=n,t[10]*=s,t[3]*=i,t[7]*=n,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],i=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],n=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,i,n))}makeTranslation(e,t,i){return e.isVector3?this.set(1,0,0,e.x,0,1,0,e.y,0,0,1,e.z,0,0,0,1):this.set(1,0,0,e,0,1,0,t,0,0,1,i,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),i=Math.sin(e);return this.set(1,0,0,0,0,t,-i,0,0,i,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,0,i,0,0,1,0,0,-i,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),i=Math.sin(e);return this.set(t,-i,0,0,i,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const i=Math.cos(t),n=Math.sin(t),s=1-i,o=e.x,a=e.y,l=e.z,c=s*o,u=s*a;return this.set(c*o+i,c*a-n*l,c*l+n*a,0,c*a+n*l,u*a+i,u*l-n*o,0,c*l-n*a,u*l+n*o,s*l*l+i,0,0,0,0,1),this}makeScale(e,t,i){return this.set(e,0,0,0,0,t,0,0,0,0,i,0,0,0,0,1),this}makeShear(e,t,i,n,s,o){return this.set(1,i,s,0,e,1,o,0,t,n,1,0,0,0,0,1),this}compose(e,t,i){const n=this.elements,s=t._x,o=t._y,a=t._z,l=t._w,c=s+s,u=o+o,h=a+a,d=s*c,f=s*u,p=s*h,_=o*u,g=o*h,m=a*h,b=l*c,y=l*u,x=l*h,S=i.x,w=i.y,M=i.z;return n[0]=(1-(_+m))*S,n[1]=(f+x)*S,n[2]=(p-y)*S,n[3]=0,n[4]=(f-x)*w,n[5]=(1-(d+m))*w,n[6]=(g+b)*w,n[7]=0,n[8]=(p+y)*M,n[9]=(g-b)*M,n[10]=(1-(d+_))*M,n[11]=0,n[12]=e.x,n[13]=e.y,n[14]=e.z,n[15]=1,this}decompose(e,t,i){const n=this.elements;let s=Ho.set(n[0],n[1],n[2]).length();const o=Ho.set(n[4],n[5],n[6]).length(),a=Ho.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),e.x=n[12],e.y=n[13],e.z=n[14],Fn.copy(this);const c=1/s,u=1/o,h=1/a;return Fn.elements[0]*=c,Fn.elements[1]*=c,Fn.elements[2]*=c,Fn.elements[4]*=u,Fn.elements[5]*=u,Fn.elements[6]*=u,Fn.elements[8]*=h,Fn.elements[9]*=h,Fn.elements[10]*=h,t.setFromRotationMatrix(Fn),i.x=s,i.y=o,i.z=a,this}makePerspective(e,t,i,n,s,o,a=eo,l=!1){const c=this.elements,u=2*s/(t-e),h=2*s/(i-n),d=(t+e)/(t-e),f=(i+n)/(i-n);let p,_;if(l)p=s/(o-s),_=o*s/(o-s);else if(a===eo)p=-(o+s)/(o-s),_=-2*o*s/(o-s);else if(a===Pp)p=-o/(o-s),_=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=f,c[13]=0,c[2]=0,c[6]=0,c[10]=p,c[14]=_,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,i,n,s,o,a=eo,l=!1){const c=this.elements,u=2/(t-e),h=2/(i-n),d=-(t+e)/(t-e),f=-(i+n)/(i-n);let p,_;if(l)p=1/(o-s),_=o/(o-s);else if(a===eo)p=-2/(o-s),_=-(o+s)/(o-s);else if(a===Pp)p=-1/(o-s),_=-s/(o-s);else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return c[0]=u,c[4]=0,c[8]=0,c[12]=d,c[1]=0,c[5]=h,c[9]=0,c[13]=f,c[2]=0,c[6]=0,c[10]=p,c[14]=_,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,i=e.elements;for(let n=0;n<16;n++)if(t[n]!==i[n])return!1;return!0}fromArray(e,t=0){for(let i=0;i<16;i++)this.elements[i]=e[i+t];return this}toArray(e=[],t=0){const i=this.elements;return e[t]=i[0],e[t+1]=i[1],e[t+2]=i[2],e[t+3]=i[3],e[t+4]=i[4],e[t+5]=i[5],e[t+6]=i[6],e[t+7]=i[7],e[t+8]=i[8],e[t+9]=i[9],e[t+10]=i[10],e[t+11]=i[11],e[t+12]=i[12],e[t+13]=i[13],e[t+14]=i[14],e[t+15]=i[15],e}}const Ho=new V,Fn=new at,k2=new V(0,0,0),z2=new V(1,1,1),sr=new V,Uu=new V,rn=new V,N_=new at,P_=new us;class rl{constructor(e=0,t=0,i=0,n=rl.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=i,this._order=n}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,i,n=this._order){return this._x=e,this._y=t,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,i=!0){const n=e.elements,s=n[0],o=n[4],a=n[8],l=n[1],c=n[5],u=n[9],h=n[2],d=n[6],f=n[10];switch(t){case"XYZ":this._y=Math.asin(tt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-tt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(l,c)):(this._y=Math.atan2(-h,s),this._z=0);break;case"ZXY":this._x=Math.asin(tt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-h,f),this._z=Math.atan2(-o,c)):(this._y=0,this._z=Math.atan2(l,s));break;case"ZYX":this._y=Math.asin(-tt(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(l,s)):(this._x=0,this._z=Math.atan2(-o,c));break;case"YZX":this._z=Math.asin(tt(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-u,c),this._y=Math.atan2(-h,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-tt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,i===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,i){return N_.makeRotationFromQuaternion(e),this.setFromRotationMatrix(N_,t,i)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return P_.setFromEuler(this),this.setFromQuaternion(P_,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}rl.DEFAULT_ORDER="XYZ";class G2{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let V2=0;const D_=new V,Wo=new us,Es=new at,Bu=new V,vl=new V,H2=new V,W2=new us,L_=new V(1,0,0),I_=new V(0,1,0),F_=new V(0,0,1),U_={type:"added"},$2={type:"removed"},$o={type:"childadded",child:null},df={type:"childremoved",child:null};class $t extends $c{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:V2++}),this.uuid=qn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=$t.DEFAULT_UP.clone();const e=new V,t=new rl,i=new us,n=new V(1,1,1);function s(){i.setFromEuler(t,!1)}function o(){t.setFromQuaternion(i,void 0,!1)}t._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new at},normalMatrix:{value:new Xs}}),this.matrix=new at,this.matrixWorld=new at,this.matrixAutoUpdate=$t.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=$t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new G2,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.customDepthMaterial=void 0,this.customDistanceMaterial=void 0,this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Wo.setFromAxisAngle(e,t),this.quaternion.multiply(Wo),this}rotateOnWorldAxis(e,t){return Wo.setFromAxisAngle(e,t),this.quaternion.premultiply(Wo),this}rotateX(e){return this.rotateOnAxis(L_,e)}rotateY(e){return this.rotateOnAxis(I_,e)}rotateZ(e){return this.rotateOnAxis(F_,e)}translateOnAxis(e,t){return D_.copy(e).applyQuaternion(this.quaternion),this.position.add(D_.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(L_,e)}translateY(e){return this.translateOnAxis(I_,e)}translateZ(e){return this.translateOnAxis(F_,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Es.copy(this.matrixWorld).invert())}lookAt(e,t,i){e.isVector3?Bu.copy(e):Bu.set(e,t,i);const n=this.parent;this.updateWorldMatrix(!0,!1),vl.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Es.lookAt(vl,Bu,this.up):Es.lookAt(Bu,vl,this.up),this.quaternion.setFromRotationMatrix(Es),n&&(Es.extractRotation(n.matrixWorld),Wo.setFromRotationMatrix(Es),this.quaternion.premultiply(Wo.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.removeFromParent(),e.parent=this,this.children.push(e),e.dispatchEvent(U_),$o.child=e,this.dispatchEvent($o),$o.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent($2),df.child=e,this.dispatchEvent(df),df.child=null),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){return this.remove(...this.children)}attach(e){return this.updateWorldMatrix(!0,!1),Es.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Es.multiply(e.parent.matrixWorld)),e.applyMatrix4(Es),e.removeFromParent(),e.parent=this,this.children.push(e),e.updateWorldMatrix(!1,!0),e.dispatchEvent(U_),$o.child=e,this.dispatchEvent($o),$o.child=null,this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(e,t);if(o!==void 0)return o}}getObjectsByProperty(e,t,i=[]){this[e]===t&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(e,t,i);return i}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(vl,e,H2),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(vl,W2,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let i=0,n=t.length;i<n;i++)t[i].updateMatrixWorld(e)}updateWorldMatrix(e,t){const i=this.parent;if(e===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),t===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",i={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.7,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.geometryInfo=this._geometryInfo.map(a=>({...a,boundingBox:a.boundingBox?a.boundingBox.toJSON():void 0,boundingSphere:a.boundingSphere?a.boundingSphere.toJSON():void 0})),n.instanceInfo=this._instanceInfo.map(a=>({...a})),n.availableInstanceIds=this._availableInstanceIds.slice(),n.availableGeometryIds=this._availableGeometryIds.slice(),n.nextIndexStart=this._nextIndexStart,n.nextVertexStart=this._nextVertexStart,n.geometryCount=this._geometryCount,n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.matricesTexture=this._matricesTexture.toJSON(e),n.indirectTexture=this._indirectTexture.toJSON(e),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(e)),this.boundingSphere!==null&&(n.boundingSphere=this.boundingSphere.toJSON()),this.boundingBox!==null&&(n.boundingBox=this.boundingBox.toJSON()));function s(a,l){return a[l.uuid]===void 0&&(a[l.uuid]=l.toJSON(e)),l.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const l=a.shapes;if(Array.isArray(l))for(let c=0,u=l.length;c<u;c++){const h=l[c];s(e.shapes,h)}else s(e.shapes,l)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let l=0,c=this.material.length;l<c;l++)a.push(s(e.materials,this.material[l]));n.material=a}else n.material=s(e.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const l=this.animations[a];n.animations.push(s(e.animations,l))}}if(t){const a=o(e.geometries),l=o(e.materials),c=o(e.textures),u=o(e.images),h=o(e.shapes),d=o(e.skeletons),f=o(e.animations),p=o(e.nodes);a.length>0&&(i.geometries=a),l.length>0&&(i.materials=l),c.length>0&&(i.textures=c),u.length>0&&(i.images=u),h.length>0&&(i.shapes=h),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations.slice(),this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let i=0;i<e.children.length;i++){const n=e.children[i];this.add(n.clone())}return this}}$t.DEFAULT_UP=new V(0,1,0);$t.DEFAULT_MATRIX_AUTO_UPDATE=!0;$t.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Un=new V,As=new V,ff=new V,ws=new V,Xo=new V,qo=new V,B_=new V,pf=new V,mf=new V,gf=new V,_f=new Fi,xf=new Fi,yf=new Fi;class Hn{constructor(e=new V,t=new V,i=new V){this.a=e,this.b=t,this.c=i}static getNormal(e,t,i,n){n.subVectors(i,t),Un.subVectors(e,t),n.cross(Un);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(e,t,i,n,s){Un.subVectors(n,t),As.subVectors(i,t),ff.subVectors(e,t);const o=Un.dot(Un),a=Un.dot(As),l=Un.dot(ff),c=As.dot(As),u=As.dot(ff),h=o*c-a*a;if(h===0)return s.set(0,0,0),null;const d=1/h,f=(c*l-a*u)*d,p=(o*u-a*l)*d;return s.set(1-f-p,p,f)}static containsPoint(e,t,i,n){return this.getBarycoord(e,t,i,n,ws)===null?!1:ws.x>=0&&ws.y>=0&&ws.x+ws.y<=1}static getInterpolation(e,t,i,n,s,o,a,l){return this.getBarycoord(e,t,i,n,ws)===null?(l.x=0,l.y=0,"z"in l&&(l.z=0),"w"in l&&(l.w=0),null):(l.setScalar(0),l.addScaledVector(s,ws.x),l.addScaledVector(o,ws.y),l.addScaledVector(a,ws.z),l)}static getInterpolatedAttribute(e,t,i,n,s,o){return _f.setScalar(0),xf.setScalar(0),yf.setScalar(0),_f.fromBufferAttribute(e,t),xf.fromBufferAttribute(e,i),yf.fromBufferAttribute(e,n),o.setScalar(0),o.addScaledVector(_f,s.x),o.addScaledVector(xf,s.y),o.addScaledVector(yf,s.z),o}static isFrontFacing(e,t,i,n){return Un.subVectors(i,t),As.subVectors(e,t),Un.cross(As).dot(n)<0}set(e,t,i){return this.a.copy(e),this.b.copy(t),this.c.copy(i),this}setFromPointsAndIndices(e,t,i,n){return this.a.copy(e[t]),this.b.copy(e[i]),this.c.copy(e[n]),this}setFromAttributeAndIndices(e,t,i,n){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,i),this.c.fromBufferAttribute(e,n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return Un.subVectors(this.c,this.b),As.subVectors(this.a,this.b),Un.cross(As).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return Hn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return Hn.getBarycoord(e,this.a,this.b,this.c,t)}getInterpolation(e,t,i,n,s){return Hn.getInterpolation(e,this.a,this.b,this.c,t,i,n,s)}containsPoint(e){return Hn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return Hn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const i=this.a,n=this.b,s=this.c;let o,a;Xo.subVectors(n,i),qo.subVectors(s,i),pf.subVectors(e,i);const l=Xo.dot(pf),c=qo.dot(pf);if(l<=0&&c<=0)return t.copy(i);mf.subVectors(e,n);const u=Xo.dot(mf),h=qo.dot(mf);if(u>=0&&h<=u)return t.copy(n);const d=l*h-u*c;if(d<=0&&l>=0&&u<=0)return o=l/(l-u),t.copy(i).addScaledVector(Xo,o);gf.subVectors(e,s);const f=Xo.dot(gf),p=qo.dot(gf);if(p>=0&&f<=p)return t.copy(s);const _=f*c-l*p;if(_<=0&&c>=0&&p<=0)return a=c/(c-p),t.copy(i).addScaledVector(qo,a);const g=u*p-f*h;if(g<=0&&h-u>=0&&f-p>=0)return B_.subVectors(s,n),a=(h-u)/(h-u+(f-p)),t.copy(n).addScaledVector(B_,a);const m=1/(g+_+d);return o=_*m,a=d*m,t.copy(i).addScaledVector(Xo,o).addScaledVector(qo,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}const Zb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},rr={h:0,s:0,l:0},Ou={h:0,s:0,l:0};function bf(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}class si{constructor(e,t,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(e,t,i)}set(e,t,i){if(t===void 0&&i===void 0){const n=e;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(e,t,i);return this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=Mi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ln.colorSpaceToWorking(this,t),this}setRGB(e,t,i,n=ln.workingColorSpace){return this.r=e,this.g=t,this.b=i,ln.colorSpaceToWorking(this,n),this}setHSL(e,t,i,n=ln.workingColorSpace){if(e=Om(e,1),t=tt(t,0,1),i=tt(i,0,1),t===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+t):i+t-i*t,o=2*i-s;this.r=bf(o,s,e+1/3),this.g=bf(o,s,e),this.b=bf(o,s,e-1/3)}return ln.colorSpaceToWorking(this,n),this}setStyle(e,t=Mi){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(e)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,t);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,t);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,t);if(o===6)return this.setHex(parseInt(s,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=Mi){const i=Zb[e.toLowerCase()];return i!==void 0?this.setHex(i,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Gs(e.r),this.g=Gs(e.g),this.b=Gs(e.b),this}copyLinearToSRGB(e){return this.r=pa(e.r),this.g=pa(e.g),this.b=pa(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=Mi){return ln.workingToColorSpace(vi.copy(this),e),Math.round(tt(vi.r*255,0,255))*65536+Math.round(tt(vi.g*255,0,255))*256+Math.round(tt(vi.b*255,0,255))}getHexString(e=Mi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ln.workingColorSpace){ln.workingToColorSpace(vi.copy(this),t);const i=vi.r,n=vi.g,s=vi.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let l,c;const u=(a+o)/2;if(a===o)l=0,c=0;else{const h=o-a;switch(c=u<=.5?h/(o+a):h/(2-o-a),o){case i:l=(n-s)/h+(n<s?6:0);break;case n:l=(s-i)/h+2;break;case s:l=(i-n)/h+4;break}l/=6}return e.h=l,e.s=c,e.l=u,e}getRGB(e,t=ln.workingColorSpace){return ln.workingToColorSpace(vi.copy(this),t),e.r=vi.r,e.g=vi.g,e.b=vi.b,e}getStyle(e=Mi){ln.workingToColorSpace(vi.copy(this),e);const t=vi.r,i=vi.g,n=vi.b;return e!==Mi?`color(${e} ${t.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(t*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(e,t,i){return this.getHSL(rr),this.setHSL(rr.h+e,rr.s+t,rr.l+i)}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,i){return this.r=e.r+(t.r-e.r)*i,this.g=e.g+(t.g-e.g)*i,this.b=e.b+(t.b-e.b)*i,this}lerpHSL(e,t){this.getHSL(rr),e.getHSL(Ou);const i=Jl(rr.h,Ou.h,t),n=Jl(rr.s,Ou.s,t),s=Jl(rr.l,Ou.l,t);return this.setHSL(i,n,s),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,i=this.g,n=this.b,s=e.elements;return this.r=s[0]*t+s[3]*i+s[6]*n,this.g=s[1]*t+s[4]*i+s[7]*n,this.b=s[2]*t+s[5]*i+s[8]*n,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const vi=new si;si.NAMES=Zb;let X2=0;class oo extends $c{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:X2++}),this.uuid=qn(),this.name="",this.type="Material",this.blending=f_,this.side=Ph,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=m_,this.blendDst=g_,this.blendEquation=p_,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new si(0,0,0),this.blendAlpha=0,this.depthFunc=__,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=v_,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Oo,this.stencilZFail=Oo,this.stencilZPass=Oo,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.allowOverride=!0,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const i=e[t];if(i===void 0){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const n=this[t];if(n===void 0){console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[t]=i}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const i={metadata:{version:4.7,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(e).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(e).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(e).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(e).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(e).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==f_&&(i.blending=this.blending),this.side!==Ph&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==m_&&(i.blendSrc=this.blendSrc),this.blendDst!==g_&&(i.blendDst=this.blendDst),this.blendEquation!==p_&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==__&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==v_&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Oo&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Oo&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Oo&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const l=s[a];delete l.metadata,o.push(l)}return o}if(t){const s=n(e.textures),o=n(e.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.blendColor.copy(e.blendColor),this.blendAlpha=e.blendAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let i=null;if(t!==null){const n=t.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=t[s].clone()}return this.clippingPlanes=i,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaHash=e.alphaHash,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class oa extends oo{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new si(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new rl,this.combine=a2,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const qt=new V,ku=new ht;let q2=0;class jn{constructor(e,t,i=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:q2++}),this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=i,this.usage=Np,this.updateRanges=[],this.gpuType=Bm,this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this.gpuType=e.gpuType,this}copyAt(e,t,i){e*=this.itemSize,i*=t.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[e+n]=t.array[i+n];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,i=this.count;t<i;t++)ku.fromBufferAttribute(this,t),ku.applyMatrix3(e),this.setXY(t,ku.x,ku.y);else if(this.itemSize===3)for(let t=0,i=this.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.applyMatrix3(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}applyMatrix4(e){for(let t=0,i=this.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.applyMatrix4(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.applyNormalMatrix(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)qt.fromBufferAttribute(this,t),qt.transformDirection(e),this.setXYZ(t,qt.x,qt.y,qt.z);return this}set(e,t=0){return this.array.set(e,t),this}getComponent(e,t){let i=this.array[e*this.itemSize+t];return this.normalized&&(i=Vn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=xt(i,this.array)),this.array[e*this.itemSize+t]=i,this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Vn(t,this.array)),t}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Vn(t,this.array)),t}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Vn(t,this.array)),t}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Vn(t,this.array)),t}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,i){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array)),this.array[e+0]=t,this.array[e+1]=i,this}setXYZ(e,t,i,n){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),n=xt(n,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e*=this.itemSize,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),n=xt(n,this.array),s=xt(s,this.array)),this.array[e+0]=t,this.array[e+1]=i,this.array[e+2]=n,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Np&&(e.usage=this.usage),e}}class Y2 extends jn{constructor(e,t,i){super(new Uint16Array(e),t,i)}}class j2 extends jn{constructor(e,t,i){super(new Uint32Array(e),t,i)}}class km extends jn{constructor(e,t,i){super(new Float32Array(e),t,i)}}let K2=0;const vn=new at,Tf=new $t,Yo=new V,on=new qs,Ml=new qs,ui=new V;class ol extends $c{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:K2++}),this.uuid=qn(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(D2(e)?j2:Y2)(e,1):this.index=e,this}setIndirect(e){return this.indirect=e,this}getIndirect(){return this.indirect}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,i=0){this.groups.push({start:e,count:t,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Xs().getNormalMatrix(e);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(e),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return vn.makeRotationFromQuaternion(e),this.applyMatrix4(vn),this}rotateX(e){return vn.makeRotationX(e),this.applyMatrix4(vn),this}rotateY(e){return vn.makeRotationY(e),this.applyMatrix4(vn),this}rotateZ(e){return vn.makeRotationZ(e),this.applyMatrix4(vn),this}translate(e,t,i){return vn.makeTranslation(e,t,i),this.applyMatrix4(vn),this}scale(e,t,i){return vn.makeScale(e,t,i),this.applyMatrix4(vn),this}lookAt(e){return Tf.lookAt(e),Tf.updateMatrix(),this.applyMatrix4(Tf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Yo).negate(),this.translate(Yo.x,Yo.y,Yo.z),this}setFromPoints(e){const t=this.getAttribute("position");if(t===void 0){const i=[];for(let n=0,s=e.length;n<s;n++){const o=e[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new km(i,3))}else{const i=Math.min(e.length,t.count);for(let n=0;n<i;n++){const s=e[n];t.setXYZ(n,s.x,s.y,s.z||0)}e.length>t.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),t.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let i=0,n=t.length;i<n;i++){const s=t[i];on.setFromBufferAttribute(s),this.morphTargetsRelative?(ui.addVectors(this.boundingBox.min,on.min),this.boundingBox.expandByPoint(ui),ui.addVectors(this.boundingBox.max,on.max),this.boundingBox.expandByPoint(ui)):(this.boundingBox.expandByPoint(on.min),this.boundingBox.expandByPoint(on.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new ps);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new V,1/0);return}if(e){const i=this.boundingSphere.center;if(on.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];Ml.setFromBufferAttribute(a),this.morphTargetsRelative?(ui.addVectors(on.min,Ml.min),on.expandByPoint(ui),ui.addVectors(on.max,Ml.max),on.expandByPoint(ui)):(on.expandByPoint(Ml.min),on.expandByPoint(Ml.max))}on.getCenter(i);let n=0;for(let s=0,o=e.count;s<o;s++)ui.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(ui));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],l=this.morphTargetsRelative;for(let c=0,u=a.count;c<u;c++)ui.fromBufferAttribute(a,c),l&&(Yo.fromBufferAttribute(e,c),ui.add(Yo)),n=Math.max(n,i.distanceToSquared(ui))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.position,n=t.normal,s=t.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new jn(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],l=[];for(let R=0;R<i.count;R++)a[R]=new V,l[R]=new V;const c=new V,u=new V,h=new V,d=new ht,f=new ht,p=new ht,_=new V,g=new V;function m(R,T,E){c.fromBufferAttribute(i,R),u.fromBufferAttribute(i,T),h.fromBufferAttribute(i,E),d.fromBufferAttribute(s,R),f.fromBufferAttribute(s,T),p.fromBufferAttribute(s,E),u.sub(c),h.sub(c),f.sub(d),p.sub(d);const C=1/(f.x*p.y-p.x*f.y);isFinite(C)&&(_.copy(u).multiplyScalar(p.y).addScaledVector(h,-f.y).multiplyScalar(C),g.copy(h).multiplyScalar(f.x).addScaledVector(u,-p.x).multiplyScalar(C),a[R].add(_),a[T].add(_),a[E].add(_),l[R].add(g),l[T].add(g),l[E].add(g))}let b=this.groups;b.length===0&&(b=[{start:0,count:e.count}]);for(let R=0,T=b.length;R<T;++R){const E=b[R],C=E.start,k=E.count;for(let U=C,G=C+k;U<G;U+=3)m(e.getX(U+0),e.getX(U+1),e.getX(U+2))}const y=new V,x=new V,S=new V,w=new V;function M(R){S.fromBufferAttribute(n,R),w.copy(S);const T=a[R];y.copy(T),y.sub(S.multiplyScalar(S.dot(T))).normalize(),x.crossVectors(w,T);const C=x.dot(l[R])<0?-1:1;o.setXYZW(R,y.x,y.y,y.z,C)}for(let R=0,T=b.length;R<T;++R){const E=b[R],C=E.start,k=E.count;for(let U=C,G=C+k;U<G;U+=3)M(e.getX(U+0)),M(e.getX(U+1)),M(e.getX(U+2))}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new jn(new Float32Array(t.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new V,s=new V,o=new V,a=new V,l=new V,c=new V,u=new V,h=new V;if(e)for(let d=0,f=e.count;d<f;d+=3){const p=e.getX(d+0),_=e.getX(d+1),g=e.getX(d+2);n.fromBufferAttribute(t,p),s.fromBufferAttribute(t,_),o.fromBufferAttribute(t,g),u.subVectors(o,s),h.subVectors(n,s),u.cross(h),a.fromBufferAttribute(i,p),l.fromBufferAttribute(i,_),c.fromBufferAttribute(i,g),a.add(u),l.add(u),c.add(u),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(_,l.x,l.y,l.z),i.setXYZ(g,c.x,c.y,c.z)}else for(let d=0,f=t.count;d<f;d+=3)n.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),h.subVectors(n,s),u.cross(h),i.setXYZ(d+0,u.x,u.y,u.z),i.setXYZ(d+1,u.x,u.y,u.z),i.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const e=this.attributes.normal;for(let t=0,i=e.count;t<i;t++)ui.fromBufferAttribute(e,t),ui.normalize(),e.setXYZ(t,ui.x,ui.y,ui.z)}toNonIndexed(){function e(a,l){const c=a.array,u=a.itemSize,h=a.normalized,d=new c.constructor(l.length*u);let f=0,p=0;for(let _=0,g=l.length;_<g;_++){a.isInterleavedBufferAttribute?f=l[_]*a.data.stride+a.offset:f=l[_]*u;for(let m=0;m<u;m++)d[p++]=c[f++]}return new jn(d,u,h)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ol,i=this.index.array,n=this.attributes;for(const a in n){const l=n[a],c=e(l,i);t.setAttribute(a,c)}const s=this.morphAttributes;for(const a in s){const l=[],c=s[a];for(let u=0,h=c.length;u<h;u++){const d=c[u],f=e(d,i);l.push(f)}t.morphAttributes[a]=l}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,l=o.length;a<l;a++){const c=o[a];t.addGroup(c.start,c.count,c.materialIndex)}return t}toJSON(){const e={metadata:{version:4.7,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const l=this.parameters;for(const c in l)l[c]!==void 0&&(e[c]=l[c]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const i=this.attributes;for(const l in i){const c=i[l];e.data.attributes[l]=c.toJSON(e.data)}const n={};let s=!1;for(const l in this.morphAttributes){const c=this.morphAttributes[l],u=[];for(let h=0,d=c.length;h<d;h++){const f=c[h];u.push(f.toJSON(e.data))}u.length>0&&(n[l]=u,s=!0)}s&&(e.data.morphAttributes=n,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere=a.toJSON()),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const i=e.index;i!==null&&this.setIndex(i.clone());const n=e.attributes;for(const c in n){const u=n[c];this.setAttribute(c,u.clone(t))}const s=e.morphAttributes;for(const c in s){const u=[],h=s[c];for(let d=0,f=h.length;d<f;d++)u.push(h[d].clone(t));this.morphAttributes[c]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let c=0,u=o.length;c<u;c++){const h=o[c];this.addGroup(h.start,h.count,h.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const l=e.boundingSphere;return l!==null&&(this.boundingSphere=l.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const O_=new at,Fr=new Xc,zu=new ps,k_=new V,Gu=new V,Vu=new V,Hu=new V,Sf=new V,Wu=new V,z_=new V,$u=new V;class rd extends $t{constructor(e=new ol,t=new oa){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.count=1,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(e,t){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;t.fromBufferAttribute(n,e);const a=this.morphTargetInfluences;if(s&&a){Wu.set(0,0,0);for(let l=0,c=s.length;l<c;l++){const u=a[l],h=s[l];u!==0&&(Sf.fromBufferAttribute(h,e),o?Wu.addScaledVector(Sf,u):Wu.addScaledVector(Sf.sub(t),u))}t.add(Wu)}return t}raycast(e,t){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),zu.copy(i.boundingSphere),zu.applyMatrix4(s),Fr.copy(e.ray).recast(e.near),!(zu.containsPoint(Fr.origin)===!1&&(Fr.intersectSphere(zu,k_)===null||Fr.origin.distanceToSquared(k_)>(e.far-e.near)**2))&&(O_.copy(s).invert(),Fr.copy(e.ray).applyMatrix4(O_),!(i.boundingBox!==null&&Fr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(e,t,Fr)))}_computeIntersections(e,t,i){let n;const s=this.geometry,o=this.material,a=s.index,l=s.attributes.position,c=s.attributes.uv,u=s.attributes.uv1,h=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let x=b,S=y;x<S;x+=3){const w=a.getX(x),M=a.getX(x+1),R=a.getX(x+2);n=Xu(this,m,e,i,c,u,h,w,M,R),n&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const b=a.getX(g),y=a.getX(g+1),x=a.getX(g+2);n=Xu(this,o,e,i,c,u,h,b,y,x),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}else if(l!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],b=Math.max(g.start,f.start),y=Math.min(l.count,Math.min(g.start+g.count,f.start+f.count));for(let x=b,S=y;x<S;x+=3){const w=x,M=x+1,R=x+2;n=Xu(this,m,e,i,c,u,h,w,M,R),n&&(n.faceIndex=Math.floor(x/3),n.face.materialIndex=g.materialIndex,t.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(l.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const b=g,y=g+1,x=g+2;n=Xu(this,o,e,i,c,u,h,b,y,x),n&&(n.faceIndex=Math.floor(g/3),t.push(n))}}}}function Z2(r,e,t,i,n,s,o,a){let l;if(e.side===r2?l=i.intersectTriangle(o,s,n,!0,a):l=i.intersectTriangle(n,s,o,e.side===Ph,a),l===null)return null;$u.copy(a),$u.applyMatrix4(r.matrixWorld);const c=t.ray.origin.distanceTo($u);return c<t.near||c>t.far?null:{distance:c,point:$u.clone(),object:r}}function Xu(r,e,t,i,n,s,o,a,l,c){r.getVertexPosition(a,Gu),r.getVertexPosition(l,Vu),r.getVertexPosition(c,Hu);const u=Z2(r,e,t,i,Gu,Vu,Hu,z_);if(u){const h=new V;Hn.getBarycoord(z_,Gu,Vu,Hu,h),n&&(u.uv=Hn.getInterpolatedAttribute(n,a,l,c,h,new ht)),s&&(u.uv1=Hn.getInterpolatedAttribute(s,a,l,c,h,new ht)),o&&(u.normal=Hn.getInterpolatedAttribute(o,a,l,c,h,new V),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const d={a,b:l,c,normal:new V,materialIndex:0};Hn.getNormal(Gu,Vu,Hu,d.normal),u.face=d,u.barycoord=h}return u}class Qb extends $t{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new at,this.projectionMatrix=new at,this.projectionMatrixInverse=new at,this.coordinateSystem=eo,this._reversedDepth=!1}get reversedDepth(){return this._reversedDepth}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this.coordinateSystem=e.coordinateSystem,this}getWorldDirection(e){return super.getWorldDirection(e).negate()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const or=new V,G_=new ht,V_=new ht;class zm extends Qb{constructor(e=50,t=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=Rc*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Ql*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return Rc*2*Math.atan(Math.tan(Ql*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(e,t,i){or.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),t.set(or.x,or.y).multiplyScalar(-e/or.z),or.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(or.x,or.y).multiplyScalar(-e/or.z)}getViewSize(e,t){return this.getViewBounds(e,G_,V_),t.subVectors(V_,G_)}setViewOffset(e,t,i,n,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Ql*.5*this.fov)/this.zoom,i=2*t,n=this.aspect*i,s=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const l=o.fullWidth,c=o.fullHeight;s+=o.offsetX*n/l,t-=o.offsetY*i/c,n*=o.width/l,i*=o.height/c}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,t,t-i,e,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}class vf extends $t{constructor(){super(),this.isGroup=!0,this.type="Group"}}class Q2{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Np,this.updateRanges=[],this.version=0,this.uuid=qn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}addUpdateRange(e,t){this.updateRanges.push({start:e,count:t})}clearUpdateRanges(){this.updateRanges.length=0}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,i){e*=this.stride,i*=t.stride;for(let n=0,s=this.stride;n<s;n++)this.array[e+n]=t.array[i+n];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(t,this.stride);return i.setUsage(this.usage),i}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=qn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Di=new V;class Gm{constructor(e,t,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,i=this.data.count;t<i;t++)Di.fromBufferAttribute(this,t),Di.applyMatrix4(e),this.setXYZ(t,Di.x,Di.y,Di.z);return this}applyNormalMatrix(e){for(let t=0,i=this.count;t<i;t++)Di.fromBufferAttribute(this,t),Di.applyNormalMatrix(e),this.setXYZ(t,Di.x,Di.y,Di.z);return this}transformDirection(e){for(let t=0,i=this.count;t<i;t++)Di.fromBufferAttribute(this,t),Di.transformDirection(e),this.setXYZ(t,Di.x,Di.y,Di.z);return this}getComponent(e,t){let i=this.array[e*this.data.stride+this.offset+t];return this.normalized&&(i=Vn(i,this.array)),i}setComponent(e,t,i){return this.normalized&&(i=xt(i,this.array)),this.data.array[e*this.data.stride+this.offset+t]=i,this}setX(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=xt(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Vn(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Vn(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Vn(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Vn(t,this.array)),t}setXY(e,t,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this}setXYZ(e,t,i,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),n=xt(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this}setXYZW(e,t,i,n,s){return e=e*this.data.stride+this.offset,this.normalized&&(t=xt(t,this.array),i=xt(i,this.array),n=xt(n,this.array),s=xt(s,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=i,this.data.array[e+2]=n,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return new jn(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new Gm(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const t=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}const H_=new V,W_=new Fi,$_=new Fi,J2=new V,X_=new at,qu=new V,Mf=new ps,q_=new at,Ef=new Xc;class eN extends rd{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=x_,this.bindMatrix=new at,this.bindMatrixInverse=new at,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const e=this.geometry;this.boundingBox===null&&(this.boundingBox=new qs),this.boundingBox.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,qu),this.boundingBox.expandByPoint(qu)}computeBoundingSphere(){const e=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new ps),this.boundingSphere.makeEmpty();const t=e.getAttribute("position");for(let i=0;i<t.count;i++)this.getVertexPosition(i,qu),this.boundingSphere.expandByPoint(qu)}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}raycast(e,t){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Mf.copy(this.boundingSphere),Mf.applyMatrix4(n),e.ray.intersectsSphere(Mf)!==!1&&(q_.copy(n).invert(),Ef.copy(e.ray).applyMatrix4(q_),!(this.boundingBox!==null&&Ef.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(e,t,Ef)))}getVertexPosition(e,t){return super.getVertexPosition(e,t),this.applyBoneTransform(e,t),t}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Fi,t=this.geometry.attributes.skinWeight;for(let i=0,n=t.count;i<n;i++){e.fromBufferAttribute(t,i);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(i,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode===x_?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===l2?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(e,t){const i=this.skeleton,n=this.geometry;W_.fromBufferAttribute(n.attributes.skinIndex,e),$_.fromBufferAttribute(n.attributes.skinWeight,e),H_.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=$_.getComponent(s);if(o!==0){const a=W_.getComponent(s);X_.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),t.addScaledVector(J2.copy(H_).applyMatrix4(X_),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}class Jb extends $t{constructor(){super(),this.isBone=!0,this.type="Bone"}}class eT extends Yn{constructor(e=null,t=1,i=1,n,s,o,a,l,c=Dh,u=Dh,h,d){super(null,o,a,l,c,u,n,s,h,d),this.isDataTexture=!0,this.image={data:e,width:t,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Y_=new at,tN=new at;class Vm{constructor(e=[],t=[]){this.uuid=qn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new at)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const i=new at;this.bones[e]&&i.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&i.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const i=this.bones[e];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const e=this.bones,t=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:tN;Y_.multiplyMatrices(a,t[s]),Y_.toArray(i,s*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new Vm(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=Math.ceil(e/4)*4,e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const i=new eT(t,e,e,qb,Bm);return i.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=i,this}getBoneByName(e){for(let t=0,i=this.bones.length;t<i;t++){const n=this.bones[t];if(n.name===e)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let i=0,n=e.bones.length;i<n;i++){const s=e.bones[i];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Jb),this.bones.push(o),this.boneInverses.push(new at().fromArray(e.boneInverses[i]))}return this.init(),this}toJSON(){const e={metadata:{version:4.7,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,i=this.boneInverses;for(let n=0,s=t.length;n<s;n++){const o=t[n];e.bones.push(o.uuid);const a=i[n];e.boneInverses.push(a.toArray())}return e}}class Lp extends jn{constructor(e,t,i,n=1){super(e,t,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const jo=new at,j_=new at,Yu=[],K_=new qs,iN=new at,El=new rd,Al=new ps;class nN extends rd{constructor(e,t,i){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new Lp(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,iN)}computeBoundingBox(){const e=this.geometry,t=this.count;this.boundingBox===null&&(this.boundingBox=new qs),e.boundingBox===null&&e.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,jo),K_.copy(e.boundingBox).applyMatrix4(jo),this.boundingBox.union(K_)}computeBoundingSphere(){const e=this.geometry,t=this.count;this.boundingSphere===null&&(this.boundingSphere=new ps),e.boundingSphere===null&&e.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<t;i++)this.getMatrixAt(i,jo),Al.copy(e.boundingSphere).applyMatrix4(jo),this.boundingSphere.union(Al)}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.morphTexture!==null&&(this.morphTexture=e.morphTexture.clone()),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}getMorphAt(e,t){const i=t.morphTargetInfluences,n=this.morphTexture.source.data.data,s=i.length+1,o=e*s+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(e,t){const i=this.matrixWorld,n=this.count;if(El.geometry=this.geometry,El.material=this.material,El.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Al.copy(this.boundingSphere),Al.applyMatrix4(i),e.ray.intersectsSphere(Al)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,jo),j_.multiplyMatrices(i,jo),El.matrixWorld=j_,El.raycast(e,Yu);for(let o=0,a=Yu.length;o<a;o++){const l=Yu[o];l.instanceId=s,l.object=this,t.push(l)}Yu.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new Lp(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}setMorphAt(e,t){const i=t.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new eT(new Float32Array(n*this.count),n,this.count,d2,Bm));const s=this.morphTexture.source.data.data;let o=0;for(let c=0;c<i.length;c++)o+=i[c];const a=this.geometry.morphTargetsRelative?1:1-o,l=n*e;s[l]=a,s.set(i,l+1)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null)}}const Af=new V,sN=new V,rN=new Xs;class Wr{constructor(e=new V(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,i,n){return this.normal.set(e,t,i),this.constant=n,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,i){const n=Af.subVectors(i,t).cross(sN.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(n,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const i=e.delta(Af),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:t.copy(e.start).addScaledVector(i,s)}intersectsLine(e){const t=this.distanceToPoint(e.start),i=this.distanceToPoint(e.end);return t<0&&i>0||i<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const i=t||rN.getNormalMatrix(e),n=this.coplanarPoint(Af).applyMatrix4(e),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const Ur=new ps,oN=new ht(.5,.5),ju=new V;class aN{constructor(e=new Wr,t=new Wr,i=new Wr,n=new Wr,s=new Wr,o=new Wr){this.planes=[e,t,i,n,s,o]}set(e,t,i,n,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let i=0;i<6;i++)t[i].copy(e.planes[i]);return this}setFromProjectionMatrix(e,t=eo,i=!1){const n=this.planes,s=e.elements,o=s[0],a=s[1],l=s[2],c=s[3],u=s[4],h=s[5],d=s[6],f=s[7],p=s[8],_=s[9],g=s[10],m=s[11],b=s[12],y=s[13],x=s[14],S=s[15];if(n[0].setComponents(c-o,f-u,m-p,S-b).normalize(),n[1].setComponents(c+o,f+u,m+p,S+b).normalize(),n[2].setComponents(c+a,f+h,m+_,S+y).normalize(),n[3].setComponents(c-a,f-h,m-_,S-y).normalize(),i)n[4].setComponents(l,d,g,x).normalize(),n[5].setComponents(c-l,f-d,m-g,S-x).normalize();else if(n[4].setComponents(c-l,f-d,m-g,S-x).normalize(),t===eo)n[5].setComponents(c+l,f+d,m+g,S+x).normalize();else if(t===Pp)n[5].setComponents(l,d,g,x).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+t);return this}intersectsObject(e){if(e.boundingSphere!==void 0)e.boundingSphere===null&&e.computeBoundingSphere(),Ur.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;t.boundingSphere===null&&t.computeBoundingSphere(),Ur.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(Ur)}intersectsSprite(e){Ur.center.set(0,0,0);const t=oN.distanceTo(e.center);return Ur.radius=.7071067811865476+t,Ur.applyMatrix4(e.matrixWorld),this.intersectsSphere(Ur)}intersectsSphere(e){const t=this.planes,i=e.center,n=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(e){const t=this.planes;for(let i=0;i<6;i++){const n=t[i];if(ju.x=n.normal.x>0?e.max.x:e.min.x,ju.y=n.normal.y>0?e.max.y:e.min.y,ju.z=n.normal.z>0?e.max.z:e.min.z,n.distanceToPoint(ju)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let i=0;i<6;i++)if(t[i].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}class tT extends oo{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new si(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ih=new V,Fh=new V,Z_=new at,wl=new Xc,Ku=new ps,wf=new V,Q_=new V;class Hm extends $t{constructor(e=new ol,t=new tT){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[0];for(let n=1,s=t.count;n<s;n++)Ih.fromBufferAttribute(t,n-1),Fh.fromBufferAttribute(t,n),i[n]=i[n-1],i[n]+=Ih.distanceTo(Fh);e.setAttribute("lineDistance",new km(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Ku.copy(i.boundingSphere),Ku.applyMatrix4(n),Ku.radius+=s,e.ray.intersectsSphere(Ku)===!1)return;Z_.copy(n).invert(),wl.copy(e.ray).applyMatrix4(Z_);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=this.isLineSegments?2:1,u=i.index,d=i.attributes.position;if(u!==null){const f=Math.max(0,o.start),p=Math.min(u.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=c){const m=u.getX(_),b=u.getX(_+1),y=Zu(this,e,wl,l,m,b,_);y&&t.push(y)}if(this.isLineLoop){const _=u.getX(p-1),g=u.getX(f),m=Zu(this,e,wl,l,_,g,p-1);m&&t.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=c){const m=Zu(this,e,wl,l,_,_+1,_);m&&t.push(m)}if(this.isLineLoop){const _=Zu(this,e,wl,l,p-1,f,p-1);_&&t.push(_)}}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Zu(r,e,t,i,n,s,o){const a=r.geometry.attributes.position;if(Ih.fromBufferAttribute(a,n),Fh.fromBufferAttribute(a,s),t.distanceSqToSegment(Ih,Fh,wf,Q_)>i)return;wf.applyMatrix4(r.matrixWorld);const c=e.ray.origin.distanceTo(wf);if(!(c<e.near||c>e.far))return{distance:c,point:Q_.clone().applyMatrix4(r.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:r}}const J_=new V,ex=new V;class lN extends Hm{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,i=[];for(let n=0,s=t.count;n<s;n+=2)J_.fromBufferAttribute(t,n),ex.fromBufferAttribute(t,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+J_.distanceTo(ex);e.setAttribute("lineDistance",new km(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class cN extends Hm{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class iT extends oo{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new si(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const tx=new at,Ip=new Xc,Qu=new ps,Ju=new V;class uN extends $t{constructor(e=new ol,t=new iT){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.morphTargetDictionary=void 0,this.morphTargetInfluences=void 0,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=Array.isArray(e.material)?e.material.slice():e.material,this.geometry=e.geometry,this}raycast(e,t){const i=this.geometry,n=this.matrixWorld,s=e.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Qu.copy(i.boundingSphere),Qu.applyMatrix4(n),Qu.radius+=s,e.ray.intersectsSphere(Qu)===!1)return;tx.copy(n).invert(),Ip.copy(e.ray).applyMatrix4(tx);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),l=a*a,c=i.index,h=i.attributes.position;if(c!==null){const d=Math.max(0,o.start),f=Math.min(c.count,o.start+o.count);for(let p=d,_=f;p<_;p++){const g=c.getX(p);Ju.fromBufferAttribute(h,g),ix(Ju,g,l,n,e,t,this)}}else{const d=Math.max(0,o.start),f=Math.min(h.count,o.start+o.count);for(let p=d,_=f;p<_;p++)Ju.fromBufferAttribute(h,p),ix(Ju,p,l,n,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,i=Object.keys(t);if(i.length>0){const n=t[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function ix(r,e,t,i,n,s,o){const a=Ip.distanceSqToPoint(r);if(a<t){const l=new V;Ip.closestPointToPoint(r,l),l.applyMatrix4(i);const c=n.ray.origin.distanceTo(l);if(c<n.near||c>n.far)return;s.push({distance:c,distanceToRay:Math.sqrt(a),point:l,index:e,face:null,faceIndex:null,barycoord:null,object:o})}}class Wm extends oo{constructor(e){super(),this.isMeshStandardMaterial=!0,this.type="MeshStandardMaterial",this.defines={STANDARD:""},this.color=new si(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new si(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=m2,this.normalScale=new ht(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new rl,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapRotation.copy(e.envMapRotation),this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class ms extends Wm{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new ht(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return tt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new si(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new si(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new si(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(e)}get anisotropy(){return this._anisotropy}set anisotropy(e){this._anisotropy>0!=e>0&&this.version++,this._anisotropy=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get dispersion(){return this._dispersion}set dispersion(e){this._dispersion>0!=e>0&&this.version++,this._dispersion=e}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=e.anisotropy,this.anisotropyRotation=e.anisotropyRotation,this.anisotropyMap=e.anisotropyMap,this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.dispersion=e.dispersion,this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}function eh(r,e){return!r||r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)}function hN(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function dN(r){function e(n,s){return r[n]-r[s]}const t=r.length,i=new Array(t);for(let n=0;n!==t;++n)i[n]=n;return i.sort(e),i}function nx(r,e,t){const i=r.length,n=new r.constructor(i);for(let s=0,o=0;o!==i;++s){const a=t[s]*e;for(let l=0;l!==e;++l)n[o++]=r[a+l]}return n}function nT(r,e,t,i){let n=1,s=r[0];for(;s!==void 0&&s[i]===void 0;)s=r[n++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(e.push(s.time),t.push(...o)),s=r[n++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[n++];while(s!==void 0);else do o=s[i],o!==void 0&&(e.push(s.time),t.push(o)),s=r[n++];while(s!==void 0)}class qc{constructor(e,t,i,n){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new t.constructor(i),this.sampleValues=t,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let i=this._cachedIndex,n=t[i],s=t[i-1];i:{e:{let o;t:{n:if(!(e<n)){for(let a=i+2;;){if(n===void 0){if(e<s)break n;return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=n,n=t[++i],e<n)break e}o=t.length;break t}if(!(e>=s)){const a=t[1];e<a&&(i=2,s=a);for(let l=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===l)break;if(n=s,s=t[--i-1],e>=s)break e}o=i,i=0;break t}break i}for(;i<o;){const a=i+o>>>1;e<t[a]?o=a:i=a+1}if(n=t[i],s=t[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=t.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,e,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n;for(let o=0;o!==n;++o)t[o]=i[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class fN extends qc{constructor(e,t,i,n){super(e,t,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:y_,endingEnd:y_}}intervalChanged_(e,t,i){const n=this.parameterPositions;let s=e-2,o=e+1,a=n[s],l=n[o];if(a===void 0)switch(this.getSettings_().endingStart){case b_:s=e,a=2*t-i;break;case T_:s=n.length-2,a=t+n[s]-n[s+1];break;default:s=e,a=i}if(l===void 0)switch(this.getSettings_().endingEnd){case b_:o=e,l=2*i-t;break;case T_:o=1,l=i+n[1]-n[0];break;default:o=e-1,l=t}const c=(i-t)*.5,u=this.valueSize;this._weightPrev=c/(t-a),this._weightNext=c/(l-i),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=this._offsetPrev,h=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-t)/(n-t),_=p*p,g=_*p,m=-d*g+2*d*_-d*p,b=(1+d)*g+(-1.5-2*d)*_+(-.5+d)*p+1,y=(-1-f)*g+(1.5+f)*_+.5*p,x=f*g-f*_;for(let S=0;S!==a;++S)s[S]=m*o[u+S]+b*o[c+S]+y*o[l+S]+x*o[h+S];return s}}class pN extends qc{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=e*a,c=l-a,u=(i-t)/(n-t),h=1-u;for(let d=0;d!==a;++d)s[d]=o[c+d]*h+o[l+d]*u;return s}}class mN extends qc{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e){return this.copySampleValue_(e-1)}}class Zn{constructor(e,t,i,n){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=eh(t,this.TimeBufferType),this.values=eh(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let i;if(t.toJSON!==this.toJSON)i=t.toJSON(e);else{i={name:e.name,times:eh(e.times,Array),values:eh(e.values,Array)};const n=e.getInterpolation();n!==e.DefaultInterpolation&&(i.interpolation=n)}return i.type=e.ValueTypeName,i}InterpolantFactoryMethodDiscrete(e){return new mN(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pN(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new fN(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ac:t=this.InterpolantFactoryMethodDiscrete;break;case wc:t=this.InterpolantFactoryMethodLinear;break;case ef:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ac;case this.InterpolantFactoryMethodLinear:return wc;case this.InterpolantFactoryMethodSmooth:return ef}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let i=0,n=t.length;i!==n;++i)t[i]*=e}return this}trim(e,t){const i=this.times,n=i.length;let s=0,o=n-1;for(;s!==n&&i[s]<e;)++s;for(;o!==-1&&i[o]>t;)--o;if(++o,s!==0||o!==n){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=i.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const l=i[a];if(typeof l=="number"&&isNaN(l)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,l),e=!1;break}if(o!==null&&o>l){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,l,o),e=!1;break}o=l}if(n!==void 0&&hN(n))for(let a=0,l=n.length;a!==l;++a){const c=n[a];if(isNaN(c)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,c),e=!1;break}}return e}optimize(){const e=this.times.slice(),t=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===ef,s=e.length-1;let o=1;for(let a=1;a<s;++a){let l=!1;const c=e[a],u=e[a+1];if(c!==u&&(a!==1||c!==e[0]))if(n)l=!0;else{const h=a*i,d=h-i,f=h+i;for(let p=0;p!==i;++p){const _=t[h+p];if(_!==t[d+p]||_!==t[f+p]){l=!0;break}}}if(l){if(a!==o){e[o]=e[a];const h=a*i,d=o*i;for(let f=0;f!==i;++f)t[d+f]=t[h+f]}++o}}if(s>0){e[o]=e[s];for(let a=s*i,l=o*i,c=0;c!==i;++c)t[l+c]=t[a+c];++o}return o!==e.length?(this.times=e.slice(0,o),this.values=t.slice(0,o*i)):(this.times=e,this.values=t),this}clone(){const e=this.times.slice(),t=this.values.slice(),i=this.constructor,n=new i(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}Zn.prototype.ValueTypeName="";Zn.prototype.TimeBufferType=Float32Array;Zn.prototype.ValueBufferType=Float32Array;Zn.prototype.DefaultInterpolation=wc;class al extends Zn{constructor(e,t,i){super(e,t,i)}}al.prototype.ValueTypeName="bool";al.prototype.ValueBufferType=Array;al.prototype.DefaultInterpolation=Ac;al.prototype.InterpolantFactoryMethodLinear=void 0;al.prototype.InterpolantFactoryMethodSmooth=void 0;class sT extends Zn{constructor(e,t,i,n){super(e,t,i,n)}}sT.prototype.ValueTypeName="color";class Ya extends Zn{constructor(e,t,i,n){super(e,t,i,n)}}Ya.prototype.ValueTypeName="number";class gN extends qc{constructor(e,t,i,n){super(e,t,i,n)}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=(i-t)/(n-t);let c=e*a;for(let u=c+a;c!==u;c+=4)us.slerpFlat(s,0,o,c-a,o,c,l);return s}}class ja extends Zn{constructor(e,t,i,n){super(e,t,i,n)}InterpolantFactoryMethodLinear(e){return new gN(this.times,this.values,this.getValueSize(),e)}}ja.prototype.ValueTypeName="quaternion";ja.prototype.InterpolantFactoryMethodSmooth=void 0;class ll extends Zn{constructor(e,t,i){super(e,t,i)}}ll.prototype.ValueTypeName="string";ll.prototype.ValueBufferType=Array;ll.prototype.DefaultInterpolation=Ac;ll.prototype.InterpolantFactoryMethodLinear=void 0;ll.prototype.InterpolantFactoryMethodSmooth=void 0;class Ka extends Zn{constructor(e,t,i,n){super(e,t,i,n)}}Ka.prototype.ValueTypeName="vector";class _N{constructor(e="",t=-1,i=[],n=f2){this.name=e,this.tracks=i,this.duration=t,this.blendMode=n,this.uuid=qn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],i=e.tracks,n=1/(e.fps||1);for(let o=0,a=i.length;o!==a;++o)t.push(yN(i[o]).scale(n));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],i=e.tracks,n={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=i.length;s!==o;++s)t.push(Zn.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(e,t,i,n){const s=t.length,o=[];for(let a=0;a<s;a++){let l=[],c=[];l.push((a+s-1)%s,a,(a+1)%s),c.push(0,1,0);const u=dN(l);l=nx(l,1,u),c=nx(c,1,u),!n&&l[0]===0&&(l.push(s),c.push(c[0])),o.push(new Ya(".morphTargetInfluences["+t[a].name+"]",l,c).scale(1/i))}return new this(e,-1,o)}static findByName(e,t){let i=e;if(!Array.isArray(e)){const n=e;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===t)return i[n];return null}static CreateClipsFromMorphTargetSequences(e,t,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,l=e.length;a<l;a++){const c=e[a],u=c.name.match(s);if(u&&u.length>1){const h=u[1];let d=n[h];d||(n[h]=d=[]),d.push(c)}}const o=[];for(const a in n)o.push(this.CreateFromMorphTargetSequence(a,n[a],t,i));return o}static parseAnimation(e,t){if(console.warn("THREE.AnimationClip: parseAnimation() is deprecated and will be removed with r185"),!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(h,d,f,p,_){if(f.length!==0){const g=[],m=[];nT(f,g,m,p),g.length!==0&&_.push(new h(d,g,m))}},n=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let l=e.length||-1;const c=e.hierarchy||[];for(let h=0;h<c.length;h++){const d=c[h].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let _=0;_<d[p].morphTargets.length;_++)f[d[p].morphTargets[_]]=-1;for(const _ in f){const g=[],m=[];for(let b=0;b!==d[p].morphTargets.length;++b){const y=d[p];g.push(y.time),m.push(y.morphTarget===_?1:0)}n.push(new Ya(".morphTargetInfluence["+_+"]",g,m))}l=f.length*o}else{const f=".bones["+t[h].name+"]";i(Ka,f+".position",d,"pos",n),i(ja,f+".quaternion",d,"rot",n),i(Ka,f+".scale",d,"scl",n)}}return n.length===0?null:new this(s,l,n,a)}resetDuration(){const e=this.tracks;let t=0;for(let i=0,n=e.length;i!==n;++i){const s=this.tracks[i];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function xN(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ya;case"vector":case"vector2":case"vector3":case"vector4":return Ka;case"color":return sT;case"quaternion":return ja;case"bool":case"boolean":return al;case"string":return ll}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function yN(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=xN(r.type);if(r.times===void 0){const t=[],i=[];nT(r.keys,t,i,"value"),r.times=t,r.values=i}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const Os={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class bN{constructor(e,t,i){const n=this;let s=!1,o=0,a=0,l;const c=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=i,this.abortController=new AbortController,this.itemStart=function(u){a++,s===!1&&n.onStart!==void 0&&n.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,n.onProgress!==void 0&&n.onProgress(u,o,a),o===a&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(u){n.onError!==void 0&&n.onError(u)},this.resolveURL=function(u){return l?l(u):u},this.setURLModifier=function(u){return l=u,this},this.addHandler=function(u,h){return c.push(u,h),this},this.removeHandler=function(u){const h=c.indexOf(u);return h!==-1&&c.splice(h,2),this},this.getHandler=function(u){for(let h=0,d=c.length;h<d;h+=2){const f=c[h],p=c[h+1];if(f.global&&(f.lastIndex=0),f.test(u))return p}return null},this.abort=function(){return this.abortController.abort(),this.abortController=new AbortController,this}}}const TN=new bN;class cl{constructor(e){this.manager=e!==void 0?e:TN,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const i=this;return new Promise(function(n,s){i.load(e,n,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}abort(){return this}}cl.DEFAULT_MATERIAL_NAME="__DEFAULT";const Rs={};class SN extends Error{constructor(e,t){super(e),this.response=t}}class rT extends cl{constructor(e){super(e),this.mimeType="",this.responseType="",this._abortController=new AbortController}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=Os.get(`file:${e}`);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Rs[e]!==void 0){Rs[e].push({onLoad:t,onProgress:i,onError:n});return}Rs[e]=[],Rs[e].push({onLoad:t,onProgress:i,onError:n});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin",signal:typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal}),a=this.mimeType,l=this.responseType;fetch(o).then(c=>{if(c.status===200||c.status===0){if(c.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||c.body===void 0||c.body.getReader===void 0)return c;const u=Rs[e],h=c.body.getReader(),d=c.headers.get("X-File-Size")||c.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let _=0;const g=new ReadableStream({start(m){b();function b(){h.read().then(({done:y,value:x})=>{if(y)m.close();else{_+=x.byteLength;const S=new ProgressEvent("progress",{lengthComputable:p,loaded:_,total:f});for(let w=0,M=u.length;w<M;w++){const R=u[w];R.onProgress&&R.onProgress(S)}m.enqueue(x),b()}},y=>{m.error(y)})}}});return new Response(g)}else throw new SN(`fetch for "${c.url}" responded with ${c.status}: ${c.statusText}`,c)}).then(c=>{switch(l){case"arraybuffer":return c.arrayBuffer();case"blob":return c.blob();case"document":return c.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return c.json();default:if(a==="")return c.text();{const h=/charset="?([^;"\s]*)"?/i.exec(a),d=h&&h[1]?h[1].toLowerCase():void 0,f=new TextDecoder(d);return c.arrayBuffer().then(p=>f.decode(p))}}}).then(c=>{Os.add(`file:${e}`,c);const u=Rs[e];delete Rs[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onLoad&&f.onLoad(c)}}).catch(c=>{const u=Rs[e];if(u===void 0)throw this.manager.itemError(e),c;delete Rs[e];for(let h=0,d=u.length;h<d;h++){const f=u[h];f.onError&&f.onError(c)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}const Ko=new WeakMap;class vN extends cl{constructor(e){super(e)}load(e,t,i,n){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Os.get(`image:${e}`);if(o!==void 0){if(o.complete===!0)s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0);else{let h=Ko.get(o);h===void 0&&(h=[],Ko.set(o,h)),h.push({onLoad:t,onError:n})}return o}const a=Dp("img");function l(){u(),t&&t(this);const h=Ko.get(this)||[];for(let d=0;d<h.length;d++){const f=h[d];f.onLoad&&f.onLoad(this)}Ko.delete(this),s.manager.itemEnd(e)}function c(h){u(),n&&n(h),Os.remove(`image:${e}`);const d=Ko.get(this)||[];for(let f=0;f<d.length;f++){const p=d[f];p.onError&&p.onError(h)}Ko.delete(this),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",l,!1),a.removeEventListener("error",c,!1)}return a.addEventListener("load",l,!1),a.addEventListener("error",c,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),Os.add(`image:${e}`,a),s.manager.itemStart(e),a.src=e,a}}class MN extends cl{constructor(e){super(e)}load(e,t,i,n){const s=new Yn,o=new vN(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},i,n),s}}class $m extends $t{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new si(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(t.object.target=this.target.uuid),t}}const Rf=new at,sx=new V,rx=new V;class Xm{constructor(e){this.camera=e,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ht(512,512),this.mapType=Xb,this.map=null,this.mapPass=null,this.matrix=new at,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new aN,this._frameExtents=new ht(1,1),this._viewportCount=1,this._viewports=[new Fi(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,i=this.matrix;sx.setFromMatrixPosition(e.matrixWorld),t.position.copy(sx),rx.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(rx),t.updateMatrixWorld(),Rf.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Rf,t.coordinateSystem,t.reversedDepth),t.reversedDepth?i.set(.5,0,0,.5,0,.5,0,.5,0,0,1,0,0,0,0,1):i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Rf)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.intensity=e.intensity,this.bias=e.bias,this.radius=e.radius,this.autoUpdate=e.autoUpdate,this.needsUpdate=e.needsUpdate,this.normalBias=e.normalBias,this.blurSamples=e.blurSamples,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.intensity!==1&&(e.intensity=this.intensity),this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class EN extends Xm{constructor(){super(new zm(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1,this.aspect=1}updateMatrices(e){const t=this.camera,i=Rc*2*e.angle*this.focus,n=this.mapSize.width/this.mapSize.height*this.aspect,s=e.distance||t.far;(i!==t.fov||n!==t.aspect||s!==t.far)&&(t.fov=i,t.aspect=n,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class AN extends $m{constructor(e,t,i=0,n=Math.PI/3,s=0,o=2){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy($t.DEFAULT_UP),this.updateMatrix(),this.target=new $t,this.distance=i,this.angle=n,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new EN}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const ox=new at,Rl=new V,Cf=new V;class wN extends Xm{constructor(){super(new zm(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ht(4,2),this._viewportCount=6,this._viewports=[new Fi(2,1,1,1),new Fi(0,1,1,1),new Fi(3,1,1,1),new Fi(1,1,1,1),new Fi(3,0,1,1),new Fi(1,0,1,1)],this._cubeDirections=[new V(1,0,0),new V(-1,0,0),new V(0,0,1),new V(0,0,-1),new V(0,1,0),new V(0,-1,0)],this._cubeUps=[new V(0,1,0),new V(0,1,0),new V(0,1,0),new V(0,1,0),new V(0,0,1),new V(0,0,-1)]}updateMatrices(e,t=0){const i=this.camera,n=this.matrix,s=e.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Rl.setFromMatrixPosition(e.matrixWorld),i.position.copy(Rl),Cf.copy(i.position),Cf.add(this._cubeDirections[t]),i.up.copy(this._cubeUps[t]),i.lookAt(Cf),i.updateMatrixWorld(),n.makeTranslation(-Rl.x,-Rl.y,-Rl.z),ox.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(ox,i.coordinateSystem,i.reversedDepth)}}class RN extends $m{constructor(e,t,i=0,n=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new wN}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class oT extends Qb{constructor(e=-1,t=1,i=1,n=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=i,this.bottom=n,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,i,n,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-e,o=i+e,a=n+t,l=n-t;if(this.view!==null&&this.view.enabled){const c=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=c*this.view.offsetX,o=s+c*this.view.width,a-=u*this.view.offsetY,l=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,l,this.near,this.far,this.coordinateSystem,this.reversedDepth),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}class CN extends Xm{constructor(){super(new oT(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class NN extends $m{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy($t.DEFAULT_UP),this.updateMatrix(),this.target=new $t,this.shadow=new CN}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class ec{static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}const Nf=new WeakMap;class PN extends cl{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"},this._abortController=new AbortController}setOptions(e){return this.options=e,this}load(e,t,i,n){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=Os.get(`image-bitmap:${e}`);if(o!==void 0){if(s.manager.itemStart(e),o.then){o.then(c=>{if(Nf.has(o)===!0)n&&n(Nf.get(o)),s.manager.itemError(e),s.manager.itemEnd(e);else return t&&t(c),s.manager.itemEnd(e),c});return}return setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,a.signal=typeof AbortSignal.any=="function"?AbortSignal.any([this._abortController.signal,this.manager.abortController.signal]):this._abortController.signal;const l=fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){return Os.add(`image-bitmap:${e}`,c),t&&t(c),s.manager.itemEnd(e),c}).catch(function(c){n&&n(c),Nf.set(l,c),Os.remove(`image-bitmap:${e}`),s.manager.itemError(e),s.manager.itemEnd(e)});Os.add(`image-bitmap:${e}`,l),s.manager.itemStart(e)}abort(){return this._abortController.abort(),this._abortController=new AbortController,this}}const qm="\\[\\]\\.:\\/",DN=new RegExp("["+qm+"]","g"),Ym="[^"+qm+"]",LN="[^"+qm.replace("\\.","")+"]",IN=/((?:WC+[\/:])*)/.source.replace("WC",Ym),FN=/(WCOD+)?/.source.replace("WCOD",LN),UN=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ym),BN=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ym),ON=new RegExp("^"+IN+FN+UN+BN+"$"),kN=["material","materials","bones","map"];class zN{constructor(e,t,i){const n=i||yt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,n)}getValue(e,t){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(e,t)}setValue(e,t){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,i=e.length;t!==i;++t)e[t].unbind()}}class yt{constructor(e,t,i){this.path=t,this.parsedPath=i||yt.parseTrackName(t),this.node=yt.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,i){return e&&e.isAnimationObjectGroup?new yt.Composite(e,t,i):new yt(e,t,i)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(DN,"")}static parseTrackName(e){const t=ON.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const i={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);kN.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return i}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const i=e.skeleton.getBoneByName(t);if(i!==void 0)return i}if(e.children){const i=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const l=i(a.children);if(l)return l}return null},n=i(e.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)e[t++]=i[n]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,i=t.objectName,n=t.propertyName;let s=t.propertyIndex;if(e||(e=yt.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let c=t.objectIndex;switch(i){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===c){c=u;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[i]}if(c!==void 0){if(e[c]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[c]}}const o=e[n];if(o===void 0){const c=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+c+"."+n+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.isMaterial===!0?a=this.Versioning.NeedsUpdate:e.isObject3D===!0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let l=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}l=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(l=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(l=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[l],this.setValue=this.SetterByBindingTypeAndVersioning[l][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}yt.Composite=zN;yt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};yt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};yt.prototype.GetterByBindingType=[yt.prototype._getValue_direct,yt.prototype._getValue_array,yt.prototype._getValue_arrayElement,yt.prototype._getValue_toArray];yt.prototype.SetterByBindingTypeAndVersioning=[[yt.prototype._setValue_direct,yt.prototype._setValue_direct_setNeedsUpdate,yt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_array,yt.prototype._setValue_array_setNeedsUpdate,yt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_arrayElement,yt.prototype._setValue_arrayElement_setNeedsUpdate,yt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[yt.prototype._setValue_fromArray,yt.prototype._setValue_fromArray_setNeedsUpdate,yt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class ax{constructor(e=1,t=0,i=0){this.radius=e,this.phi=t,this.theta=i}set(e,t,i){return this.radius=e,this.phi=t,this.theta=i,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=tt(this.phi,1e-6,Math.PI-1e-6),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,i){return this.radius=Math.sqrt(e*e+t*t+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,i),this.phi=Math.acos(tt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class GN extends $c{constructor(e,t=null){super(),this.object=e,this.domElement=t,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(e){if(e===void 0){console.warn("THREE.Controls: connect() now requires an element.");return}this.domElement!==null&&this.disconnect(),this.domElement=e}disconnect(){}dispose(){}update(){}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Wb}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Wb);function lx(r,e){if(e===p2)return console.warn("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Geometry already defined as triangles."),r;if(e===Cp||e===Yb){let t=r.getIndex();if(t===null){const o=[],a=r.getAttribute("position");if(a!==void 0){for(let l=0;l<a.count;l++)o.push(l);r.setIndex(o),t=r.getIndex()}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Undefined position attribute. Processing not possible."),r}const i=t.count-2,n=[];if(e===Cp)for(let o=1;o<=i;o++)n.push(t.getX(0)),n.push(t.getX(o)),n.push(t.getX(o+1));else for(let o=0;o<i;o++)o%2===0?(n.push(t.getX(o)),n.push(t.getX(o+1)),n.push(t.getX(o+2))):(n.push(t.getX(o+2)),n.push(t.getX(o+1)),n.push(t.getX(o)));n.length/3!==i&&console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unable to generate correct amount of triangles.");const s=r.clone();return s.setIndex(n),s.clearGroups(),s}else return console.error("THREE.BufferGeometryUtils.toTrianglesDrawMode(): Unknown draw mode:",e),r}class VN extends cl{constructor(e){super(e),this.dracoLoader=null,this.ktx2Loader=null,this.meshoptDecoder=null,this.pluginCallbacks=[],this.register(function(t){return new qN(t)}),this.register(function(t){return new YN(t)}),this.register(function(t){return new nP(t)}),this.register(function(t){return new sP(t)}),this.register(function(t){return new rP(t)}),this.register(function(t){return new KN(t)}),this.register(function(t){return new ZN(t)}),this.register(function(t){return new QN(t)}),this.register(function(t){return new JN(t)}),this.register(function(t){return new XN(t)}),this.register(function(t){return new eP(t)}),this.register(function(t){return new jN(t)}),this.register(function(t){return new iP(t)}),this.register(function(t){return new tP(t)}),this.register(function(t){return new WN(t)}),this.register(function(t){return new oP(t)}),this.register(function(t){return new aP(t)})}load(e,t,i,n){const s=this;let o;if(this.resourcePath!=="")o=this.resourcePath;else if(this.path!==""){const c=ec.extractUrlBase(e);o=ec.resolveURL(c,this.path)}else o=ec.extractUrlBase(e);this.manager.itemStart(e);const a=function(c){n?n(c):console.error(c),s.manager.itemError(e),s.manager.itemEnd(e)},l=new rT(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer"),l.setRequestHeader(this.requestHeader),l.setWithCredentials(this.withCredentials),l.load(e,function(c){try{s.parse(c,o,function(u){t(u),s.manager.itemEnd(e)},a)}catch(u){a(u)}},i,a)}setDRACOLoader(e){return this.dracoLoader=e,this}setKTX2Loader(e){return this.ktx2Loader=e,this}setMeshoptDecoder(e){return this.meshoptDecoder=e,this}register(e){return this.pluginCallbacks.indexOf(e)===-1&&this.pluginCallbacks.push(e),this}unregister(e){return this.pluginCallbacks.indexOf(e)!==-1&&this.pluginCallbacks.splice(this.pluginCallbacks.indexOf(e),1),this}parse(e,t,i,n){let s;const o={},a={},l=new TextDecoder;if(typeof e=="string")s=JSON.parse(e);else if(e instanceof ArrayBuffer)if(l.decode(new Uint8Array(e,0,4))===aT){try{o[rt.KHR_BINARY_GLTF]=new lP(e)}catch(h){n&&n(h);return}s=JSON.parse(o[rt.KHR_BINARY_GLTF].content)}else s=JSON.parse(l.decode(e));else s=e;if(s.asset===void 0||s.asset.version[0]<2){n&&n(new Error("THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported."));return}const c=new TP(s,{path:t||this.resourcePath||"",crossOrigin:this.crossOrigin,requestHeader:this.requestHeader,manager:this.manager,ktx2Loader:this.ktx2Loader,meshoptDecoder:this.meshoptDecoder});c.fileLoader.setRequestHeader(this.requestHeader);for(let u=0;u<this.pluginCallbacks.length;u++){const h=this.pluginCallbacks[u](c);h.name||console.error("THREE.GLTFLoader: Invalid plugin found: missing name"),a[h.name]=h,o[h.name]=!0}if(s.extensionsUsed)for(let u=0;u<s.extensionsUsed.length;++u){const h=s.extensionsUsed[u],d=s.extensionsRequired||[];switch(h){case rt.KHR_MATERIALS_UNLIT:o[h]=new $N;break;case rt.KHR_DRACO_MESH_COMPRESSION:o[h]=new cP(s,this.dracoLoader);break;case rt.KHR_TEXTURE_TRANSFORM:o[h]=new uP;break;case rt.KHR_MESH_QUANTIZATION:o[h]=new hP;break;default:d.indexOf(h)>=0&&a[h]===void 0&&console.warn('THREE.GLTFLoader: Unknown extension "'+h+'".')}}c.setExtensions(o),c.setPlugins(a),c.parse(i,n)}parseAsync(e,t){const i=this;return new Promise(function(n,s){i.parse(e,t,n,s)})}}function HN(){let r={};return{get:function(e){return r[e]},add:function(e,t){r[e]=t},remove:function(e){delete r[e]},removeAll:function(){r={}}}}const rt={KHR_BINARY_GLTF:"KHR_binary_glTF",KHR_DRACO_MESH_COMPRESSION:"KHR_draco_mesh_compression",KHR_LIGHTS_PUNCTUAL:"KHR_lights_punctual",KHR_MATERIALS_CLEARCOAT:"KHR_materials_clearcoat",KHR_MATERIALS_DISPERSION:"KHR_materials_dispersion",KHR_MATERIALS_IOR:"KHR_materials_ior",KHR_MATERIALS_SHEEN:"KHR_materials_sheen",KHR_MATERIALS_SPECULAR:"KHR_materials_specular",KHR_MATERIALS_TRANSMISSION:"KHR_materials_transmission",KHR_MATERIALS_IRIDESCENCE:"KHR_materials_iridescence",KHR_MATERIALS_ANISOTROPY:"KHR_materials_anisotropy",KHR_MATERIALS_UNLIT:"KHR_materials_unlit",KHR_MATERIALS_VOLUME:"KHR_materials_volume",KHR_TEXTURE_BASISU:"KHR_texture_basisu",KHR_TEXTURE_TRANSFORM:"KHR_texture_transform",KHR_MESH_QUANTIZATION:"KHR_mesh_quantization",KHR_MATERIALS_EMISSIVE_STRENGTH:"KHR_materials_emissive_strength",EXT_MATERIALS_BUMP:"EXT_materials_bump",EXT_TEXTURE_WEBP:"EXT_texture_webp",EXT_TEXTURE_AVIF:"EXT_texture_avif",EXT_MESHOPT_COMPRESSION:"EXT_meshopt_compression",EXT_MESH_GPU_INSTANCING:"EXT_mesh_gpu_instancing"};class WN{constructor(e){this.parser=e,this.name=rt.KHR_LIGHTS_PUNCTUAL,this.cache={refs:{},uses:{}}}_markDefs(){const e=this.parser,t=this.parser.json.nodes||[];for(let i=0,n=t.length;i<n;i++){const s=t[i];s.extensions&&s.extensions[this.name]&&s.extensions[this.name].light!==void 0&&e._addNodeRef(this.cache,s.extensions[this.name].light)}}_loadLight(e){const t=this.parser,i="light:"+e;let n=t.cache.get(i);if(n)return n;const s=t.json,l=((s.extensions&&s.extensions[this.name]||{}).lights||[])[e];let c;const u=new si(16777215);l.color!==void 0&&u.setRGB(l.color[0],l.color[1],l.color[2],Kn);const h=l.range!==void 0?l.range:0;switch(l.type){case"directional":c=new NN(u),c.target.position.set(0,0,-1),c.add(c.target);break;case"point":c=new RN(u),c.distance=h;break;case"spot":c=new AN(u),c.distance=h,l.spot=l.spot||{},l.spot.innerConeAngle=l.spot.innerConeAngle!==void 0?l.spot.innerConeAngle:0,l.spot.outerConeAngle=l.spot.outerConeAngle!==void 0?l.spot.outerConeAngle:Math.PI/4,c.angle=l.spot.outerConeAngle,c.penumbra=1-l.spot.innerConeAngle/l.spot.outerConeAngle,c.target.position.set(0,0,-1),c.add(c.target);break;default:throw new Error("THREE.GLTFLoader: Unexpected light type: "+l.type)}return c.position.set(0,0,0),Ns(c,l),l.intensity!==void 0&&(c.intensity=l.intensity),c.name=t.createUniqueName(l.name||"light_"+e),n=Promise.resolve(c),t.cache.add(i,n),n}getDependency(e,t){if(e==="light")return this._loadLight(t)}createNodeAttachment(e){const t=this,i=this.parser,s=i.json.nodes[e],a=(s.extensions&&s.extensions[this.name]||{}).light;return a===void 0?null:this._loadLight(a).then(function(l){return i._getNodeRef(t.cache,a,l)})}}class $N{constructor(){this.name=rt.KHR_MATERIALS_UNLIT}getMaterialType(){return oa}extendParams(e,t,i){const n=[];e.color=new si(1,1,1),e.opacity=1;const s=t.pbrMetallicRoughness;if(s){if(Array.isArray(s.baseColorFactor)){const o=s.baseColorFactor;e.color.setRGB(o[0],o[1],o[2],Kn),e.opacity=o[3]}s.baseColorTexture!==void 0&&n.push(i.assignTexture(e,"map",s.baseColorTexture,Mi))}return Promise.all(n)}}class XN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_EMISSIVE_STRENGTH}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=n.extensions[this.name].emissiveStrength;return s!==void 0&&(t.emissiveIntensity=s),Promise.resolve()}}class qN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_CLEARCOAT}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];if(o.clearcoatFactor!==void 0&&(t.clearcoat=o.clearcoatFactor),o.clearcoatTexture!==void 0&&s.push(i.assignTexture(t,"clearcoatMap",o.clearcoatTexture)),o.clearcoatRoughnessFactor!==void 0&&(t.clearcoatRoughness=o.clearcoatRoughnessFactor),o.clearcoatRoughnessTexture!==void 0&&s.push(i.assignTexture(t,"clearcoatRoughnessMap",o.clearcoatRoughnessTexture)),o.clearcoatNormalTexture!==void 0&&(s.push(i.assignTexture(t,"clearcoatNormalMap",o.clearcoatNormalTexture)),o.clearcoatNormalTexture.scale!==void 0)){const a=o.clearcoatNormalTexture.scale;t.clearcoatNormalScale=new ht(a,a)}return Promise.all(s)}}class YN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_DISPERSION}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=n.extensions[this.name];return t.dispersion=s.dispersion!==void 0?s.dispersion:0,Promise.resolve()}}class jN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_IRIDESCENCE}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];return o.iridescenceFactor!==void 0&&(t.iridescence=o.iridescenceFactor),o.iridescenceTexture!==void 0&&s.push(i.assignTexture(t,"iridescenceMap",o.iridescenceTexture)),o.iridescenceIor!==void 0&&(t.iridescenceIOR=o.iridescenceIor),t.iridescenceThicknessRange===void 0&&(t.iridescenceThicknessRange=[100,400]),o.iridescenceThicknessMinimum!==void 0&&(t.iridescenceThicknessRange[0]=o.iridescenceThicknessMinimum),o.iridescenceThicknessMaximum!==void 0&&(t.iridescenceThicknessRange[1]=o.iridescenceThicknessMaximum),o.iridescenceThicknessTexture!==void 0&&s.push(i.assignTexture(t,"iridescenceThicknessMap",o.iridescenceThicknessTexture)),Promise.all(s)}}class KN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_SHEEN}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[];t.sheenColor=new si(0,0,0),t.sheenRoughness=0,t.sheen=1;const o=n.extensions[this.name];if(o.sheenColorFactor!==void 0){const a=o.sheenColorFactor;t.sheenColor.setRGB(a[0],a[1],a[2],Kn)}return o.sheenRoughnessFactor!==void 0&&(t.sheenRoughness=o.sheenRoughnessFactor),o.sheenColorTexture!==void 0&&s.push(i.assignTexture(t,"sheenColorMap",o.sheenColorTexture,Mi)),o.sheenRoughnessTexture!==void 0&&s.push(i.assignTexture(t,"sheenRoughnessMap",o.sheenRoughnessTexture)),Promise.all(s)}}class ZN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_TRANSMISSION}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];return o.transmissionFactor!==void 0&&(t.transmission=o.transmissionFactor),o.transmissionTexture!==void 0&&s.push(i.assignTexture(t,"transmissionMap",o.transmissionTexture)),Promise.all(s)}}class QN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_VOLUME}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];t.thickness=o.thicknessFactor!==void 0?o.thicknessFactor:0,o.thicknessTexture!==void 0&&s.push(i.assignTexture(t,"thicknessMap",o.thicknessTexture)),t.attenuationDistance=o.attenuationDistance||1/0;const a=o.attenuationColor||[1,1,1];return t.attenuationColor=new si().setRGB(a[0],a[1],a[2],Kn),Promise.all(s)}}class JN{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_IOR}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const n=this.parser.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=n.extensions[this.name];return t.ior=s.ior!==void 0?s.ior:1.5,Promise.resolve()}}class eP{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_SPECULAR}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];t.specularIntensity=o.specularFactor!==void 0?o.specularFactor:1,o.specularTexture!==void 0&&s.push(i.assignTexture(t,"specularIntensityMap",o.specularTexture));const a=o.specularColorFactor||[1,1,1];return t.specularColor=new si().setRGB(a[0],a[1],a[2],Kn),o.specularColorTexture!==void 0&&s.push(i.assignTexture(t,"specularColorMap",o.specularColorTexture,Mi)),Promise.all(s)}}class tP{constructor(e){this.parser=e,this.name=rt.EXT_MATERIALS_BUMP}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];return t.bumpScale=o.bumpFactor!==void 0?o.bumpFactor:1,o.bumpTexture!==void 0&&s.push(i.assignTexture(t,"bumpMap",o.bumpTexture)),Promise.all(s)}}class iP{constructor(e){this.parser=e,this.name=rt.KHR_MATERIALS_ANISOTROPY}getMaterialType(e){const i=this.parser.json.materials[e];return!i.extensions||!i.extensions[this.name]?null:ms}extendMaterialParams(e,t){const i=this.parser,n=i.json.materials[e];if(!n.extensions||!n.extensions[this.name])return Promise.resolve();const s=[],o=n.extensions[this.name];return o.anisotropyStrength!==void 0&&(t.anisotropy=o.anisotropyStrength),o.anisotropyRotation!==void 0&&(t.anisotropyRotation=o.anisotropyRotation),o.anisotropyTexture!==void 0&&s.push(i.assignTexture(t,"anisotropyMap",o.anisotropyTexture)),Promise.all(s)}}class nP{constructor(e){this.parser=e,this.name=rt.KHR_TEXTURE_BASISU}loadTexture(e){const t=this.parser,i=t.json,n=i.textures[e];if(!n.extensions||!n.extensions[this.name])return null;const s=n.extensions[this.name],o=t.options.ktx2Loader;if(!o){if(i.extensionsRequired&&i.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setKTX2Loader must be called before loading KTX2 textures");return null}return t.loadTextureImage(e,s.source,o)}}class sP{constructor(e){this.parser=e,this.name=rt.EXT_TEXTURE_WEBP}loadTexture(e){const t=this.name,i=this.parser,n=i.json,s=n.textures[e];if(!s.extensions||!s.extensions[t])return null;const o=s.extensions[t],a=n.images[o.source];let l=i.textureLoader;if(a.uri){const c=i.options.manager.getHandler(a.uri);c!==null&&(l=c)}return i.loadTextureImage(e,o.source,l)}}class rP{constructor(e){this.parser=e,this.name=rt.EXT_TEXTURE_AVIF}loadTexture(e){const t=this.name,i=this.parser,n=i.json,s=n.textures[e];if(!s.extensions||!s.extensions[t])return null;const o=s.extensions[t],a=n.images[o.source];let l=i.textureLoader;if(a.uri){const c=i.options.manager.getHandler(a.uri);c!==null&&(l=c)}return i.loadTextureImage(e,o.source,l)}}class oP{constructor(e){this.name=rt.EXT_MESHOPT_COMPRESSION,this.parser=e}loadBufferView(e){const t=this.parser.json,i=t.bufferViews[e];if(i.extensions&&i.extensions[this.name]){const n=i.extensions[this.name],s=this.parser.getDependency("buffer",n.buffer),o=this.parser.options.meshoptDecoder;if(!o||!o.supported){if(t.extensionsRequired&&t.extensionsRequired.indexOf(this.name)>=0)throw new Error("THREE.GLTFLoader: setMeshoptDecoder must be called before loading compressed files");return null}return s.then(function(a){const l=n.byteOffset||0,c=n.byteLength||0,u=n.count,h=n.byteStride,d=new Uint8Array(a,l,c);return o.decodeGltfBufferAsync?o.decodeGltfBufferAsync(u,h,d,n.mode,n.filter).then(function(f){return f.buffer}):o.ready.then(function(){const f=new ArrayBuffer(u*h);return o.decodeGltfBuffer(new Uint8Array(f),u,h,d,n.mode,n.filter),f})})}else return null}}class aP{constructor(e){this.name=rt.EXT_MESH_GPU_INSTANCING,this.parser=e}createNodeMesh(e){const t=this.parser.json,i=t.nodes[e];if(!i.extensions||!i.extensions[this.name]||i.mesh===void 0)return null;const n=t.meshes[i.mesh];for(const c of n.primitives)if(c.mode!==Mn.TRIANGLES&&c.mode!==Mn.TRIANGLE_STRIP&&c.mode!==Mn.TRIANGLE_FAN&&c.mode!==void 0)return null;const o=i.extensions[this.name].attributes,a=[],l={};for(const c in o)a.push(this.parser.getDependency("accessor",o[c]).then(u=>(l[c]=u,l[c])));return a.length<1?null:(a.push(this.parser.createNodeMesh(e)),Promise.all(a).then(c=>{const u=c.pop(),h=u.isGroup?u.children:[u],d=c[0].count,f=[];for(const p of h){const _=new at,g=new V,m=new us,b=new V(1,1,1),y=new nN(p.geometry,p.material,d);for(let x=0;x<d;x++)l.TRANSLATION&&g.fromBufferAttribute(l.TRANSLATION,x),l.ROTATION&&m.fromBufferAttribute(l.ROTATION,x),l.SCALE&&b.fromBufferAttribute(l.SCALE,x),y.setMatrixAt(x,_.compose(g,m,b));for(const x in l)if(x==="_COLOR_0"){const S=l[x];y.instanceColor=new Lp(S.array,S.itemSize,S.normalized)}else x!=="TRANSLATION"&&x!=="ROTATION"&&x!=="SCALE"&&p.geometry.setAttribute(x,l[x]);$t.prototype.copy.call(y,p),this.parser.assignFinalMaterial(y),f.push(y)}return u.isGroup?(u.clear(),u.add(...f),u):f[0]}))}}const aT="glTF",Cl=12,cx={JSON:1313821514,BIN:5130562};class lP{constructor(e){this.name=rt.KHR_BINARY_GLTF,this.content=null,this.body=null;const t=new DataView(e,0,Cl),i=new TextDecoder;if(this.header={magic:i.decode(new Uint8Array(e.slice(0,4))),version:t.getUint32(4,!0),length:t.getUint32(8,!0)},this.header.magic!==aT)throw new Error("THREE.GLTFLoader: Unsupported glTF-Binary header.");if(this.header.version<2)throw new Error("THREE.GLTFLoader: Legacy binary file detected.");const n=this.header.length-Cl,s=new DataView(e,Cl);let o=0;for(;o<n;){const a=s.getUint32(o,!0);o+=4;const l=s.getUint32(o,!0);if(o+=4,l===cx.JSON){const c=new Uint8Array(e,Cl+o,a);this.content=i.decode(c)}else if(l===cx.BIN){const c=Cl+o;this.body=e.slice(c,c+a)}o+=a}if(this.content===null)throw new Error("THREE.GLTFLoader: JSON content not found.")}}class cP{constructor(e,t){if(!t)throw new Error("THREE.GLTFLoader: No DRACOLoader instance provided.");this.name=rt.KHR_DRACO_MESH_COMPRESSION,this.json=e,this.dracoLoader=t,this.dracoLoader.preload()}decodePrimitive(e,t){const i=this.json,n=this.dracoLoader,s=e.extensions[this.name].bufferView,o=e.extensions[this.name].attributes,a={},l={},c={};for(const u in o){const h=Fp[u]||u.toLowerCase();a[h]=o[u]}for(const u in e.attributes){const h=Fp[u]||u.toLowerCase();if(o[u]!==void 0){const d=i.accessors[e.attributes[u]],f=ma[d.componentType];c[h]=f.name,l[h]=d.normalized===!0}}return t.getDependency("bufferView",s).then(function(u){return new Promise(function(h,d){n.decodeDracoFile(u,function(f){for(const p in f.attributes){const _=f.attributes[p],g=l[p];g!==void 0&&(_.normalized=g)}h(f)},a,c,Kn,d)})})}}class uP{constructor(){this.name=rt.KHR_TEXTURE_TRANSFORM}extendTexture(e,t){return(t.texCoord===void 0||t.texCoord===e.channel)&&t.offset===void 0&&t.rotation===void 0&&t.scale===void 0||(e=e.clone(),t.texCoord!==void 0&&(e.channel=t.texCoord),t.offset!==void 0&&e.offset.fromArray(t.offset),t.rotation!==void 0&&(e.rotation=t.rotation),t.scale!==void 0&&e.repeat.fromArray(t.scale),e.needsUpdate=!0),e}}class hP{constructor(){this.name=rt.KHR_MESH_QUANTIZATION}}class lT extends qc{constructor(e,t,i,n){super(e,t,i,n)}copySampleValue_(e){const t=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=e*n*3+n;for(let o=0;o!==n;o++)t[o]=i[s+o];return t}interpolate_(e,t,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,l=a*2,c=a*3,u=n-t,h=(i-t)/u,d=h*h,f=d*h,p=e*c,_=p-c,g=-2*f+3*d,m=f-d,b=1-g,y=m-d+h;for(let x=0;x!==a;x++){const S=o[_+x+a],w=o[_+x+l]*u,M=o[p+x+a],R=o[p+x]*u;s[x]=b*S+y*w+g*M+m*R}return s}}const dP=new us;class fP extends lT{interpolate_(e,t,i,n){const s=super.interpolate_(e,t,i,n);return dP.fromArray(s).normalize().toArray(s),s}}const Mn={POINTS:0,LINES:1,LINE_LOOP:2,LINE_STRIP:3,TRIANGLES:4,TRIANGLE_STRIP:5,TRIANGLE_FAN:6},ma={5120:Int8Array,5121:Uint8Array,5122:Int16Array,5123:Uint16Array,5125:Uint32Array,5126:Float32Array},ux={9728:Dh,9729:Lh,9984:c2,9985:h2,9986:u2,9987:Um},hx={33071:$l,33648:Rp,10497:Ec},Pf={SCALAR:1,VEC2:2,VEC3:3,VEC4:4,MAT2:4,MAT3:9,MAT4:16},Fp={POSITION:"position",NORMAL:"normal",TANGENT:"tangent",TEXCOORD_0:"uv",TEXCOORD_1:"uv1",TEXCOORD_2:"uv2",TEXCOORD_3:"uv3",COLOR_0:"color",WEIGHTS_0:"skinWeight",JOINTS_0:"skinIndex"},ar={scale:"scale",translation:"position",rotation:"quaternion",weights:"morphTargetInfluences"},pP={CUBICSPLINE:void 0,LINEAR:wc,STEP:Ac},Df={OPAQUE:"OPAQUE",MASK:"MASK",BLEND:"BLEND"};function mP(r){return r.DefaultMaterial===void 0&&(r.DefaultMaterial=new Wm({color:16777215,emissive:0,metalness:1,roughness:1,transparent:!1,depthTest:!0,side:Ph})),r.DefaultMaterial}function Br(r,e,t){for(const i in t.extensions)r[i]===void 0&&(e.userData.gltfExtensions=e.userData.gltfExtensions||{},e.userData.gltfExtensions[i]=t.extensions[i])}function Ns(r,e){e.extras!==void 0&&(typeof e.extras=="object"?Object.assign(r.userData,e.extras):console.warn("THREE.GLTFLoader: Ignoring primitive type .extras, "+e.extras))}function gP(r,e,t){let i=!1,n=!1,s=!1;for(let c=0,u=e.length;c<u;c++){const h=e[c];if(h.POSITION!==void 0&&(i=!0),h.NORMAL!==void 0&&(n=!0),h.COLOR_0!==void 0&&(s=!0),i&&n&&s)break}if(!i&&!n&&!s)return Promise.resolve(r);const o=[],a=[],l=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];if(i){const d=h.POSITION!==void 0?t.getDependency("accessor",h.POSITION):r.attributes.position;o.push(d)}if(n){const d=h.NORMAL!==void 0?t.getDependency("accessor",h.NORMAL):r.attributes.normal;a.push(d)}if(s){const d=h.COLOR_0!==void 0?t.getDependency("accessor",h.COLOR_0):r.attributes.color;l.push(d)}}return Promise.all([Promise.all(o),Promise.all(a),Promise.all(l)]).then(function(c){const u=c[0],h=c[1],d=c[2];return i&&(r.morphAttributes.position=u),n&&(r.morphAttributes.normal=h),s&&(r.morphAttributes.color=d),r.morphTargetsRelative=!0,r})}function _P(r,e){if(r.updateMorphTargets(),e.weights!==void 0)for(let t=0,i=e.weights.length;t<i;t++)r.morphTargetInfluences[t]=e.weights[t];if(e.extras&&Array.isArray(e.extras.targetNames)){const t=e.extras.targetNames;if(r.morphTargetInfluences.length===t.length){r.morphTargetDictionary={};for(let i=0,n=t.length;i<n;i++)r.morphTargetDictionary[t[i]]=i}else console.warn("THREE.GLTFLoader: Invalid extras.targetNames length. Ignoring names.")}}function xP(r){let e;const t=r.extensions&&r.extensions[rt.KHR_DRACO_MESH_COMPRESSION];if(t?e="draco:"+t.bufferView+":"+t.indices+":"+Lf(t.attributes):e=r.indices+":"+Lf(r.attributes)+":"+r.mode,r.targets!==void 0)for(let i=0,n=r.targets.length;i<n;i++)e+=":"+Lf(r.targets[i]);return e}function Lf(r){let e="";const t=Object.keys(r).sort();for(let i=0,n=t.length;i<n;i++)e+=t[i]+":"+r[t[i]]+";";return e}function Up(r){switch(r){case Int8Array:return 1/127;case Uint8Array:return 1/255;case Int16Array:return 1/32767;case Uint16Array:return 1/65535;default:throw new Error("THREE.GLTFLoader: Unsupported normalized accessor component type.")}}function yP(r){return r.search(/\.jpe?g($|\?)/i)>0||r.search(/^data\:image\/jpeg/)===0?"image/jpeg":r.search(/\.webp($|\?)/i)>0||r.search(/^data\:image\/webp/)===0?"image/webp":r.search(/\.ktx2($|\?)/i)>0||r.search(/^data\:image\/ktx2/)===0?"image/ktx2":"image/png"}const bP=new at;class TP{constructor(e={},t={}){this.json=e,this.extensions={},this.plugins={},this.options=t,this.cache=new HN,this.associations=new Map,this.primitiveCache={},this.nodeCache={},this.meshCache={refs:{},uses:{}},this.cameraCache={refs:{},uses:{}},this.lightCache={refs:{},uses:{}},this.sourceCache={},this.textureCache={},this.nodeNamesUsed={};let i=!1,n=-1,s=!1,o=-1;if(typeof navigator<"u"){const a=navigator.userAgent;i=/^((?!chrome|android).)*safari/i.test(a)===!0;const l=a.match(/Version\/(\d+)/);n=i&&l?parseInt(l[1],10):-1,s=a.indexOf("Firefox")>-1,o=s?a.match(/Firefox\/([0-9]+)\./)[1]:-1}typeof createImageBitmap>"u"||i&&n<17||s&&o<98?this.textureLoader=new MN(this.options.manager):this.textureLoader=new PN(this.options.manager),this.textureLoader.setCrossOrigin(this.options.crossOrigin),this.textureLoader.setRequestHeader(this.options.requestHeader),this.fileLoader=new rT(this.options.manager),this.fileLoader.setResponseType("arraybuffer"),this.options.crossOrigin==="use-credentials"&&this.fileLoader.setWithCredentials(!0)}setExtensions(e){this.extensions=e}setPlugins(e){this.plugins=e}parse(e,t){const i=this,n=this.json,s=this.extensions;this.cache.removeAll(),this.nodeCache={},this._invokeAll(function(o){return o._markDefs&&o._markDefs()}),Promise.all(this._invokeAll(function(o){return o.beforeRoot&&o.beforeRoot()})).then(function(){return Promise.all([i.getDependencies("scene"),i.getDependencies("animation"),i.getDependencies("camera")])}).then(function(o){const a={scene:o[0][n.scene||0],scenes:o[0],animations:o[1],cameras:o[2],asset:n.asset,parser:i,userData:{}};return Br(s,a,n),Ns(a,n),Promise.all(i._invokeAll(function(l){return l.afterRoot&&l.afterRoot(a)})).then(function(){for(const l of a.scenes)l.updateMatrixWorld();e(a)})}).catch(t)}_markDefs(){const e=this.json.nodes||[],t=this.json.skins||[],i=this.json.meshes||[];for(let n=0,s=t.length;n<s;n++){const o=t[n].joints;for(let a=0,l=o.length;a<l;a++)e[o[a]].isBone=!0}for(let n=0,s=e.length;n<s;n++){const o=e[n];o.mesh!==void 0&&(this._addNodeRef(this.meshCache,o.mesh),o.skin!==void 0&&(i[o.mesh].isSkinnedMesh=!0)),o.camera!==void 0&&this._addNodeRef(this.cameraCache,o.camera)}}_addNodeRef(e,t){t!==void 0&&(e.refs[t]===void 0&&(e.refs[t]=e.uses[t]=0),e.refs[t]++)}_getNodeRef(e,t,i){if(e.refs[t]<=1)return i;const n=i.clone(),s=(o,a)=>{const l=this.associations.get(o);l!=null&&this.associations.set(a,l);for(const[c,u]of o.children.entries())s(u,a.children[c])};return s(i,n),n.name+="_instance_"+e.uses[t]++,n}_invokeOne(e){const t=Object.values(this.plugins);t.push(this);for(let i=0;i<t.length;i++){const n=e(t[i]);if(n)return n}return null}_invokeAll(e){const t=Object.values(this.plugins);t.unshift(this);const i=[];for(let n=0;n<t.length;n++){const s=e(t[n]);s&&i.push(s)}return i}getDependency(e,t){const i=e+":"+t;let n=this.cache.get(i);if(!n){switch(e){case"scene":n=this.loadScene(t);break;case"node":n=this._invokeOne(function(s){return s.loadNode&&s.loadNode(t)});break;case"mesh":n=this._invokeOne(function(s){return s.loadMesh&&s.loadMesh(t)});break;case"accessor":n=this.loadAccessor(t);break;case"bufferView":n=this._invokeOne(function(s){return s.loadBufferView&&s.loadBufferView(t)});break;case"buffer":n=this.loadBuffer(t);break;case"material":n=this._invokeOne(function(s){return s.loadMaterial&&s.loadMaterial(t)});break;case"texture":n=this._invokeOne(function(s){return s.loadTexture&&s.loadTexture(t)});break;case"skin":n=this.loadSkin(t);break;case"animation":n=this._invokeOne(function(s){return s.loadAnimation&&s.loadAnimation(t)});break;case"camera":n=this.loadCamera(t);break;default:if(n=this._invokeOne(function(s){return s!=this&&s.getDependency&&s.getDependency(e,t)}),!n)throw new Error("Unknown type: "+e);break}this.cache.add(i,n)}return n}getDependencies(e){let t=this.cache.get(e);if(!t){const i=this,n=this.json[e+(e==="mesh"?"es":"s")]||[];t=Promise.all(n.map(function(s,o){return i.getDependency(e,o)})),this.cache.add(e,t)}return t}loadBuffer(e){const t=this.json.buffers[e],i=this.fileLoader;if(t.type&&t.type!=="arraybuffer")throw new Error("THREE.GLTFLoader: "+t.type+" buffer type is not supported.");if(t.uri===void 0&&e===0)return Promise.resolve(this.extensions[rt.KHR_BINARY_GLTF].body);const n=this.options;return new Promise(function(s,o){i.load(ec.resolveURL(t.uri,n.path),s,void 0,function(){o(new Error('THREE.GLTFLoader: Failed to load buffer "'+t.uri+'".'))})})}loadBufferView(e){const t=this.json.bufferViews[e];return this.getDependency("buffer",t.buffer).then(function(i){const n=t.byteLength||0,s=t.byteOffset||0;return i.slice(s,s+n)})}loadAccessor(e){const t=this,i=this.json,n=this.json.accessors[e];if(n.bufferView===void 0&&n.sparse===void 0){const o=Pf[n.type],a=ma[n.componentType],l=n.normalized===!0,c=new a(n.count*o);return Promise.resolve(new jn(c,o,l))}const s=[];return n.bufferView!==void 0?s.push(this.getDependency("bufferView",n.bufferView)):s.push(null),n.sparse!==void 0&&(s.push(this.getDependency("bufferView",n.sparse.indices.bufferView)),s.push(this.getDependency("bufferView",n.sparse.values.bufferView))),Promise.all(s).then(function(o){const a=o[0],l=Pf[n.type],c=ma[n.componentType],u=c.BYTES_PER_ELEMENT,h=u*l,d=n.byteOffset||0,f=n.bufferView!==void 0?i.bufferViews[n.bufferView].byteStride:void 0,p=n.normalized===!0;let _,g;if(f&&f!==h){const m=Math.floor(d/f),b="InterleavedBuffer:"+n.bufferView+":"+n.componentType+":"+m+":"+n.count;let y=t.cache.get(b);y||(_=new c(a,m*f,n.count*f/u),y=new Q2(_,f/u),t.cache.add(b,y)),g=new Gm(y,l,d%f/u,p)}else a===null?_=new c(n.count*l):_=new c(a,d,n.count*l),g=new jn(_,l,p);if(n.sparse!==void 0){const m=Pf.SCALAR,b=ma[n.sparse.indices.componentType],y=n.sparse.indices.byteOffset||0,x=n.sparse.values.byteOffset||0,S=new b(o[1],y,n.sparse.count*m),w=new c(o[2],x,n.sparse.count*l);a!==null&&(g=new jn(g.array.slice(),g.itemSize,g.normalized)),g.normalized=!1;for(let M=0,R=S.length;M<R;M++){const T=S[M];if(g.setX(T,w[M*l]),l>=2&&g.setY(T,w[M*l+1]),l>=3&&g.setZ(T,w[M*l+2]),l>=4&&g.setW(T,w[M*l+3]),l>=5)throw new Error("THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.")}g.normalized=p}return g})}loadTexture(e){const t=this.json,i=this.options,s=t.textures[e].source,o=t.images[s];let a=this.textureLoader;if(o.uri){const l=i.manager.getHandler(o.uri);l!==null&&(a=l)}return this.loadTextureImage(e,s,a)}loadTextureImage(e,t,i){const n=this,s=this.json,o=s.textures[e],a=s.images[t],l=(a.uri||a.bufferView)+":"+o.sampler;if(this.textureCache[l])return this.textureCache[l];const c=this.loadImageSource(t,i).then(function(u){u.flipY=!1,u.name=o.name||a.name||"",u.name===""&&typeof a.uri=="string"&&a.uri.startsWith("data:image/")===!1&&(u.name=a.uri);const d=(s.samplers||{})[o.sampler]||{};return u.magFilter=ux[d.magFilter]||Lh,u.minFilter=ux[d.minFilter]||Um,u.wrapS=hx[d.wrapS]||Ec,u.wrapT=hx[d.wrapT]||Ec,u.generateMipmaps=!u.isCompressedTexture&&u.minFilter!==Dh&&u.minFilter!==Lh,n.associations.set(u,{textures:e}),u}).catch(function(){return null});return this.textureCache[l]=c,c}loadImageSource(e,t){const i=this,n=this.json,s=this.options;if(this.sourceCache[e]!==void 0)return this.sourceCache[e].then(h=>h.clone());const o=n.images[e],a=self.URL||self.webkitURL;let l=o.uri||"",c=!1;if(o.bufferView!==void 0)l=i.getDependency("bufferView",o.bufferView).then(function(h){c=!0;const d=new Blob([h],{type:o.mimeType});return l=a.createObjectURL(d),l});else if(o.uri===void 0)throw new Error("THREE.GLTFLoader: Image "+e+" is missing URI and bufferView");const u=Promise.resolve(l).then(function(h){return new Promise(function(d,f){let p=d;t.isImageBitmapLoader===!0&&(p=function(_){const g=new Yn(_);g.needsUpdate=!0,d(g)}),t.load(ec.resolveURL(h,s.path),p,void 0,f)})}).then(function(h){return c===!0&&a.revokeObjectURL(l),Ns(h,o),h.userData.mimeType=o.mimeType||yP(o.uri),h}).catch(function(h){throw console.error("THREE.GLTFLoader: Couldn't load texture",l),h});return this.sourceCache[e]=u,u}assignTexture(e,t,i,n){const s=this;return this.getDependency("texture",i.index).then(function(o){if(!o)return null;if(i.texCoord!==void 0&&i.texCoord>0&&(o=o.clone(),o.channel=i.texCoord),s.extensions[rt.KHR_TEXTURE_TRANSFORM]){const a=i.extensions!==void 0?i.extensions[rt.KHR_TEXTURE_TRANSFORM]:void 0;if(a){const l=s.associations.get(o);o=s.extensions[rt.KHR_TEXTURE_TRANSFORM].extendTexture(o,a),s.associations.set(o,l)}}return n!==void 0&&(o.colorSpace=n),e[t]=o,o})}assignFinalMaterial(e){const t=e.geometry;let i=e.material;const n=t.attributes.tangent===void 0,s=t.attributes.color!==void 0,o=t.attributes.normal===void 0;if(e.isPoints){const a="PointsMaterial:"+i.uuid;let l=this.cache.get(a);l||(l=new iT,oo.prototype.copy.call(l,i),l.color.copy(i.color),l.map=i.map,l.sizeAttenuation=!1,this.cache.add(a,l)),i=l}else if(e.isLine){const a="LineBasicMaterial:"+i.uuid;let l=this.cache.get(a);l||(l=new tT,oo.prototype.copy.call(l,i),l.color.copy(i.color),l.map=i.map,this.cache.add(a,l)),i=l}if(n||s||o){let a="ClonedMaterial:"+i.uuid+":";n&&(a+="derivative-tangents:"),s&&(a+="vertex-colors:"),o&&(a+="flat-shading:");let l=this.cache.get(a);l||(l=i.clone(),s&&(l.vertexColors=!0),o&&(l.flatShading=!0),n&&(l.normalScale&&(l.normalScale.y*=-1),l.clearcoatNormalScale&&(l.clearcoatNormalScale.y*=-1)),this.cache.add(a,l),this.associations.set(l,this.associations.get(i))),i=l}e.material=i}getMaterialType(){return Wm}loadMaterial(e){const t=this,i=this.json,n=this.extensions,s=i.materials[e];let o;const a={},l=s.extensions||{},c=[];if(l[rt.KHR_MATERIALS_UNLIT]){const h=n[rt.KHR_MATERIALS_UNLIT];o=h.getMaterialType(),c.push(h.extendParams(a,s,t))}else{const h=s.pbrMetallicRoughness||{};if(a.color=new si(1,1,1),a.opacity=1,Array.isArray(h.baseColorFactor)){const d=h.baseColorFactor;a.color.setRGB(d[0],d[1],d[2],Kn),a.opacity=d[3]}h.baseColorTexture!==void 0&&c.push(t.assignTexture(a,"map",h.baseColorTexture,Mi)),a.metalness=h.metallicFactor!==void 0?h.metallicFactor:1,a.roughness=h.roughnessFactor!==void 0?h.roughnessFactor:1,h.metallicRoughnessTexture!==void 0&&(c.push(t.assignTexture(a,"metalnessMap",h.metallicRoughnessTexture)),c.push(t.assignTexture(a,"roughnessMap",h.metallicRoughnessTexture))),o=this._invokeOne(function(d){return d.getMaterialType&&d.getMaterialType(e)}),c.push(Promise.all(this._invokeAll(function(d){return d.extendMaterialParams&&d.extendMaterialParams(e,a)})))}s.doubleSided===!0&&(a.side=o2);const u=s.alphaMode||Df.OPAQUE;if(u===Df.BLEND?(a.transparent=!0,a.depthWrite=!1):(a.transparent=!1,u===Df.MASK&&(a.alphaTest=s.alphaCutoff!==void 0?s.alphaCutoff:.5)),s.normalTexture!==void 0&&o!==oa&&(c.push(t.assignTexture(a,"normalMap",s.normalTexture)),a.normalScale=new ht(1,1),s.normalTexture.scale!==void 0)){const h=s.normalTexture.scale;a.normalScale.set(h,h)}if(s.occlusionTexture!==void 0&&o!==oa&&(c.push(t.assignTexture(a,"aoMap",s.occlusionTexture)),s.occlusionTexture.strength!==void 0&&(a.aoMapIntensity=s.occlusionTexture.strength)),s.emissiveFactor!==void 0&&o!==oa){const h=s.emissiveFactor;a.emissive=new si().setRGB(h[0],h[1],h[2],Kn)}return s.emissiveTexture!==void 0&&o!==oa&&c.push(t.assignTexture(a,"emissiveMap",s.emissiveTexture,Mi)),Promise.all(c).then(function(){const h=new o(a);return s.name&&(h.name=s.name),Ns(h,s),t.associations.set(h,{materials:e}),s.extensions&&Br(n,h,s),h})}createUniqueName(e){const t=yt.sanitizeNodeName(e||"");return t in this.nodeNamesUsed?t+"_"+ ++this.nodeNamesUsed[t]:(this.nodeNamesUsed[t]=0,t)}loadGeometries(e){const t=this,i=this.extensions,n=this.primitiveCache;function s(a){return i[rt.KHR_DRACO_MESH_COMPRESSION].decodePrimitive(a,t).then(function(l){return dx(l,a,t)})}const o=[];for(let a=0,l=e.length;a<l;a++){const c=e[a],u=xP(c),h=n[u];if(h)o.push(h.promise);else{let d;c.extensions&&c.extensions[rt.KHR_DRACO_MESH_COMPRESSION]?d=s(c):d=dx(new ol,c,t),n[u]={primitive:c,promise:d},o.push(d)}}return Promise.all(o)}loadMesh(e){const t=this,i=this.json,n=this.extensions,s=i.meshes[e],o=s.primitives,a=[];for(let l=0,c=o.length;l<c;l++){const u=o[l].material===void 0?mP(this.cache):this.getDependency("material",o[l].material);a.push(u)}return a.push(t.loadGeometries(o)),Promise.all(a).then(function(l){const c=l.slice(0,l.length-1),u=l[l.length-1],h=[];for(let f=0,p=u.length;f<p;f++){const _=u[f],g=o[f];let m;const b=c[f];if(g.mode===Mn.TRIANGLES||g.mode===Mn.TRIANGLE_STRIP||g.mode===Mn.TRIANGLE_FAN||g.mode===void 0)m=s.isSkinnedMesh===!0?new eN(_,b):new rd(_,b),m.isSkinnedMesh===!0&&m.normalizeSkinWeights(),g.mode===Mn.TRIANGLE_STRIP?m.geometry=lx(m.geometry,Yb):g.mode===Mn.TRIANGLE_FAN&&(m.geometry=lx(m.geometry,Cp));else if(g.mode===Mn.LINES)m=new lN(_,b);else if(g.mode===Mn.LINE_STRIP)m=new Hm(_,b);else if(g.mode===Mn.LINE_LOOP)m=new cN(_,b);else if(g.mode===Mn.POINTS)m=new uN(_,b);else throw new Error("THREE.GLTFLoader: Primitive mode unsupported: "+g.mode);Object.keys(m.geometry.morphAttributes).length>0&&_P(m,s),m.name=t.createUniqueName(s.name||"mesh_"+e),Ns(m,s),g.extensions&&Br(n,m,g),t.assignFinalMaterial(m),h.push(m)}for(let f=0,p=h.length;f<p;f++)t.associations.set(h[f],{meshes:e,primitives:f});if(h.length===1)return s.extensions&&Br(n,h[0],s),h[0];const d=new vf;s.extensions&&Br(n,d,s),t.associations.set(d,{meshes:e});for(let f=0,p=h.length;f<p;f++)d.add(h[f]);return d})}loadCamera(e){let t;const i=this.json.cameras[e],n=i[i.type];if(!n){console.warn("THREE.GLTFLoader: Missing camera parameters.");return}return i.type==="perspective"?t=new zm(Kb.radToDeg(n.yfov),n.aspectRatio||1,n.znear||1,n.zfar||2e6):i.type==="orthographic"&&(t=new oT(-n.xmag,n.xmag,n.ymag,-n.ymag,n.znear,n.zfar)),i.name&&(t.name=this.createUniqueName(i.name)),Ns(t,i),Promise.resolve(t)}loadSkin(e){const t=this.json.skins[e],i=[];for(let n=0,s=t.joints.length;n<s;n++)i.push(this._loadNodeShallow(t.joints[n]));return t.inverseBindMatrices!==void 0?i.push(this.getDependency("accessor",t.inverseBindMatrices)):i.push(null),Promise.all(i).then(function(n){const s=n.pop(),o=n,a=[],l=[];for(let c=0,u=o.length;c<u;c++){const h=o[c];if(h){a.push(h);const d=new at;s!==null&&d.fromArray(s.array,c*16),l.push(d)}else console.warn('THREE.GLTFLoader: Joint "%s" could not be found.',t.joints[c])}return new Vm(a,l)})}loadAnimation(e){const t=this.json,i=this,n=t.animations[e],s=n.name?n.name:"animation_"+e,o=[],a=[],l=[],c=[],u=[];for(let h=0,d=n.channels.length;h<d;h++){const f=n.channels[h],p=n.samplers[f.sampler],_=f.target,g=_.node,m=n.parameters!==void 0?n.parameters[p.input]:p.input,b=n.parameters!==void 0?n.parameters[p.output]:p.output;_.node!==void 0&&(o.push(this.getDependency("node",g)),a.push(this.getDependency("accessor",m)),l.push(this.getDependency("accessor",b)),c.push(p),u.push(_))}return Promise.all([Promise.all(o),Promise.all(a),Promise.all(l),Promise.all(c),Promise.all(u)]).then(function(h){const d=h[0],f=h[1],p=h[2],_=h[3],g=h[4],m=[];for(let b=0,y=d.length;b<y;b++){const x=d[b],S=f[b],w=p[b],M=_[b],R=g[b];if(x===void 0)continue;x.updateMatrix&&x.updateMatrix();const T=i._createAnimationTracks(x,S,w,M,R);if(T)for(let E=0;E<T.length;E++)m.push(T[E])}return new _N(s,void 0,m)})}createNodeMesh(e){const t=this.json,i=this,n=t.nodes[e];return n.mesh===void 0?null:i.getDependency("mesh",n.mesh).then(function(s){const o=i._getNodeRef(i.meshCache,n.mesh,s);return n.weights!==void 0&&o.traverse(function(a){if(a.isMesh)for(let l=0,c=n.weights.length;l<c;l++)a.morphTargetInfluences[l]=n.weights[l]}),o})}loadNode(e){const t=this.json,i=this,n=t.nodes[e],s=i._loadNodeShallow(e),o=[],a=n.children||[];for(let c=0,u=a.length;c<u;c++)o.push(i.getDependency("node",a[c]));const l=n.skin===void 0?Promise.resolve(null):i.getDependency("skin",n.skin);return Promise.all([s,Promise.all(o),l]).then(function(c){const u=c[0],h=c[1],d=c[2];d!==null&&u.traverse(function(f){f.isSkinnedMesh&&f.bind(d,bP)});for(let f=0,p=h.length;f<p;f++)u.add(h[f]);return u})}_loadNodeShallow(e){const t=this.json,i=this.extensions,n=this;if(this.nodeCache[e]!==void 0)return this.nodeCache[e];const s=t.nodes[e],o=s.name?n.createUniqueName(s.name):"",a=[],l=n._invokeOne(function(c){return c.createNodeMesh&&c.createNodeMesh(e)});return l&&a.push(l),s.camera!==void 0&&a.push(n.getDependency("camera",s.camera).then(function(c){return n._getNodeRef(n.cameraCache,s.camera,c)})),n._invokeAll(function(c){return c.createNodeAttachment&&c.createNodeAttachment(e)}).forEach(function(c){a.push(c)}),this.nodeCache[e]=Promise.all(a).then(function(c){let u;if(s.isBone===!0?u=new Jb:c.length>1?u=new vf:c.length===1?u=c[0]:u=new $t,u!==c[0])for(let h=0,d=c.length;h<d;h++)u.add(c[h]);if(s.name&&(u.userData.name=s.name,u.name=o),Ns(u,s),s.extensions&&Br(i,u,s),s.matrix!==void 0){const h=new at;h.fromArray(s.matrix),u.applyMatrix4(h)}else s.translation!==void 0&&u.position.fromArray(s.translation),s.rotation!==void 0&&u.quaternion.fromArray(s.rotation),s.scale!==void 0&&u.scale.fromArray(s.scale);if(!n.associations.has(u))n.associations.set(u,{});else if(s.mesh!==void 0&&n.meshCache.refs[s.mesh]>1){const h=n.associations.get(u);n.associations.set(u,{...h})}return n.associations.get(u).nodes=e,u}),this.nodeCache[e]}loadScene(e){const t=this.extensions,i=this.json.scenes[e],n=this,s=new vf;i.name&&(s.name=n.createUniqueName(i.name)),Ns(s,i),i.extensions&&Br(t,s,i);const o=i.nodes||[],a=[];for(let l=0,c=o.length;l<c;l++)a.push(n.getDependency("node",o[l]));return Promise.all(a).then(function(l){for(let u=0,h=l.length;u<h;u++)s.add(l[u]);const c=u=>{const h=new Map;for(const[d,f]of n.associations)(d instanceof oo||d instanceof Yn)&&h.set(d,f);return u.traverse(d=>{const f=n.associations.get(d);f!=null&&h.set(d,f)}),h};return n.associations=c(s),s})}_createAnimationTracks(e,t,i,n,s){const o=[],a=e.name?e.name:e.uuid,l=[];ar[s.path]===ar.weights?e.traverse(function(d){d.morphTargetInfluences&&l.push(d.name?d.name:d.uuid)}):l.push(a);let c;switch(ar[s.path]){case ar.weights:c=Ya;break;case ar.rotation:c=ja;break;case ar.translation:case ar.scale:c=Ka;break;default:switch(i.itemSize){case 1:c=Ya;break;case 2:case 3:default:c=Ka;break}break}const u=n.interpolation!==void 0?pP[n.interpolation]:wc,h=this._getArrayFromAccessor(i);for(let d=0,f=l.length;d<f;d++){const p=new c(l[d]+"."+ar[s.path],t.array,h,u);n.interpolation==="CUBICSPLINE"&&this._createCubicSplineTrackInterpolant(p),o.push(p)}return o}_getArrayFromAccessor(e){let t=e.array;if(e.normalized){const i=Up(t.constructor),n=new Float32Array(t.length);for(let s=0,o=t.length;s<o;s++)n[s]=t[s]*i;t=n}return t}_createCubicSplineTrackInterpolant(e){e.createInterpolant=function(i){const n=this instanceof ja?fP:lT;return new n(this.times,this.values,this.getValueSize()/3,i)},e.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline=!0}}function SP(r,e,t){const i=e.attributes,n=new qs;if(i.POSITION!==void 0){const a=t.json.accessors[i.POSITION],l=a.min,c=a.max;if(l!==void 0&&c!==void 0){if(n.set(new V(l[0],l[1],l[2]),new V(c[0],c[1],c[2])),a.normalized){const u=Up(ma[a.componentType]);n.min.multiplyScalar(u),n.max.multiplyScalar(u)}}else{console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.");return}}else return;const s=e.targets;if(s!==void 0){const a=new V,l=new V;for(let c=0,u=s.length;c<u;c++){const h=s[c];if(h.POSITION!==void 0){const d=t.json.accessors[h.POSITION],f=d.min,p=d.max;if(f!==void 0&&p!==void 0){if(l.setX(Math.max(Math.abs(f[0]),Math.abs(p[0]))),l.setY(Math.max(Math.abs(f[1]),Math.abs(p[1]))),l.setZ(Math.max(Math.abs(f[2]),Math.abs(p[2]))),d.normalized){const _=Up(ma[d.componentType]);l.multiplyScalar(_)}a.max(l)}else console.warn("THREE.GLTFLoader: Missing min/max properties for accessor POSITION.")}}n.expandByVector(a)}r.boundingBox=n;const o=new ps;n.getCenter(o.center),o.radius=n.min.distanceTo(n.max)/2,r.boundingSphere=o}function dx(r,e,t){const i=e.attributes,n=[];function s(o,a){return t.getDependency("accessor",o).then(function(l){r.setAttribute(a,l)})}for(const o in i){const a=Fp[o]||o.toLowerCase();a in r.attributes||n.push(s(i[o],a))}if(e.indices!==void 0&&!r.index){const o=t.getDependency("accessor",e.indices).then(function(a){r.setIndex(a)});n.push(o)}return ln.workingColorSpace!==Kn&&"COLOR_0"in i&&console.warn(`THREE.GLTFLoader: Converting vertex colors from "srgb-linear" to "${ln.workingColorSpace}" not supported.`),Ns(r,e),SP(r,e,t),Promise.all(n).then(function(){return e.targets!==void 0?gP(r,e.targets,t):r})}const fx={type:"change"},jm={type:"start"},cT={type:"end"},th=new Xc,px=new Wr,vP=Math.cos(70*Kb.DEG2RAD),Jt=new V,Gi=2*Math.PI,Tt={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6},If=1e-6;class MP extends GN{constructor(e,t=null){super(e,t),this.state=Tt.NONE,this.target=new V,this.cursor=new V,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minTargetRadius=0,this.maxTargetRadius=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.keyRotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.zoomToCursor=!1,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:fa.ROTATE,MIDDLE:fa.DOLLY,RIGHT:fa.PAN},this.touches={ONE:ra.ROTATE,TWO:ra.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this._lastPosition=new V,this._lastQuaternion=new us,this._lastTargetPosition=new V,this._quat=new us().setFromUnitVectors(e.up,new V(0,1,0)),this._quatInverse=this._quat.clone().invert(),this._spherical=new ax,this._sphericalDelta=new ax,this._scale=1,this._panOffset=new V,this._rotateStart=new ht,this._rotateEnd=new ht,this._rotateDelta=new ht,this._panStart=new ht,this._panEnd=new ht,this._panDelta=new ht,this._dollyStart=new ht,this._dollyEnd=new ht,this._dollyDelta=new ht,this._dollyDirection=new V,this._mouse=new ht,this._performCursorZoom=!1,this._pointers=[],this._pointerPositions={},this._controlActive=!1,this._onPointerMove=AP.bind(this),this._onPointerDown=EP.bind(this),this._onPointerUp=wP.bind(this),this._onContextMenu=IP.bind(this),this._onMouseWheel=NP.bind(this),this._onKeyDown=PP.bind(this),this._onTouchStart=DP.bind(this),this._onTouchMove=LP.bind(this),this._onMouseDown=RP.bind(this),this._onMouseMove=CP.bind(this),this._interceptControlDown=FP.bind(this),this._interceptControlUp=UP.bind(this),this.domElement!==null&&this.connect(this.domElement),this.update()}connect(e){super.connect(e),this.domElement.addEventListener("pointerdown",this._onPointerDown),this.domElement.addEventListener("pointercancel",this._onPointerUp),this.domElement.addEventListener("contextmenu",this._onContextMenu),this.domElement.addEventListener("wheel",this._onMouseWheel,{passive:!1}),this.domElement.getRootNode().addEventListener("keydown",this._interceptControlDown,{passive:!0,capture:!0}),this.domElement.style.touchAction="none"}disconnect(){this.domElement.removeEventListener("pointerdown",this._onPointerDown),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.domElement.removeEventListener("pointercancel",this._onPointerUp),this.domElement.removeEventListener("wheel",this._onMouseWheel),this.domElement.removeEventListener("contextmenu",this._onContextMenu),this.stopListenToKeyEvents(),this.domElement.getRootNode().removeEventListener("keydown",this._interceptControlDown,{capture:!0}),this.domElement.style.touchAction="auto"}dispose(){this.disconnect()}getPolarAngle(){return this._spherical.phi}getAzimuthalAngle(){return this._spherical.theta}getDistance(){return this.object.position.distanceTo(this.target)}listenToKeyEvents(e){e.addEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=e}stopListenToKeyEvents(){this._domElementKeyEvents!==null&&(this._domElementKeyEvents.removeEventListener("keydown",this._onKeyDown),this._domElementKeyEvents=null)}saveState(){this.target0.copy(this.target),this.position0.copy(this.object.position),this.zoom0=this.object.zoom}reset(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(fx),this.update(),this.state=Tt.NONE}update(e=null){const t=this.object.position;Jt.copy(t).sub(this.target),Jt.applyQuaternion(this._quat),this._spherical.setFromVector3(Jt),this.autoRotate&&this.state===Tt.NONE&&this._rotateLeft(this._getAutoRotationAngle(e)),this.enableDamping?(this._spherical.theta+=this._sphericalDelta.theta*this.dampingFactor,this._spherical.phi+=this._sphericalDelta.phi*this.dampingFactor):(this._spherical.theta+=this._sphericalDelta.theta,this._spherical.phi+=this._sphericalDelta.phi);let i=this.minAzimuthAngle,n=this.maxAzimuthAngle;isFinite(i)&&isFinite(n)&&(i<-Math.PI?i+=Gi:i>Math.PI&&(i-=Gi),n<-Math.PI?n+=Gi:n>Math.PI&&(n-=Gi),i<=n?this._spherical.theta=Math.max(i,Math.min(n,this._spherical.theta)):this._spherical.theta=this._spherical.theta>(i+n)/2?Math.max(i,this._spherical.theta):Math.min(n,this._spherical.theta)),this._spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this._spherical.phi)),this._spherical.makeSafe(),this.enableDamping===!0?this.target.addScaledVector(this._panOffset,this.dampingFactor):this.target.add(this._panOffset),this.target.sub(this.cursor),this.target.clampLength(this.minTargetRadius,this.maxTargetRadius),this.target.add(this.cursor);let s=!1;if(this.zoomToCursor&&this._performCursorZoom||this.object.isOrthographicCamera)this._spherical.radius=this._clampDistance(this._spherical.radius);else{const o=this._spherical.radius;this._spherical.radius=this._clampDistance(this._spherical.radius*this._scale),s=o!=this._spherical.radius}if(Jt.setFromSpherical(this._spherical),Jt.applyQuaternion(this._quatInverse),t.copy(this.target).add(Jt),this.object.lookAt(this.target),this.enableDamping===!0?(this._sphericalDelta.theta*=1-this.dampingFactor,this._sphericalDelta.phi*=1-this.dampingFactor,this._panOffset.multiplyScalar(1-this.dampingFactor)):(this._sphericalDelta.set(0,0,0),this._panOffset.set(0,0,0)),this.zoomToCursor&&this._performCursorZoom){let o=null;if(this.object.isPerspectiveCamera){const a=Jt.length();o=this._clampDistance(a*this._scale);const l=a-o;this.object.position.addScaledVector(this._dollyDirection,l),this.object.updateMatrixWorld(),s=!!l}else if(this.object.isOrthographicCamera){const a=new V(this._mouse.x,this._mouse.y,0);a.unproject(this.object);const l=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),this.object.updateProjectionMatrix(),s=l!==this.object.zoom;const c=new V(this._mouse.x,this._mouse.y,0);c.unproject(this.object),this.object.position.sub(c).add(a),this.object.updateMatrixWorld(),o=Jt.length()}else console.warn("WARNING: OrbitControls.js encountered an unknown camera type - zoom to cursor disabled."),this.zoomToCursor=!1;o!==null&&(this.screenSpacePanning?this.target.set(0,0,-1).transformDirection(this.object.matrix).multiplyScalar(o).add(this.object.position):(th.origin.copy(this.object.position),th.direction.set(0,0,-1).transformDirection(this.object.matrix),Math.abs(this.object.up.dot(th.direction))<vP?this.object.lookAt(this.target):(px.setFromNormalAndCoplanarPoint(this.object.up,this.target),th.intersectPlane(px,this.target))))}else if(this.object.isOrthographicCamera){const o=this.object.zoom;this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/this._scale)),o!==this.object.zoom&&(this.object.updateProjectionMatrix(),s=!0)}return this._scale=1,this._performCursorZoom=!1,s||this._lastPosition.distanceToSquared(this.object.position)>If||8*(1-this._lastQuaternion.dot(this.object.quaternion))>If||this._lastTargetPosition.distanceToSquared(this.target)>If?(this.dispatchEvent(fx),this._lastPosition.copy(this.object.position),this._lastQuaternion.copy(this.object.quaternion),this._lastTargetPosition.copy(this.target),!0):!1}_getAutoRotationAngle(e){return e!==null?Gi/60*this.autoRotateSpeed*e:Gi/60/60*this.autoRotateSpeed}_getZoomScale(e){const t=Math.abs(e*.01);return Math.pow(.95,this.zoomSpeed*t)}_rotateLeft(e){this._sphericalDelta.theta-=e}_rotateUp(e){this._sphericalDelta.phi-=e}_panLeft(e,t){Jt.setFromMatrixColumn(t,0),Jt.multiplyScalar(-e),this._panOffset.add(Jt)}_panUp(e,t){this.screenSpacePanning===!0?Jt.setFromMatrixColumn(t,1):(Jt.setFromMatrixColumn(t,0),Jt.crossVectors(this.object.up,Jt)),Jt.multiplyScalar(e),this._panOffset.add(Jt)}_pan(e,t){const i=this.domElement;if(this.object.isPerspectiveCamera){const n=this.object.position;Jt.copy(n).sub(this.target);let s=Jt.length();s*=Math.tan(this.object.fov/2*Math.PI/180),this._panLeft(2*e*s/i.clientHeight,this.object.matrix),this._panUp(2*t*s/i.clientHeight,this.object.matrix)}else this.object.isOrthographicCamera?(this._panLeft(e*(this.object.right-this.object.left)/this.object.zoom/i.clientWidth,this.object.matrix),this._panUp(t*(this.object.top-this.object.bottom)/this.object.zoom/i.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)}_dollyOut(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale/=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_dollyIn(e){this.object.isPerspectiveCamera||this.object.isOrthographicCamera?this._scale*=e:(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)}_updateZoomParameters(e,t){if(!this.zoomToCursor)return;this._performCursorZoom=!0;const i=this.domElement.getBoundingClientRect(),n=e-i.left,s=t-i.top,o=i.width,a=i.height;this._mouse.x=n/o*2-1,this._mouse.y=-(s/a)*2+1,this._dollyDirection.set(this._mouse.x,this._mouse.y,1).unproject(this.object).sub(this.object.position).normalize()}_clampDistance(e){return Math.max(this.minDistance,Math.min(this.maxDistance,e))}_handleMouseDownRotate(e){this._rotateStart.set(e.clientX,e.clientY)}_handleMouseDownDolly(e){this._updateZoomParameters(e.clientX,e.clientX),this._dollyStart.set(e.clientX,e.clientY)}_handleMouseDownPan(e){this._panStart.set(e.clientX,e.clientY)}_handleMouseMoveRotate(e){this._rotateEnd.set(e.clientX,e.clientY),this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Gi*this._rotateDelta.x/t.clientHeight),this._rotateUp(Gi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd),this.update()}_handleMouseMoveDolly(e){this._dollyEnd.set(e.clientX,e.clientY),this._dollyDelta.subVectors(this._dollyEnd,this._dollyStart),this._dollyDelta.y>0?this._dollyOut(this._getZoomScale(this._dollyDelta.y)):this._dollyDelta.y<0&&this._dollyIn(this._getZoomScale(this._dollyDelta.y)),this._dollyStart.copy(this._dollyEnd),this.update()}_handleMouseMovePan(e){this._panEnd.set(e.clientX,e.clientY),this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd),this.update()}_handleMouseWheel(e){this._updateZoomParameters(e.clientX,e.clientY),e.deltaY<0?this._dollyIn(this._getZoomScale(e.deltaY)):e.deltaY>0&&this._dollyOut(this._getZoomScale(e.deltaY)),this.update()}_handleKeyDown(e){let t=!1;switch(e.code){case this.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(Gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,this.keyPanSpeed),t=!0;break;case this.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateUp(-Gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(0,-this.keyPanSpeed),t=!0;break;case this.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(Gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(this.keyPanSpeed,0),t=!0;break;case this.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?this.enableRotate&&this._rotateLeft(-Gi*this.keyRotateSpeed/this.domElement.clientHeight):this.enablePan&&this._pan(-this.keyPanSpeed,0),t=!0;break}t&&(e.preventDefault(),this.update())}_handleTouchStartRotate(e){if(this._pointers.length===1)this._rotateStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._rotateStart.set(i,n)}}_handleTouchStartPan(e){if(this._pointers.length===1)this._panStart.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panStart.set(i,n)}}_handleTouchStartDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,s=Math.sqrt(i*i+n*n);this._dollyStart.set(0,s)}_handleTouchStartDollyPan(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enablePan&&this._handleTouchStartPan(e)}_handleTouchStartDollyRotate(e){this.enableZoom&&this._handleTouchStartDolly(e),this.enableRotate&&this._handleTouchStartRotate(e)}_handleTouchMoveRotate(e){if(this._pointers.length==1)this._rotateEnd.set(e.pageX,e.pageY);else{const i=this._getSecondPointerPosition(e),n=.5*(e.pageX+i.x),s=.5*(e.pageY+i.y);this._rotateEnd.set(n,s)}this._rotateDelta.subVectors(this._rotateEnd,this._rotateStart).multiplyScalar(this.rotateSpeed);const t=this.domElement;this._rotateLeft(Gi*this._rotateDelta.x/t.clientHeight),this._rotateUp(Gi*this._rotateDelta.y/t.clientHeight),this._rotateStart.copy(this._rotateEnd)}_handleTouchMovePan(e){if(this._pointers.length===1)this._panEnd.set(e.pageX,e.pageY);else{const t=this._getSecondPointerPosition(e),i=.5*(e.pageX+t.x),n=.5*(e.pageY+t.y);this._panEnd.set(i,n)}this._panDelta.subVectors(this._panEnd,this._panStart).multiplyScalar(this.panSpeed),this._pan(this._panDelta.x,this._panDelta.y),this._panStart.copy(this._panEnd)}_handleTouchMoveDolly(e){const t=this._getSecondPointerPosition(e),i=e.pageX-t.x,n=e.pageY-t.y,s=Math.sqrt(i*i+n*n);this._dollyEnd.set(0,s),this._dollyDelta.set(0,Math.pow(this._dollyEnd.y/this._dollyStart.y,this.zoomSpeed)),this._dollyOut(this._dollyDelta.y),this._dollyStart.copy(this._dollyEnd);const o=(e.pageX+t.x)*.5,a=(e.pageY+t.y)*.5;this._updateZoomParameters(o,a)}_handleTouchMoveDollyPan(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enablePan&&this._handleTouchMovePan(e)}_handleTouchMoveDollyRotate(e){this.enableZoom&&this._handleTouchMoveDolly(e),this.enableRotate&&this._handleTouchMoveRotate(e)}_addPointer(e){this._pointers.push(e.pointerId)}_removePointer(e){delete this._pointerPositions[e.pointerId];for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId){this._pointers.splice(t,1);return}}_isTrackingPointer(e){for(let t=0;t<this._pointers.length;t++)if(this._pointers[t]==e.pointerId)return!0;return!1}_trackPointer(e){let t=this._pointerPositions[e.pointerId];t===void 0&&(t=new ht,this._pointerPositions[e.pointerId]=t),t.set(e.pageX,e.pageY)}_getSecondPointerPosition(e){const t=e.pointerId===this._pointers[0]?this._pointers[1]:this._pointers[0];return this._pointerPositions[t]}_customWheelEvent(e){const t=e.deltaMode,i={clientX:e.clientX,clientY:e.clientY,deltaY:e.deltaY};switch(t){case 1:i.deltaY*=16;break;case 2:i.deltaY*=100;break}return e.ctrlKey&&!this._controlActive&&(i.deltaY*=10),i}}function EP(r){this.enabled!==!1&&(this._pointers.length===0&&(this.domElement.setPointerCapture(r.pointerId),this.domElement.addEventListener("pointermove",this._onPointerMove),this.domElement.addEventListener("pointerup",this._onPointerUp)),!this._isTrackingPointer(r)&&(this._addPointer(r),r.pointerType==="touch"?this._onTouchStart(r):this._onMouseDown(r)))}function AP(r){this.enabled!==!1&&(r.pointerType==="touch"?this._onTouchMove(r):this._onMouseMove(r))}function wP(r){switch(this._removePointer(r),this._pointers.length){case 0:this.domElement.releasePointerCapture(r.pointerId),this.domElement.removeEventListener("pointermove",this._onPointerMove),this.domElement.removeEventListener("pointerup",this._onPointerUp),this.dispatchEvent(cT),this.state=Tt.NONE;break;case 1:const e=this._pointers[0],t=this._pointerPositions[e];this._onTouchStart({pointerId:e,pageX:t.x,pageY:t.y});break}}function RP(r){let e;switch(r.button){case 0:e=this.mouseButtons.LEFT;break;case 1:e=this.mouseButtons.MIDDLE;break;case 2:e=this.mouseButtons.RIGHT;break;default:e=-1}switch(e){case fa.DOLLY:if(this.enableZoom===!1)return;this._handleMouseDownDolly(r),this.state=Tt.DOLLY;break;case fa.ROTATE:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=Tt.PAN}else{if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=Tt.ROTATE}break;case fa.PAN:if(r.ctrlKey||r.metaKey||r.shiftKey){if(this.enableRotate===!1)return;this._handleMouseDownRotate(r),this.state=Tt.ROTATE}else{if(this.enablePan===!1)return;this._handleMouseDownPan(r),this.state=Tt.PAN}break;default:this.state=Tt.NONE}this.state!==Tt.NONE&&this.dispatchEvent(jm)}function CP(r){switch(this.state){case Tt.ROTATE:if(this.enableRotate===!1)return;this._handleMouseMoveRotate(r);break;case Tt.DOLLY:if(this.enableZoom===!1)return;this._handleMouseMoveDolly(r);break;case Tt.PAN:if(this.enablePan===!1)return;this._handleMouseMovePan(r);break}}function NP(r){this.enabled===!1||this.enableZoom===!1||this.state!==Tt.NONE||(r.preventDefault(),this.dispatchEvent(jm),this._handleMouseWheel(this._customWheelEvent(r)),this.dispatchEvent(cT))}function PP(r){this.enabled!==!1&&this._handleKeyDown(r)}function DP(r){switch(this._trackPointer(r),this._pointers.length){case 1:switch(this.touches.ONE){case ra.ROTATE:if(this.enableRotate===!1)return;this._handleTouchStartRotate(r),this.state=Tt.TOUCH_ROTATE;break;case ra.PAN:if(this.enablePan===!1)return;this._handleTouchStartPan(r),this.state=Tt.TOUCH_PAN;break;default:this.state=Tt.NONE}break;case 2:switch(this.touches.TWO){case ra.DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchStartDollyPan(r),this.state=Tt.TOUCH_DOLLY_PAN;break;case ra.DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchStartDollyRotate(r),this.state=Tt.TOUCH_DOLLY_ROTATE;break;default:this.state=Tt.NONE}break;default:this.state=Tt.NONE}this.state!==Tt.NONE&&this.dispatchEvent(jm)}function LP(r){switch(this._trackPointer(r),this.state){case Tt.TOUCH_ROTATE:if(this.enableRotate===!1)return;this._handleTouchMoveRotate(r),this.update();break;case Tt.TOUCH_PAN:if(this.enablePan===!1)return;this._handleTouchMovePan(r),this.update();break;case Tt.TOUCH_DOLLY_PAN:if(this.enableZoom===!1&&this.enablePan===!1)return;this._handleTouchMoveDollyPan(r),this.update();break;case Tt.TOUCH_DOLLY_ROTATE:if(this.enableZoom===!1&&this.enableRotate===!1)return;this._handleTouchMoveDollyRotate(r),this.update();break;default:this.state=Tt.NONE}}function IP(r){this.enabled!==!1&&r.preventDefault()}function FP(r){r.key==="Control"&&(this._controlActive=!0,this.domElement.getRootNode().addEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}function UP(r){r.key==="Control"&&(this._controlActive=!1,this.domElement.getRootNode().removeEventListener("keyup",this._interceptControlUp,{passive:!0,capture:!0}))}self.GPUShaderStage===void 0&&(self.GPUShaderStage={VERTEX:1,FRAGMENT:2,COMPUTE:4});let Uh=navigator.gpu!==void 0;typeof window<"u"&&Uh&&(Uh=navigator.gpu.requestAdapter().then(r=>r));class uT{static isAvailable(){return!!Uh}static getStaticAdapter(){return Uh}static getErrorMessage(){const e='Your browser does not support <a href="https://gpuweb.github.io/gpuweb/" style="color:blue">WebGPU</a> yet',t=document.createElement("div");return t.id="webgpumessage",t.style.fontFamily="monospace",t.style.fontSize="13px",t.style.fontWeight="normal",t.style.textAlign="center",t.style.background="#fff",t.style.color="#000",t.style.padding="1.5em",t.style.maxWidth="400px",t.style.margin="5em auto 0",t.innerHTML=e,t}}class BP{constructor(e,t){this.nodes=e,this.info=t,this._context=typeof self<"u"?self:null,this._animationLoop=null,this._requestId=null}start(){const e=(t,i)=>{this._requestId=this._context.requestAnimationFrame(e),this.info.autoReset===!0&&this.info.reset(),this.nodes.nodeFrame.update(),this.info.frame=this.nodes.nodeFrame.frameId,this._animationLoop!==null&&this._animationLoop(t,i)};e()}stop(){this._context.cancelAnimationFrame(this._requestId),this._requestId=null}getAnimationLoop(){return this._animationLoop}setAnimationLoop(e){this._animationLoop=e}getContext(){return this._context}setContext(e){this._context=e}dispose(){this.stop()}}class hs{constructor(){this.weakMap=new WeakMap}get(e){let t=this.weakMap;for(let i=0;i<e.length-1;i++)if(t=t.get(e[i]),t===void 0)return;return t.get(e[e.length-1])}set(e,t){let i=this.weakMap;for(let n=0;n<e.length-1;n++){const s=e[n];i.has(s)===!1&&i.set(s,new WeakMap),i=i.get(s)}return i.set(e[e.length-1],t),this}delete(e){let t=this.weakMap;for(let i=0;i<e.length-1;i++)if(t=t.get(e[i]),t===void 0)return!1;return t.delete(e[e.length-1])}}function Cc(r,e=0){let t=3735928559^e,i=1103547991^e;if(r instanceof Array)for(let n=0,s;n<r.length;n++)s=r[n],t=Math.imul(t^s,2654435761),i=Math.imul(i^s,1597334677);else for(let n=0,s;n<r.length;n++)s=r.charCodeAt(n),t=Math.imul(t^s,2654435761),i=Math.imul(i^s,1597334677);return t=Math.imul(t^t>>>16,2246822507),t^=Math.imul(i^i>>>13,3266489909),i=Math.imul(i^i>>>16,2246822507),i^=Math.imul(t^t>>>13,3266489909),4294967296*(2097151&i)+(t>>>0)}const OP=r=>Cc(r),Km=r=>Cc(r),Bh=(...r)=>Cc(r);function hT(r,e=!1){const t=[];r.isNode===!0&&(t.push(r.id),r=r.getSelf());for(const{property:i,childNode:n}of Oh(r))t.push(Cc(i.slice(0,-4)),n.getCacheKey(e));return Cc(t)}function*Oh(r,e=!1){for(const t in r){if(t.startsWith("_")===!0)continue;const i=r[t];if(Array.isArray(i)===!0)for(let n=0;n<i.length;n++){const s=i[n];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:n,childNode:s})}else if(i&&i.isNode===!0)yield{property:t,childNode:i};else if(i&&Object.getPrototypeOf(i)===Object.prototype)for(const n in i){if(n.startsWith("_")===!0)continue;const s=i[n];s&&(s.isNode===!0||e&&typeof s.toJSON=="function")&&(yield{property:t,index:n,childNode:s})}}}const kP=new Map([[1,"float"],[2,"vec2"],[3,"vec3"],[4,"vec4"],[9,"mat3"],[16,"mat4"]]),mx=new WeakMap;function zP(r){return kP.get(r)}function kh(r){if(r==null)return null;const e=typeof r;return r.isNode===!0?"node":e==="number"?"float":e==="boolean"?"bool":e==="string"?"string":e==="function"?"shader":r.isVector2===!0?"vec2":r.isVector3===!0?"vec3":r.isVector4===!0?"vec4":r.isMatrix2===!0?"mat2":r.isMatrix3===!0?"mat3":r.isMatrix4===!0?"mat4":r.isColor===!0?"color":r instanceof ArrayBuffer?"ArrayBuffer":null}function dT(r,...e){const t=r?r.slice(-4):void 0;return e.length===1&&(t==="vec2"?e=[e[0],e[0]]:t==="vec3"?e=[e[0],e[0],e[0]]:t==="vec4"&&(e=[e[0],e[0],e[0],e[0]])),r==="color"?new ct(...e):t==="vec2"?new Je(...e):t==="vec3"?new B(...e):t==="vec4"?new je(...e):t==="mat2"?new nd(...e):t==="mat3"?new We(...e):t==="mat4"?new It(...e):r==="bool"?e[0]||!1:r==="float"||r==="int"||r==="uint"?e[0]||0:r==="string"?e[0]||"":r==="ArrayBuffer"?HP(e[0]):null}function GP(r){let e=mx.get(r);return e===void 0&&(e={},mx.set(r,e)),e}function VP(r){let e="";const t=new Uint8Array(r);for(let i=0;i<t.length;i++)e+=String.fromCharCode(t[i]);return btoa(e)}function HP(r){return Uint8Array.from(atob(r),e=>e.charCodeAt(0)).buffer}let WP=0;function $P(r){const e=Object.keys(r);let t=Object.getPrototypeOf(r);for(;t;){const i=Object.getOwnPropertyDescriptors(t);for(const n in i)if(i[n]!==void 0){const s=i[n];s&&typeof s.get=="function"&&e.push(n)}t=Object.getPrototypeOf(t)}return e}class XP{constructor(e,t,i,n,s,o,a,l,c,u){this.id=WP++,this._nodes=e,this._geometries=t,this.renderer=i,this.object=n,this.material=s,this.scene=o,this.camera=a,this.lightsNode=l,this.context=c,this.geometry=n.geometry,this.version=s.version,this.drawRange=null,this.attributes=null,this.attributesId=null,this.pipeline=null,this.group=null,this.vertexBuffers=null,this.drawParams=null,this.bundle=null,this.clippingContext=u,this.clippingContextCacheKey=u!==null?u.cacheKey:"",this.initialNodesCacheKey=this.getDynamicCacheKey(),this.initialCacheKey=this.getCacheKey(),this._nodeBuilderState=null,this._bindings=null,this._monitor=null,this.onDispose=null,this.isRenderObject=!0,this.onMaterialDispose=()=>{this.dispose()},this.onGeometryDispose=()=>{this.attributes=null,this.attributesId=null},this.material.addEventListener("dispose",this.onMaterialDispose),this.geometry.addEventListener("dispose",this.onGeometryDispose)}updateClipping(e){this.clippingContext=e}get clippingNeedsUpdate(){return this.clippingContext===null||this.clippingContext.cacheKey===this.clippingContextCacheKey?!1:(this.clippingContextCacheKey=this.clippingContext.cacheKey,!0)}get hardwareClippingPlanes(){return this.material.hardwareClipping===!0?this.clippingContext.unionClippingCount:0}getNodeBuilderState(){return this._nodeBuilderState||(this._nodeBuilderState=this._nodes.getForRender(this))}getMonitor(){return this._monitor||(this._monitor=this.getNodeBuilderState().observer)}getBindings(){return this._bindings||(this._bindings=this.getNodeBuilderState().createBindings())}getBindingGroup(e){for(const t of this.getBindings())if(t.name===e)return t}getIndex(){return this._geometries.getIndex(this)}getIndirect(){return this._geometries.getIndirect(this)}getChainArray(){return[this.object,this.material,this.context,this.lightsNode]}setGeometry(e){this.geometry=e,this.attributes=null,this.attributesId=null}getAttributes(){if(this.attributes!==null)return this.attributes;const e=this.getNodeBuilderState().nodeAttributes,t=this.geometry,i=[],n=new Set,s={};for(const o of e){let a;if(o.node&&o.node.attribute?a=o.node.attribute:(a=t.getAttribute(o.name),s[o.name]=a.version),a===void 0)continue;i.push(a);const l=a.isInterleavedBufferAttribute?a.data:a;n.add(l)}return this.attributes=i,this.attributesId=s,this.vertexBuffers=Array.from(n.values()),i}getVertexBuffers(){return this.vertexBuffers===null&&this.getAttributes(),this.vertexBuffers}getDrawParameters(){const{object:e,material:t,geometry:i,group:n,drawRange:s}=this,o=this.drawParams||(this.drawParams={vertexCount:0,firstVertex:0,instanceCount:0,firstInstance:0}),a=this.getIndex(),l=a!==null;let c=1;if(i.isInstancedBufferGeometry===!0?c=i.instanceCount:e.count!==void 0&&(c=Math.max(0,e.count)),c===0)return null;if(o.instanceCount=c,e.isBatchedMesh===!0)return o;let u=1;t.wireframe===!0&&!e.isPoints&&!e.isLineSegments&&!e.isLine&&!e.isLineLoop&&(u=2);let h=s.start*u,d=(s.start+s.count)*u;n!==null&&(h=Math.max(h,n.start*u),d=Math.min(d,(n.start+n.count)*u));const f=i.attributes.position;let p=1/0;l?p=a.count:f!=null&&(p=f.count),h=Math.max(h,0),d=Math.min(d,p);const _=d-h;return _<0||_===1/0?null:(o.vertexCount=_,o.firstVertex=h,o)}getGeometryCacheKey(){const{geometry:e}=this;let t="";for(const i of Object.keys(e.attributes).sort()){const n=e.attributes[i];t+=i+",",n.data&&(t+=n.data.stride+","),n.offset&&(t+=n.offset+","),n.itemSize&&(t+=n.itemSize+","),n.normalized&&(t+="n,")}for(const i of Object.keys(e.morphAttributes).sort()){const n=e.morphAttributes[i];t+="morph-"+i+",";for(let s=0,o=n.length;s<o;s++){const a=n[s];t+=a.id+","}}return e.index&&(t+="index,"),t}getMaterialCacheKey(){const{object:e,material:t}=this;let i=t.customProgramCacheKey();for(const n of $P(t)){if(/^(is[A-Z]|_)|^(visible|version|uuid|name|opacity|userData)$/.test(n))continue;const s=t[n];let o;if(s!==null){const a=typeof s;a==="number"?o=s!==0?"1":"0":a==="object"?(o="{",s.isTexture&&(o+=s.mapping),o+="}"):o=String(s)}else o=String(s);i+=o+","}return i+=this.clippingContextCacheKey+",",e.geometry&&(i+=this.getGeometryCacheKey()),e.skeleton&&(i+=e.skeleton.bones.length+","),e.isBatchedMesh&&(i+=e._matricesTexture.uuid+",",e._colorsTexture!==null&&(i+=e._colorsTexture.uuid+",")),e.count>1&&(i+=e.uuid+","),i+=e.receiveShadow+",",OP(i)}get needsGeometryUpdate(){if(this.geometry.id!==this.object.geometry.id)return!0;if(this.attributes!==null){const e=this.attributesId;for(const t in e){const i=this.geometry.getAttribute(t);if(i===void 0||e[t]!==i.id)return!0}}return!1}get needsUpdate(){return this.initialNodesCacheKey!==this.getDynamicCacheKey()||this.clippingNeedsUpdate}getDynamicCacheKey(){let e=0;return this.material.isShadowPassMaterial!==!0&&(e=this._nodes.getCacheKey(this.scene,this.lightsNode)),this.camera.isArrayCamera&&(e=Bh(e,this.camera.cameras.length)),this.object.receiveShadow&&(e=Bh(e,1)),e}getCacheKey(){return this.getMaterialCacheKey()+this.getDynamicCacheKey()}dispose(){this.material.removeEventListener("dispose",this.onMaterialDispose),this.geometry.removeEventListener("dispose",this.onGeometryDispose),this.onDispose()}}const Or=[];class qP{constructor(e,t,i,n,s,o){this.renderer=e,this.nodes=t,this.geometries=i,this.pipelines=n,this.bindings=s,this.info=o,this.chainMaps={}}get(e,t,i,n,s,o,a,l){const c=this.getChainMap(l);Or[0]=e,Or[1]=t,Or[2]=o,Or[3]=s;let u=c.get(Or);return u===void 0?(u=this.createRenderObject(this.nodes,this.geometries,this.renderer,e,t,i,n,s,o,a,l),c.set(Or,u)):(u.updateClipping(a),u.needsGeometryUpdate&&u.setGeometry(e.geometry),(u.version!==t.version||u.needsUpdate)&&(u.initialCacheKey!==u.getCacheKey()?(u.dispose(),u=this.get(e,t,i,n,s,o,a,l)):u.version=t.version)),Or.length=0,u}getChainMap(e="default"){return this.chainMaps[e]||(this.chainMaps[e]=new hs)}dispose(){this.chainMaps={}}createRenderObject(e,t,i,n,s,o,a,l,c,u,h){const d=this.getChainMap(h),f=new XP(e,t,i,n,s,o,a,l,c,u);return f.onDispose=()=>{this.pipelines.delete(f),this.bindings.delete(f),this.nodes.delete(f),d.delete(f.getChainArray())},f}}class vr{constructor(){this.data=new WeakMap}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}delete(e){let t=null;return this.data.has(e)&&(t=this.data.get(e),this.data.delete(e)),t}has(e){return this.data.has(e)}dispose(){this.data=new WeakMap}}const wn={VERTEX:1,INDEX:2,STORAGE:3,INDIRECT:4},hr=16,YP=211,jP=212;class KP extends vr{constructor(e){super(),this.backend=e}delete(e){const t=super.delete(e);return t!==null&&this.backend.destroyAttribute(e),t}update(e,t){const i=this.get(e);if(i.version===void 0)t===wn.VERTEX?this.backend.createAttribute(e):t===wn.INDEX?this.backend.createIndexAttribute(e):t===wn.STORAGE?this.backend.createStorageAttribute(e):t===wn.INDIRECT&&this.backend.createIndirectStorageAttribute(e),i.version=this._getBufferAttribute(e).version;else{const n=this._getBufferAttribute(e);(i.version<n.version||n.usage===na)&&(this.backend.updateAttribute(e),i.version=n.version)}}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}function fT(r){return r.index!==null?r.index.version:r.attributes.position.version}function gx(r){const e=[],t=r.index,i=r.attributes.position;if(t!==null){const s=t.array;for(let o=0,a=s.length;o<a;o+=3){const l=s[o+0],c=s[o+1],u=s[o+2];e.push(l,c,c,u,u,l)}}else{const s=i.array;for(let o=0,a=s.length/3-1;o<a;o+=3){const l=o+0,c=o+1,u=o+2;e.push(l,c,c,u,u,l)}}const n=new(Em(e)?Cm:Rm)(e,1);return n.version=fT(r),n}class ZP extends vr{constructor(e,t){super(),this.attributes=e,this.info=t,this.wireframes=new WeakMap,this.attributeCall=new WeakMap}has(e){const t=e.geometry;return super.has(t)&&this.get(t).initialized===!0}updateForRender(e){this.has(e)===!1&&this.initGeometry(e),this.updateAttributes(e)}initGeometry(e){const t=e.geometry,i=this.get(t);i.initialized=!0,this.info.memory.geometries++;const n=()=>{this.info.memory.geometries--;const s=t.index,o=e.getAttributes();s!==null&&this.attributes.delete(s);for(const l of o)this.attributes.delete(l);const a=this.wireframes.get(t);a!==void 0&&this.attributes.delete(a),t.removeEventListener("dispose",n)};t.addEventListener("dispose",n)}updateAttributes(e){const t=e.getAttributes();for(const s of t)s.isStorageBufferAttribute||s.isStorageInstancedBufferAttribute?this.updateAttribute(s,wn.STORAGE):this.updateAttribute(s,wn.VERTEX);const i=this.getIndex(e);i!==null&&this.updateAttribute(i,wn.INDEX);const n=e.geometry.indirect;n!==null&&this.updateAttribute(n,wn.INDIRECT)}updateAttribute(e,t){const i=this.info.render.calls;e.isInterleavedBufferAttribute?this.attributeCall.get(e)===void 0?(this.attributes.update(e,t),this.attributeCall.set(e,i)):this.attributeCall.get(e.data)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e.data,i),this.attributeCall.set(e,i)):this.attributeCall.get(e)!==i&&(this.attributes.update(e,t),this.attributeCall.set(e,i))}getIndirect(e){return e.geometry.indirect}getIndex(e){const{geometry:t,material:i}=e;let n=t.index;if(i.wireframe===!0){const s=this.wireframes;let o=s.get(t);o===void 0?(o=gx(t),s.set(t,o)):o.version!==fT(t)&&(this.attributes.delete(o),o=gx(t),s.set(t,o)),n=o}return n}}class QP{constructor(){this.autoReset=!0,this.frame=0,this.calls=0,this.render={calls:0,frameCalls:0,drawCalls:0,triangles:0,points:0,lines:0,timestamp:0},this.compute={calls:0,frameCalls:0,timestamp:0},this.memory={geometries:0,textures:0}}update(e,t,i){this.render.drawCalls++,e.isMesh||e.isSprite?this.render.triangles+=i*(t/3):e.isPoints?this.render.points+=i*t:e.isLineSegments?this.render.lines+=i*(t/2):e.isLine?this.render.lines+=i*(t-1):console.error("THREE.WebGPUInfo: Unknown object type.")}reset(){this.render.drawCalls=0,this.render.frameCalls=0,this.compute.frameCalls=0,this.render.triangles=0,this.render.points=0,this.render.lines=0}dispose(){this.reset(),this.calls=0,this.render.calls=0,this.compute.calls=0,this.render.timestamp=0,this.compute.timestamp=0,this.memory.geometries=0,this.memory.textures=0}}class pT{constructor(e){this.cacheKey=e,this.usedTimes=0}}class JP extends pT{constructor(e,t,i){super(e),this.vertexProgram=t,this.fragmentProgram=i}}class eD extends pT{constructor(e,t){super(e),this.computeProgram=t,this.isComputePipeline=!0}}let tD=0;class Ff{constructor(e,t,i,n=null,s=null){this.id=tD++,this.code=e,this.stage=t,this.name=i,this.transforms=n,this.attributes=s,this.usedTimes=0}}class iD extends vr{constructor(e,t){super(),this.backend=e,this.nodes=t,this.bindings=null,this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}getForCompute(e,t){const{backend:i}=this,n=this.get(e);if(this._needsComputeUpdate(e)){const s=n.pipeline;s&&(s.usedTimes--,s.computeProgram.usedTimes--);const o=this.nodes.getForCompute(e);let a=this.programs.compute.get(o.computeShader);a===void 0&&(s&&s.computeProgram.usedTimes===0&&this._releaseProgram(s.computeProgram),a=new Ff(o.computeShader,"compute",e.name,o.transforms,o.nodeAttributes),this.programs.compute.set(o.computeShader,a),i.createProgram(a));const l=this._getComputeCacheKey(e,a);let c=this.caches.get(l);c===void 0&&(s&&s.usedTimes===0&&this._releasePipeline(s),c=this._getComputePipeline(e,a,l,t)),c.usedTimes++,a.usedTimes++,n.version=e.version,n.pipeline=c}return n.pipeline}getForRender(e,t=null){const{backend:i}=this,n=this.get(e);if(this._needsRenderUpdate(e)){const s=n.pipeline;s&&(s.usedTimes--,s.vertexProgram.usedTimes--,s.fragmentProgram.usedTimes--);const o=e.getNodeBuilderState(),a=e.material?e.material.name:"";let l=this.programs.vertex.get(o.vertexShader);l===void 0&&(s&&s.vertexProgram.usedTimes===0&&this._releaseProgram(s.vertexProgram),l=new Ff(o.vertexShader,"vertex",a),this.programs.vertex.set(o.vertexShader,l),i.createProgram(l));let c=this.programs.fragment.get(o.fragmentShader);c===void 0&&(s&&s.fragmentProgram.usedTimes===0&&this._releaseProgram(s.fragmentProgram),c=new Ff(o.fragmentShader,"fragment",a),this.programs.fragment.set(o.fragmentShader,c),i.createProgram(c));const u=this._getRenderCacheKey(e,l,c);let h=this.caches.get(u);h===void 0?(s&&s.usedTimes===0&&this._releasePipeline(s),h=this._getRenderPipeline(e,l,c,u,t)):e.pipeline=h,h.usedTimes++,l.usedTimes++,c.usedTimes++,n.pipeline=h}return n.pipeline}delete(e){const t=this.get(e).pipeline;return t&&(t.usedTimes--,t.usedTimes===0&&this._releasePipeline(t),t.isComputePipeline?(t.computeProgram.usedTimes--,t.computeProgram.usedTimes===0&&this._releaseProgram(t.computeProgram)):(t.fragmentProgram.usedTimes--,t.vertexProgram.usedTimes--,t.vertexProgram.usedTimes===0&&this._releaseProgram(t.vertexProgram),t.fragmentProgram.usedTimes===0&&this._releaseProgram(t.fragmentProgram))),super.delete(e)}dispose(){super.dispose(),this.caches=new Map,this.programs={vertex:new Map,fragment:new Map,compute:new Map}}updateForRender(e){this.getForRender(e)}_getComputePipeline(e,t,i,n){i=i||this._getComputeCacheKey(e,t);let s=this.caches.get(i);return s===void 0&&(s=new eD(i,t),this.caches.set(i,s),this.backend.createComputePipeline(s,n)),s}_getRenderPipeline(e,t,i,n,s){n=n||this._getRenderCacheKey(e,t,i);let o=this.caches.get(n);return o===void 0&&(o=new JP(n,t,i),this.caches.set(n,o),e.pipeline=o,this.backend.createRenderPipeline(e,s)),o}_getComputeCacheKey(e,t){return e.id+","+t.id}_getRenderCacheKey(e,t,i){return t.id+","+i.id+","+this.backend.getRenderCacheKey(e)}_releasePipeline(e){this.caches.delete(e.cacheKey)}_releaseProgram(e){const t=e.code,i=e.stage;this.programs[i].delete(t)}_needsComputeUpdate(e){const t=this.get(e);return t.pipeline===void 0||t.version!==e.version}_needsRenderUpdate(e){return this.get(e).pipeline===void 0||this.backend.needsRenderUpdate(e)}}class nD extends vr{constructor(e,t,i,n,s,o){super(),this.backend=e,this.textures=i,this.pipelines=s,this.attributes=n,this.nodes=t,this.info=o,this.pipelines.bindings=this}getForRender(e){const t=e.getBindings();for(const i of t){const n=this.get(i);n.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,t,0),n.bindGroup=i)}return t}getForCompute(e){const t=this.nodes.getForCompute(e).bindings;for(const i of t){const n=this.get(i);n.bindGroup===void 0&&(this._init(i),this.backend.createBindings(i,t,0),n.bindGroup=i)}return t}updateForCompute(e){this._updateBindings(this.getForCompute(e))}updateForRender(e){this._updateBindings(this.getForRender(e))}_updateBindings(e){for(const t of e)this._update(t,e)}_init(e){for(const t of e.bindings)if(t.isSampledTexture)this.textures.updateTexture(t.texture);else if(t.isStorageBuffer){const i=t.attribute,n=i.isIndirectStorageBufferAttribute?wn.INDIRECT:wn.STORAGE;this.attributes.update(i,n)}}_update(e,t){const{backend:i}=this;let n=!1,s=!0,o=0,a=0;for(const l of e.bindings)if(!(l.isNodeUniformsGroup&&this.nodes.updateGroup(l)===!1)){if(l.isStorageBuffer){const c=l.attribute,u=c.isIndirectStorageBufferAttribute?wn.INDIRECT:wn.STORAGE;this.attributes.update(c,u)}if(l.isUniformBuffer)l.update()&&i.updateBinding(l);else if(l.isSampledTexture){const c=l.update(),u=l.texture,h=this.textures.get(u);if(c&&(this.textures.updateTexture(u),l.generation!==h.generation&&(l.generation=h.generation,n=!0)),i.get(u).externalTexture!==void 0||h.isDefaultTexture?s=!1:(o=o*10+u.id,a+=u.version),u.isStorageTexture===!0){const f=this.get(u);l.store===!0?f.needsMipmap=!0:this.textures.needsMipmaps(u)&&f.needsMipmap===!0&&(this.backend.generateMipmaps(u),f.needsMipmap=!1)}}else l.isSampler&&l.update()}n===!0&&this.backend.updateBindings(e,t,s?o:0,a)}}function sD(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?r.z-e.z:r.id-e.id}function _x(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function xx(r){return(r.transmission>0||r.transmissionNode)&&r.side===Ai&&r.forceSinglePass===!1}class rD{constructor(e,t,i){this.renderItems=[],this.renderItemsIndex=0,this.opaque=[],this.transparentDoublePass=[],this.transparent=[],this.bundles=[],this.lightsNode=e.getNode(t,i),this.lightsArray=[],this.scene=t,this.camera=i,this.occlusionQueryCount=0}begin(){return this.renderItemsIndex=0,this.opaque.length=0,this.transparentDoublePass.length=0,this.transparent.length=0,this.bundles.length=0,this.lightsArray.length=0,this.occlusionQueryCount=0,this}getNextRenderItem(e,t,i,n,s,o,a){let l=this.renderItems[this.renderItemsIndex];return l===void 0?(l={id:e.id,object:e,geometry:t,material:i,groupOrder:n,renderOrder:e.renderOrder,z:s,group:o,clippingContext:a},this.renderItems[this.renderItemsIndex]=l):(l.id=e.id,l.object=e,l.geometry=t,l.material=i,l.groupOrder=n,l.renderOrder=e.renderOrder,l.z=s,l.group=o,l.clippingContext=a),this.renderItemsIndex++,l}push(e,t,i,n,s,o,a){const l=this.getNextRenderItem(e,t,i,n,s,o,a);e.occlusionTest===!0&&this.occlusionQueryCount++,i.transparent===!0||i.transmission>0?(xx(i)&&this.transparentDoublePass.push(l),this.transparent.push(l)):this.opaque.push(l)}unshift(e,t,i,n,s,o,a){const l=this.getNextRenderItem(e,t,i,n,s,o,a);i.transparent===!0||i.transmission>0?(xx(i)&&this.transparentDoublePass.unshift(l),this.transparent.unshift(l)):this.opaque.unshift(l)}pushBundle(e){this.bundles.push(e)}pushLight(e){this.lightsArray.push(e)}sort(e,t){this.opaque.length>1&&this.opaque.sort(e||sD),this.transparentDoublePass.length>1&&this.transparentDoublePass.sort(t||_x),this.transparent.length>1&&this.transparent.sort(t||_x)}finish(){this.lightsNode.setLights(this.lightsArray);for(let e=this.renderItemsIndex,t=this.renderItems.length;e<t;e++){const i=this.renderItems[e];if(i.id===null)break;i.id=null,i.object=null,i.geometry=null,i.material=null,i.groupOrder=null,i.renderOrder=null,i.z=null,i.group=null,i.clippingContext=null}}}const Nl=[];class oD{constructor(e){this.lighting=e,this.lists=new hs}get(e,t){const i=this.lists;Nl[0]=e,Nl[1]=t;let n=i.get(Nl);return n===void 0&&(n=new rD(this.lighting,e,t),i.set(Nl,n)),Nl.length=0,n}dispose(){this.lists=new hs}}let aD=0;class lD{constructor(){this.id=aD++,this.color=!0,this.clearColor=!0,this.clearColorValue={r:0,g:0,b:0,a:1},this.depth=!0,this.clearDepth=!0,this.clearDepthValue=1,this.stencil=!1,this.clearStencil=!0,this.clearStencilValue=1,this.viewport=!1,this.viewportValue=new je,this.scissor=!1,this.scissorValue=new je,this.renderTarget=null,this.textures=null,this.depthTexture=null,this.activeCubeFace=0,this.activeMipmapLevel=0,this.sampleCount=1,this.width=0,this.height=0,this.occlusionQueryCount=0,this.clippingContext=null,this.isRenderContext=!0}getCacheKey(){return mT(this)}}function mT(r){const{textures:e,activeCubeFace:t}=r,i=[t];for(const n of e)i.push(n.id);return Km(i)}const Pl=[],cD=new td,uD=new Nm;class hD{constructor(){this.chainMaps={}}get(e,t,i=null){Pl[0]=e,Pl[1]=t;let n;if(i===null)n="default";else{const a=i.texture.format;n=`${i.textures.length}:${a}:${i.samples}:${i.depthBuffer}:${i.stencilBuffer}`}const s=this._getChainMap(n);let o=s.get(Pl);return o===void 0&&(o=new lD,s.set(Pl,o)),Pl.length=0,i!==null&&(o.sampleCount=i.samples===0?1:i.samples),o}getForClear(e=null){return this.get(cD,uD,e)}_getChainMap(e){return this.chainMaps[e]||(this.chainMaps[e]=new hs)}dispose(){this.chainMaps={}}}const dD=new B;class fD extends vr{constructor(e,t,i){super(),this.renderer=e,this.backend=t,this.info=i}updateRenderTarget(e,t=0){const i=this.get(e),n=e.samples===0?1:e.samples,s=i.depthTextureMips||(i.depthTextureMips={}),o=e.textures,a=this.getSize(o[0]),l=a.width>>t,c=a.height>>t;let u=e.depthTexture||s[t];const h=e.depthBuffer===!0||e.stencilBuffer===!0;let d=!1;u===void 0&&h&&(u=new Xn,u.format=e.stencilBuffer?_n:gn,u.type=e.stencilBuffer?mn:Mt,u.image.width=l,u.image.height=c,u.image.depth=a.depth,u.isArrayTexture=e.multiview===!0&&a.depth>1,s[t]=u),(i.width!==a.width||a.height!==i.height)&&(d=!0,u&&(u.needsUpdate=!0,u.image.width=l,u.image.height=c,u.image.depth=u.isArrayTexture?u.image.depth:1)),i.width=a.width,i.height=a.height,i.textures=o,i.depthTexture=u||null,i.depth=e.depthBuffer,i.stencil=e.stencilBuffer,i.renderTarget=e,i.sampleCount!==n&&(d=!0,u&&(u.needsUpdate=!0),i.sampleCount=n);const f={sampleCount:n};if(e.isXRRenderTarget!==!0){for(let p=0;p<o.length;p++){const _=o[p];d&&(_.needsUpdate=!0),this.updateTexture(_,f)}u&&this.updateTexture(u,f)}if(i.initialized!==!0){i.initialized=!0;const p=()=>{e.removeEventListener("dispose",p);for(let _=0;_<o.length;_++)this._destroyTexture(o[_]);u&&this._destroyTexture(u),this.delete(e)};e.addEventListener("dispose",p)}}updateTexture(e,t={}){const i=this.get(e);if(i.initialized===!0&&i.version===e.version)return;const n=e.isRenderTargetTexture||e.isDepthTexture||e.isFramebufferTexture,s=this.backend;if(n&&i.initialized===!0&&(s.destroySampler(e),s.destroyTexture(e)),e.isFramebufferTexture){const c=this.renderer.getRenderTarget();c?e.type=c.texture.type:e.type=zt}const{width:o,height:a,depth:l}=this.getSize(e);if(t.width=o,t.height=a,t.depth=l,t.needsMipmaps=this.needsMipmaps(e),t.levels=t.needsMipmaps?this.getMipLevels(e,o,a):1,n||e.isStorageTexture===!0)s.createSampler(e),s.createTexture(e,t),i.generation=e.version;else if(i.initialized!==!0&&s.createSampler(e),e.version>0){const u=e.image;if(u===void 0)console.warn("THREE.Renderer: Texture marked for update but image is undefined.");else if(u.complete===!1)console.warn("THREE.Renderer: Texture marked for update but image is incomplete.");else{if(e.images){const h=[];for(const d of e.images)h.push(d);t.images=h}else t.image=u;(i.isDefaultTexture===void 0||i.isDefaultTexture===!0)&&(s.createTexture(e,t),i.isDefaultTexture=!1,i.generation=e.version),e.source.dataReady===!0&&s.updateTexture(e,t),t.needsMipmaps&&e.mipmaps.length===0&&s.generateMipmaps(e)}}else s.createDefaultTexture(e),i.isDefaultTexture=!0,i.generation=e.version;if(i.initialized!==!0){i.initialized=!0,i.generation=e.version,this.info.memory.textures++;const c=()=>{e.removeEventListener("dispose",c),this._destroyTexture(e)};e.addEventListener("dispose",c)}i.version=e.version}getSize(e,t=dD){let i=e.images?e.images[0]:e.image;return i?(i.image!==void 0&&(i=i.image),i instanceof HTMLVideoElement?(t.width=i.videoWidth||1,t.height=i.videoHeight||1,t.depth=1):i instanceof VideoFrame?(t.width=i.displayWidth||1,t.height=i.displayHeight||1,t.depth=1):(t.width=i.width||1,t.height=i.height||1,t.depth=e.isCubeTexture?6:i.depth||1)):t.width=t.height=t.depth=1,t}getMipLevels(e,t,i){let n;return e.isCompressedTexture?e.mipmaps?n=e.mipmaps.length:n=1:n=Math.floor(Math.log2(Math.max(t,i)))+1,n}needsMipmaps(e){return e.isCompressedTexture===!0||e.generateMipmaps}_destroyTexture(e){this.has(e)===!0&&(this.backend.destroySampler(e),this.backend.destroyTexture(e),this.delete(e),this.info.memory.textures--)}}class Zm extends ct{constructor(e,t,i,n=1){super(e,t,i),this.a=n}set(e,t,i,n=1){return this.a=n,super.set(e,t,i)}copy(e){return e.a!==void 0&&(this.a=e.a),super.copy(e)}clone(){return new this.constructor(this.r,this.g,this.b,this.a)}}const ih={VERTEX:"vertex"},it={NONE:"none",FRAME:"frame",RENDER:"render",OBJECT:"object"},os={READ_ONLY:"readOnly",WRITE_ONLY:"writeOnly",READ_WRITE:"readWrite"},pD=["fragment","vertex"],yx=["setup","analyze","generate"],bx=[...pD,"compute"],ul=["x","y","z","w"],mD={analyze:"setup",generate:"analyze"};let gD=0;class He extends Sr{static get type(){return"Node"}constructor(e=null){super(),this.nodeType=e,this.updateType=it.NONE,this.updateBeforeType=it.NONE,this.updateAfterType=it.NONE,this.uuid=GE.generateUUID(),this.version=0,this.global=!1,this.parents=!1,this.isNode=!0,this._cacheKey=null,this._cacheKeyVersion=0,Object.defineProperty(this,"id",{value:gD++})}set needsUpdate(e){e===!0&&this.version++}get type(){return this.constructor.type}onUpdate(e,t){return this.updateType=t,this.update=e.bind(this.getSelf()),this}onFrameUpdate(e){return this.onUpdate(e,it.FRAME)}onRenderUpdate(e){return this.onUpdate(e,it.RENDER)}onObjectUpdate(e){return this.onUpdate(e,it.OBJECT)}onReference(e){return this.updateReference=e.bind(this.getSelf()),this}getSelf(){return this.self||this}updateReference(){return this}isGlobal(){return this.global}*getChildren(){for(const{childNode:e}of Oh(this))yield e}dispose(){this.dispatchEvent({type:"dispose"})}traverse(e){e(this);for(const t of this.getChildren())t.traverse(e)}getCacheKey(e=!1){return e=e||this.version!==this._cacheKeyVersion,(e===!0||this._cacheKey===null)&&(this._cacheKey=Bh(hT(this,e),this.customCacheKey()),this._cacheKeyVersion=this.version),this._cacheKey}customCacheKey(){return 0}getScope(){return this}getHash(){return this.uuid}getUpdateType(){return this.updateType}getUpdateBeforeType(){return this.updateBeforeType}getUpdateAfterType(){return this.updateAfterType}getElementType(e){const t=this.getNodeType(e);return e.getElementType(t)}getMemberType(){return"void"}getNodeType(e){const t=e.getNodeProperties(this);return t.outputNode?t.outputNode.getNodeType(e):this.nodeType}getShared(e){const t=this.getHash(e);return e.getNodeFromHash(t)||this}getArrayCount(){return null}setup(e){const t=e.getNodeProperties(this);let i=0;for(const n of this.getChildren())t["node"+i++]=n;return t.outputNode||null}analyze(e,t=null){const i=e.increaseUsage(this);if(this.parents===!0){const n=e.getDataFromNode(this,"any");n.stages=n.stages||{},n.stages[e.shaderStage]=n.stages[e.shaderStage]||[],n.stages[e.shaderStage].push(t)}if(i===1){const n=e.getNodeProperties(this);for(const s of Object.values(n))s&&s.isNode===!0&&s.build(e,this)}}generate(e,t){const{outputNode:i}=e.getNodeProperties(this);if(i&&i.isNode===!0)return i.build(e,t)}updateBefore(){console.warn("Abstract function.")}updateAfter(){console.warn("Abstract function.")}update(){console.warn("Abstract function.")}build(e,t=null){const i=this.getShared(e);if(this!==i)return i.build(e,t);const n=e.getDataFromNode(this);n.buildStages=n.buildStages||{},n.buildStages[e.buildStage]=!0;const s=mD[e.buildStage];if(s&&n.buildStages[s]!==!0){const l=e.getBuildStage();e.setBuildStage(s),this.build(e),e.setBuildStage(l)}e.addNode(this),e.addChain(this);let o=null;const a=e.getBuildStage();if(a==="setup"){this.updateReference(e);const l=e.getNodeProperties(this);if(l.initialized!==!0){l.initialized=!0,l.outputNode=this.setup(e)||l.outputNode||null;for(const c of Object.values(l))if(c&&c.isNode===!0){if(c.parents===!0){const u=e.getNodeProperties(c);u.parents=u.parents||[],u.parents.push(this)}c.build(e)}}o=l.outputNode}else if(a==="analyze")this.analyze(e,t);else if(a==="generate")if(this.generate.length===1){const c=this.getNodeType(e),u=e.getDataFromNode(this);o=u.snippet,o===void 0?u.generated===void 0?(u.generated=!0,o=this.generate(e)||"",u.snippet=o):(console.warn("THREE.Node: Recursion detected.",this),o="/* Recursion detected. */"):u.flowCodes!==void 0&&e.context.nodeBlock!==void 0&&e.addFlowCodeHierarchy(this,e.context.nodeBlock),o=e.format(o,c,t)}else o=this.generate(e,t)||"";return e.removeChain(this),e.addSequentialNode(this),o}getSerializeChildren(){return Oh(this)}serialize(e){const t=this.getSerializeChildren(),i={};for(const{property:n,index:s,childNode:o}of t)s!==void 0?(i[n]===void 0&&(i[n]=Number.isInteger(s)?[]:{}),i[n][s]=o.toJSON(e.meta).uuid):i[n]=o.toJSON(e.meta).uuid;Object.keys(i).length>0&&(e.inputNodes=i)}deserialize(e){if(e.inputNodes!==void 0){const t=e.meta.nodes;for(const i in e.inputNodes)if(Array.isArray(e.inputNodes[i])){const n=[];for(const s of e.inputNodes[i])n.push(t[s]);this[i]=n}else if(typeof e.inputNodes[i]=="object"){const n={};for(const s in e.inputNodes[i]){const o=e.inputNodes[i][s];n[s]=t[o]}this[i]=n}else{const n=e.inputNodes[i];this[i]=t[n]}}}toJSON(e){const{uuid:t,type:i}=this,n=e===void 0||typeof e=="string";n&&(e={textures:{},images:{},nodes:{}});let s=e.nodes[t];s===void 0&&(s={uuid:t,type:i,meta:e,metadata:{version:4.7,type:"Node",generator:"Node.toJSON"}},n!==!0&&(e.nodes[s.uuid]=s),this.serialize(s),delete s.meta);function o(a){const l=[];for(const c in a){const u=a[c];delete u.metadata,l.push(u)}return l}if(n){const a=o(e.textures),l=o(e.images),c=o(e.nodes);a.length>0&&(s.textures=a),l.length>0&&(s.images=l),c.length>0&&(s.nodes=c)}return s}}class yi extends He{static get type(){return"TempNode"}constructor(e=null){super(e),this.isTempNode=!0}hasDependencies(e){return e.getDataFromNode(this).usageCount>1}build(e,t){if(e.getBuildStage()==="generate"){const n=e.getVectorType(this.getNodeType(e,t)),s=e.getDataFromNode(this);if(s.propertyName!==void 0)return e.format(s.propertyName,n,t);if(n!=="void"&&t!=="void"&&this.hasDependencies(e)){const o=super.build(e,n),a=e.getVarFromNode(this,null,n),l=e.getPropertyName(a);return e.addLineFlowCode(`${l} = ${o}`,this),s.snippet=o,s.propertyName=l,e.format(s.propertyName,n,t)}}return super.build(e,t)}}class Yc extends He{static get type(){return"ArrayElementNode"}constructor(e,t){super(),this.node=e,this.indexNode=t,this.isArrayElementNode=!0}getNodeType(e){return this.node.getElementType(e)}generate(e){const t=this.indexNode.getNodeType(e),i=this.node.build(e),n=this.indexNode.build(e,!e.isVector(t)&&e.isInteger(t)?t:"uint");return`${i}[ ${n} ]`}}class gT extends He{static get type(){return"ConvertNode"}constructor(e,t){super(),this.node=e,this.convertTo=t}getNodeType(e){const t=this.node.getNodeType(e);let i=null;for(const n of this.convertTo.split("|"))(i===null||e.getTypeLength(t)===e.getTypeLength(n))&&(i=n);return i}serialize(e){super.serialize(e),e.convertTo=this.convertTo}deserialize(e){super.deserialize(e),this.convertTo=e.convertTo}generate(e,t){const i=this.node,n=this.getNodeType(e),s=i.build(e,n);return e.format(s,n,t)}}class _D extends yi{static get type(){return"JoinNode"}constructor(e=[],t=null){super(t),this.nodes=e}getNodeType(e){return this.nodeType!==null?e.getVectorType(this.nodeType):e.getTypeFromLength(this.nodes.reduce((t,i)=>t+e.getTypeLength(i.getNodeType(e)),0))}generate(e,t){const i=this.getNodeType(e),n=e.getTypeLength(i),s=this.nodes,o=e.getComponentType(i),a=[];let l=0;for(const u of s){if(l>=n){console.error(`THREE.TSL: Length of parameters exceeds maximum length of function '${i}()' type.`);break}let h=u.getNodeType(e),d=e.getTypeLength(h),f;l+d>n&&(console.error(`THREE.TSL: Length of '${i}()' data exceeds maximum length of output type.`),d=n-l,h=e.getTypeFromLength(d)),l+=d,f=u.build(e,h);const p=e.getComponentType(h);p!==o&&(f=e.format(f,p,o)),a.push(f)}const c=`${e.getType(i)}( ${a.join(", ")} )`;return e.format(c,i,t)}}const xD=ul.join("");class Tx extends He{static get type(){return"SplitNode"}constructor(e,t="x"){super(),this.node=e,this.components=t,this.isSplitNode=!0}getVectorLength(){let e=this.components.length;for(const t of this.components)e=Math.max(ul.indexOf(t)+1,e);return e}getComponentType(e){return e.getComponentType(this.node.getNodeType(e))}getNodeType(e){return e.getTypeFromLength(this.components.length,this.getComponentType(e))}generate(e,t){const i=this.node,n=e.getTypeLength(i.getNodeType(e));let s=null;if(n>1){let o=null;this.getVectorLength()>=n&&(o=e.getTypeFromLength(this.getVectorLength(),this.getComponentType(e)));const l=i.build(e,o);this.components.length===n&&this.components===xD.slice(0,this.components.length)?s=e.format(l,o,t):s=e.format(`${l}.${this.components}`,this.getNodeType(e),t)}else s=i.build(e,t);return s}serialize(e){super.serialize(e),e.components=this.components}deserialize(e){super.deserialize(e),this.components=e.components}}class yD extends yi{static get type(){return"SetNode"}constructor(e,t,i){super(),this.sourceNode=e,this.components=t,this.targetNode=i}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{sourceNode:t,components:i,targetNode:n}=this,s=this.getNodeType(e),o=e.getComponentType(n.getNodeType(e)),a=e.getTypeFromLength(i.length,o),l=n.build(e,a),c=t.build(e,s),u=e.getTypeLength(s),h=[];for(let d=0;d<u;d++){const f=ul[d];f===i[0]?(h.push(l),d+=i.length-1):h.push(c+"."+f)}return`${e.getType(s)}( ${h.join(", ")} )`}}class bD extends yi{static get type(){return"FlipNode"}constructor(e,t){super(),this.sourceNode=e,this.components=t}getNodeType(e){return this.sourceNode.getNodeType(e)}generate(e){const{components:t,sourceNode:i}=this,n=this.getNodeType(e),s=i.build(e),o=e.getVarFromNode(this),a=e.getPropertyName(o);e.addLineFlowCode(a+" = "+s,this);const l=e.getTypeLength(n),c=[];let u=0;for(let h=0;h<l;h++){const d=ul[h];d===t[u]?(c.push("1.0 - "+(a+"."+d)),u++):c.push(a+"."+d)}return`${e.getType(n)}( ${c.join(", ")} )`}}class Qm extends He{static get type(){return"InputNode"}constructor(e,t=null){super(t),this.isInputNode=!0,this.value=e,this.precision=null}getNodeType(){return this.nodeType===null?kh(this.value):this.nodeType}getInputType(e){return this.getNodeType(e)}setPrecision(e){return this.precision=e,this}serialize(e){super.serialize(e),e.value=this.value,this.value&&this.value.toArray&&(e.value=this.value.toArray()),e.valueType=kh(this.value),e.nodeType=this.nodeType,e.valueType==="ArrayBuffer"&&(e.value=VP(e.value)),e.precision=this.precision}deserialize(e){super.deserialize(e),this.nodeType=e.nodeType,this.value=Array.isArray(e.value)?dT(e.valueType,...e.value):e.value,this.precision=e.precision||null,this.value&&this.value.fromArray&&(this.value=this.value.fromArray(e.value))}generate(){console.warn("Abstract function.")}}const Sx=/float|u?int/;class Ys extends Qm{static get type(){return"ConstNode"}constructor(e,t=null){super(e,t),this.isConstNode=!0}generateConst(e){return e.generateConst(this.getNodeType(e),this.value)}generate(e,t){const i=this.getNodeType(e);return Sx.test(i)&&Sx.test(t)?e.generateConst(t,this.value):e.format(this.generateConst(e),i,t)}}class TD extends He{static get type(){return"MemberNode"}constructor(e,t){super(),this.node=e,this.property=t,this.isMemberNode=!0}getNodeType(e){return this.node.getMemberType(e,this.property)}generate(e){return this.node.build(e)+"."+this.property}}let Za=null;const aa=new Map;function q(r,e){if(aa.has(r)){console.warn(`THREE.TSL: Redefinition of method chaining '${r}'.`);return}if(typeof e!="function")throw new Error(`THREE.TSL: Node element ${r} is not a function`);aa.set(r,e)}const _T=r=>r.replace(/r|s/g,"x").replace(/g|t/g,"y").replace(/b|p/g,"z").replace(/a|q/g,"w"),vx=r=>_T(r).split("").sort().join(""),xT={setup(r,e){const t=e.shift();return r(ld(t),...e)},get(r,e,t){if(typeof e=="string"&&r[e]===void 0){if(r.isStackNode!==!0&&e==="assign")return(...i)=>(Za.assign(t,...i),t);if(aa.has(e)){const i=aa.get(e);return r.isStackNode?(...n)=>t.add(i(...n)):(...n)=>i(t,...n)}else{if(e==="toVarIntent")return()=>t;if(e==="self")return r;if(e.endsWith("Assign")&&aa.has(e.slice(0,e.length-6))){const i=aa.get(e.slice(0,e.length-6));return r.isStackNode?(...n)=>t.assign(n[0],i(...n)):(...n)=>t.assign(i(t,...n))}else{if(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0)return e=_T(e),ee(new Tx(t,e));if(/^set[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=vx(e.slice(3).toLowerCase()),i=>ee(new yD(r,e,ee(i)));if(/^flip[XYZWRGBASTPQ]{1,4}$/.test(e)===!0)return e=vx(e.slice(4).toLowerCase()),()=>ee(new bD(ee(r),e));if(e==="width"||e==="height"||e==="depth")return e==="width"?e="x":e==="height"?e="y":e==="depth"&&(e="z"),ee(new Tx(r,e));if(/^\d+$/.test(e)===!0)return ee(new Yc(t,new Ys(Number(e),"uint")));if(/^get$/.test(e)===!0)return i=>ee(new TD(t,i))}}}return Reflect.get(r,e,t)},set(r,e,t,i){return typeof e=="string"&&r[e]===void 0&&(/^[xyzwrgbastpq]{1,4}$/.test(e)===!0||e==="width"||e==="height"||e==="depth"||/^\d+$/.test(e)===!0)?(i[e].assign(t),!0):Reflect.set(r,e,t,i)}},Uf=new WeakMap,Mx=new WeakMap,SD=function(r,e=null){const t=kh(r);if(t==="node"){let i=Uf.get(r);return i===void 0&&(i=new Proxy(r,xT),Uf.set(r,i),Uf.set(i,i)),i}else{if(e===null&&(t==="float"||t==="boolean")||t&&t!=="shader"&&t!=="string")return ee(Bp(r,e));if(t==="shader")return r.isFn?r:Re(r)}return r},vD=function(r,e=null){for(const t in r)r[t]=ee(r[t],e);return r},MD=function(r,e=null){const t=r.length;for(let i=0;i<t;i++)r[i]=ee(r[i],e);return r},yT=function(r,e=null,t=null,i=null){function n(u){return i!==null?(u=ee(Object.assign(u,i)),i.intent===!0&&(u=u.toVarIntent())):u=ee(u),u}let s,o=e,a,l;function c(u){let h;return o?h=/[a-z]/i.test(o)?o+"()":o:h=r.type,a!==void 0&&u.length<a?(console.error(`THREE.TSL: "${h}" parameter length is less than minimum required.`),u.concat(new Array(a-u.length).fill(0))):l!==void 0&&u.length>l?(console.error(`THREE.TSL: "${h}" parameter length exceeds limit.`),u.slice(0,l)):u}return e===null?s=(...u)=>n(new r(...ga(c(u)))):t!==null?(t=ee(t),s=(...u)=>n(new r(e,...ga(c(u)),t))):s=(...u)=>n(new r(e,...ga(c(u)))),s.setParameterLength=(...u)=>(u.length===1?a=l=u[0]:u.length===2&&([a,l]=u),s),s.setName=u=>(o=u,s),s},ED=function(r,...e){return ee(new r(...ga(e)))};class AD extends He{constructor(e,t){super(),this.shaderNode=e,this.inputNodes=t,this.isShaderCallNodeInternal=!0}getNodeType(e){return this.shaderNode.nodeType||this.getOutputNode(e).getNodeType(e)}getMemberType(e,t){return this.getOutputNode(e).getMemberType(e,t)}call(e){const{shaderNode:t,inputNodes:i}=this,n=e.getNodeProperties(t),s=e.getClosestSubBuild(t.subBuilds)||"",o=s||"default";if(n[o])return n[o];const a=e.subBuildFn;e.subBuildFn=s;let l=null;if(t.layout){let c=Mx.get(e.constructor);c===void 0&&(c=new WeakMap,Mx.set(e.constructor,c));let u=c.get(t);u===void 0&&(u=ee(e.buildFunctionNode(t)),c.set(t,u)),e.addInclude(u),l=ee(u.call(i))}else{let c=i;if(Array.isArray(c)){let d=0;c=new Proxy(c,{get:(f,p,_)=>f[p]===void 0?f[d++]:Reflect.get(f,p,_)})}const u=t.jsFunc,h=c!==null||u.length>1?u(c||[],e):u(e);l=ee(h)}return e.subBuildFn=a,t.once&&(n[o]=l),l}setupOutput(e){return e.addStack(),e.stack.outputNode=this.call(e),e.removeStack()}getOutputNode(e){const t=e.getNodeProperties(this),i=e.getSubBuildOutput(this);return t[i]=t[i]||this.setupOutput(e),t[i].subBuild=e.getClosestSubBuild(this),t[i]}build(e,t=null){let i=null;const n=e.getBuildStage(),s=e.getNodeProperties(this),o=e.getSubBuildOutput(this),a=this.getOutputNode(e);if(n==="setup"){const l=e.getSubBuildProperty("initialized",this);if(s[l]!==!0&&(s[l]=!0,s[o]=this.getOutputNode(e),s[o].build(e),this.shaderNode.subBuilds))for(const c of e.chaining){const u=e.getDataFromNode(c,"any");u.subBuilds=u.subBuilds||new Set;for(const h of this.shaderNode.subBuilds)u.subBuilds.add(h)}i=s[o]}else n==="analyze"?a.build(e,t):n==="generate"&&(i=a.build(e,t)||"");return i}}class wD extends He{constructor(e,t){super(t),this.jsFunc=e,this.layout=null,this.global=!0,this.once=!1}setLayout(e){return this.layout=e,this}call(e=null){return ld(e),ee(new AD(this,e))}setup(){return this.call()}}const RD=[!1,!0],CD=[0,1,2,3],ND=[-1,-2],bT=[.5,1.5,1/3,1e-6,1e6,Math.PI,Math.PI*2,1/Math.PI,2/Math.PI,1/(Math.PI*2),Math.PI/2],Jm=new Map;for(const r of RD)Jm.set(r,new Ys(r));const eg=new Map;for(const r of CD)eg.set(r,new Ys(r,"uint"));const tg=new Map([...eg].map(r=>new Ys(r.value,"int")));for(const r of ND)tg.set(r,new Ys(r,"int"));const od=new Map([...tg].map(r=>new Ys(r.value)));for(const r of bT)od.set(r,new Ys(r));for(const r of bT)od.set(-r,new Ys(-r));const ad={bool:Jm,uint:eg,ints:tg,float:od},Ex=new Map([...Jm,...od]),Bp=(r,e)=>Ex.has(r)?Ex.get(r):r.isNode===!0?r:new Ys(r,e),Qt=function(r,e=null){return(...t)=>{if((t.length===0||!["bool","float","int","uint"].includes(r)&&t.every(n=>typeof n!="object"))&&(t=[dT(r,...t)]),t.length===1&&e!==null&&e.has(t[0]))return nh(e.get(t[0]));if(t.length===1){const n=Bp(t[0],r);return n.nodeType===r?nh(n):nh(new gT(n,r))}const i=t.map(n=>Bp(n));return nh(new _D(i,r))}},PD=r=>r!=null?r.nodeType||r.convertTo||(typeof r=="string"?r:null):null;function Xl(r,e){return new Proxy(new wD(r,e),xT)}const ee=(r,e=null)=>SD(r,e),nh=(r,e=null)=>ee(r,e).toVarIntent(),ld=(r,e=null)=>new vD(r,e),ga=(r,e=null)=>new MD(r,e),mt=(r,e=null,t=null,i=null)=>new yT(r,e,t,i),Ot=(r,...e)=>new ED(r,...e),ge=(r,e=null,t=null,i={})=>new yT(r,e,t,{intent:!0,...i});let DD=0;const Re=(r,e=null)=>{let t=null;e!==null&&(typeof e=="object"?t=e.return:(typeof e=="string"?t=e:console.error("THREE.TSL: Invalid layout type."),e=null));const i=new Xl(r,t),n=(...s)=>{let o;ld(s),s[0]&&(s[0].isNode||Object.getPrototypeOf(s[0])!==Object.prototype)?o=[...s]:o=s[0];const l=i.call(o);return t==="void"&&l.toStack(),l.toVarIntent()};if(n.shaderNode=i,n.id=i.id,n.isFn=!0,n.getNodeType=(...s)=>i.getNodeType(...s),n.getCacheKey=(...s)=>i.getCacheKey(...s),n.setLayout=s=>(i.setLayout(s),n),n.once=(s=null)=>(i.once=!0,i.subBuilds=s,n),e!==null){if(typeof e.inputs!="object"){const s={name:"fn"+DD++,type:t,inputs:[]};for(const o in e)o!=="return"&&s.inputs.push({name:o,type:e[o]});e=s}n.setLayout(e)}return n},zh=r=>{Za=r},ig=()=>Za,Rn=(...r)=>Za.If(...r);function TT(r){return Za&&Za.add(r),r}q("toStack",TT);const LD=new Qt("color"),Ue=new Qt("float",ad.float),Zt=new Qt("int",ad.ints),ID=new Qt("uint",ad.uint),ng=new Qt("bool",ad.bool),ti=new Qt("vec2"),Ls=new Qt("ivec2"),FD=new Qt("uvec2"),UD=new Qt("bvec2"),Ee=new Qt("vec3"),BD=new Qt("ivec3"),OD=new Qt("uvec3"),kD=new Qt("bvec3"),_i=new Qt("vec4"),zD=new Qt("ivec4"),GD=new Qt("uvec4"),VD=new Qt("bvec4"),ST=new Qt("mat2"),xo=new Qt("mat3"),sg=new Qt("mat4");q("toColor",LD);q("toFloat",Ue);q("toInt",Zt);q("toUint",ID);q("toBool",ng);q("toVec2",ti);q("toIVec2",Ls);q("toUVec2",FD);q("toBVec2",UD);q("toVec3",Ee);q("toIVec3",BD);q("toUVec3",OD);q("toBVec3",kD);q("toVec4",_i);q("toIVec4",zD);q("toUVec4",GD);q("toBVec4",VD);q("toMat2",ST);q("toMat3",xo);q("toMat4",sg);const HD=mt(Yc).setParameterLength(2),WD=(r,e)=>ee(new gT(ee(r),e));q("element",HD);q("convert",WD);q("append",r=>(console.warn("THREE.TSL: .append() has been renamed to .toStack()."),TT(r)));class $D extends yi{static get type(){return"AssignNode"}constructor(e,t){super(),this.targetNode=e,this.sourceNode=t,this.isAssignNode=!0}hasDependencies(){return!1}getNodeType(e,t){return t!=="void"?this.targetNode.getNodeType(e):"void"}needsSplitAssign(e){const{targetNode:t}=this;if(e.isAvailable("swizzleAssign")===!1&&t.isSplitNode&&t.components.length>1){const i=e.getTypeLength(t.node.getNodeType(e));return ul.join("").slice(0,i)!==t.components}return!1}setup(e){const{targetNode:t,sourceNode:i}=this,n=e.getNodeProperties(t);n.assign=!0;const s=e.getNodeProperties(this);s.sourceNode=i,s.targetNode=t.context({assign:!0})}generate(e,t){const{targetNode:i,sourceNode:n}=e.getNodeProperties(this),s=this.needsSplitAssign(e),o=i.getNodeType(e),a=i.build(e),l=n.build(e,o),c=n.getNodeType(e),u=e.getDataFromNode(this);let h;if(u.initialized===!0)t!=="void"&&(h=a);else if(s){const d=e.getVarFromNode(this,null,o),f=e.getPropertyName(d);e.addLineFlowCode(`${f} = ${l}`,this);const p=i.node,g=p.node.context({assign:!0}).build(e);for(let m=0;m<p.components.length;m++){const b=p.components[m];e.addLineFlowCode(`${g}.${b} = ${f}[ ${m} ]`,this)}t!=="void"&&(h=a)}else h=`${a} = ${l}`,(t==="void"||c==="void")&&(e.addLineFlowCode(h,this),t!=="void"&&(h=a));return u.initialized=!0,e.format(h,o,t)}}const XD=mt($D).setParameterLength(2);q("assign",XD);class Ax extends yi{static get type(){return"ArrayNode"}constructor(e,t,i=null){super(e),this.count=t,this.values=i,this.isArrayNode=!0}getArrayCount(){return this.count}getNodeType(e){return this.nodeType===null&&(this.nodeType=this.values[0].getNodeType(e)),this.nodeType}getElementType(e){return this.getNodeType(e)}generate(e){const t=this.getNodeType(e);return e.generateArray(t,this.count,this.values)}}const qD=(...r)=>{let e;if(r.length===1){const t=r[0];e=new Ax(null,t.length,t)}else{const t=r[0],i=r[1];e=new Ax(t,i)}return ee(e)};q("toArray",(r,e)=>qD(Array(e).fill(r)));class vT extends He{static get type(){return"UniformGroupNode"}constructor(e,t=!1,i=1){super("string"),this.name=e,this.shared=t,this.order=i,this.isUniformGroup=!0}serialize(e){super.serialize(e),e.name=this.name,e.version=this.version,e.shared=this.shared}deserialize(e){super.deserialize(e),this.name=e.name,this.version=e.version,this.shared=e.shared}}const YD=r=>new vT(r),rg=(r,e=0)=>new vT(r,!0,e),jD=rg("frame"),Hi=rg("render"),MT=YD("object");class jc extends Qm{static get type(){return"UniformNode"}constructor(e,t=null){super(e,t),this.isUniformNode=!0,this.name="",this.groupNode=MT}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setGroup(e){return this.groupNode=e,this}getGroup(){return this.groupNode}getUniformHash(e){return this.getHash(e)}onUpdate(e,t){const i=this.getSelf();return e=e.bind(i),super.onUpdate(n=>{const s=e(n,i);s!==void 0&&(this.value=s)},t)}getInputType(e){let t=super.getInputType(e);return t==="bool"&&(t="uint"),t}generate(e,t){const i=this.getNodeType(e),n=this.getUniformHash(e);let s=e.getNodeFromHash(n);s===void 0&&(e.setHashNode(this,n),s=this);const o=s.getInputType(e),a=e.getUniformFromNode(s,o,e.shaderStage,this.name||e.context.nodeName),l=e.getPropertyName(a);e.context.nodeName!==void 0&&delete e.context.nodeName;let c=l;if(i==="bool"){const u=e.getDataFromNode(this);let h=u.propertyName;if(h===void 0){const d=e.getVarFromNode(this,null,"bool");h=e.getPropertyName(d),u.propertyName=h,c=e.format(l,o,i),e.addLineFlowCode(`${h} = ${c}`,this)}c=h}return e.format(c,i,t)}}const St=(r,e)=>{const t=PD(e||r),i=r&&r.isNode===!0?r.node&&r.node.value||r.value:r;return ee(new jc(i,t))};class hl extends He{static get type(){return"PropertyNode"}constructor(e,t=null,i=!1){super(e),this.name=t,this.varying=i,this.isPropertyNode=!0,this.global=!0}getHash(e){return this.name||super.getHash(e)}generate(e){let t;return this.varying===!0?(t=e.getVaryingFromNode(this,this.name),t.needsInterpolation=!0):t=e.getVarFromNode(this,this.name),e.getPropertyName(t)}}const Th=(r,e)=>ee(new hl(r,e)),Gh=(r,e)=>ee(new hl(r,e,!0)),kn=Ot(hl,"vec4","DiffuseColor"),wx=Ot(hl,"vec3","EmissiveColor"),tc=Ot(hl,"vec4","Output");class KD extends yi{static get type(){return"FunctionCallNode"}constructor(e=null,t={}){super(),this.functionNode=e,this.parameters=t}setParameters(e){return this.parameters=e,this}getParameters(){return this.parameters}getNodeType(e){return this.functionNode.getNodeType(e)}generate(e){const t=[],i=this.functionNode,n=i.getInputs(e),s=this.parameters,o=(l,c)=>{const u=c.type,h=u==="pointer";let d;return h?d="&"+l.build(e):d=l.build(e,u),d};if(Array.isArray(s)){if(s.length>n.length)console.error("THREE.TSL: The number of provided parameters exceeds the expected number of inputs in 'Fn()'."),s.length=n.length;else if(s.length<n.length)for(console.error("THREE.TSL: The number of provided parameters is less than the expected number of inputs in 'Fn()'.");s.length<n.length;)s.push(Ue(0));for(let l=0;l<s.length;l++)t.push(o(s[l],n[l]))}else for(const l of n){const c=s[l.name];c!==void 0?t.push(o(c,l)):(console.error(`THREE.TSL: Input '${l.name}' not found in 'Fn()'.`),t.push(o(Ue(0),l)))}return`${i.build(e,"property")}( ${t.join(", ")} )`}}const ZD=(r,...e)=>(e=e.length>1||e[0]&&e[0].isNode===!0?ga(e):ld(e[0]),ee(new KD(ee(r),e)));q("call",ZD);const QD={"==":"equal","!=":"notEqual","<":"lessThan",">":"greaterThan","<=":"lessThanEqual",">=":"greaterThanEqual","%":"mod"};class Ft extends yi{static get type(){return"OperatorNode"}constructor(e,t,i,...n){if(super(),n.length>0){let s=new Ft(e,t,i);for(let o=0;o<n.length-1;o++)s=new Ft(e,s,n[o]);t=s,i=n[n.length-1]}this.op=e,this.aNode=t,this.bNode=i,this.isOperatorNode=!0}getOperatorMethod(e,t){return e.getMethod(QD[this.op],t)}getNodeType(e){const t=this.op,i=this.aNode,n=this.bNode,s=i.getNodeType(e),o=n?n.getNodeType(e):null;if(s==="void"||o==="void")return"void";if(t==="%")return s;if(t==="~"||t==="&"||t==="|"||t==="^"||t===">>"||t==="<<")return e.getIntegerType(s);if(t==="!"||t==="&&"||t==="||"||t==="^^")return"bool";if(t==="=="||t==="!="||t==="<"||t===">"||t==="<="||t===">="){const a=Math.max(e.getTypeLength(s),e.getTypeLength(o));return a>1?`bvec${a}`:"bool"}else{if(e.isMatrix(s)){if(o==="float")return s;if(e.isVector(o))return e.getVectorFromMatrix(s);if(e.isMatrix(o))return s}else if(e.isMatrix(o)){if(s==="float")return o;if(e.isVector(s))return e.getVectorFromMatrix(o)}return e.getTypeLength(o)>e.getTypeLength(s)?o:s}}generate(e,t){const i=this.op,{aNode:n,bNode:s}=this,o=this.getNodeType(e);let a=null,l=null;o!=="void"?(a=n.getNodeType(e),l=s?s.getNodeType(e):null,i==="<"||i===">"||i==="<="||i===">="||i==="=="||i==="!="?e.isVector(a)?l=a:e.isVector(l)?a=l:a!==l&&(a=l="float"):i===">>"||i==="<<"?(a=o,l=e.changeComponentType(l,"uint")):i==="%"?(a=o,l=e.isInteger(a)&&e.isInteger(l)?l:a):e.isMatrix(a)?l==="float"?l="float":e.isVector(l)?l=e.getVectorFromMatrix(a):e.isMatrix(l)||(a=l=o):e.isMatrix(l)?a==="float"?a="float":e.isVector(a)?a=e.getVectorFromMatrix(l):a=l=o:a=l=o):a=l=o;const c=n.build(e,a),u=s?s.build(e,l):null,h=e.getFunctionOperator(i);if(t!=="void"){const d=e.renderer.coordinateSystem===Ri;if(i==="=="||i==="!="||i==="<"||i===">"||i==="<="||i===">=")return d?e.isVector(a)?e.format(`${this.getOperatorMethod(e,t)}( ${c}, ${u} )`,o,t):e.format(`( ${c} ${i} ${u} )`,o,t):e.format(`( ${c} ${i} ${u} )`,o,t);if(i==="%")return e.isInteger(l)?e.format(`( ${c} % ${u} )`,o,t):e.format(`${this.getOperatorMethod(e,o)}( ${c}, ${u} )`,o,t);if(i==="!"||i==="~")return e.format(`(${i}${c})`,a,t);if(h)return e.format(`${h}( ${c}, ${u} )`,o,t);if(e.isMatrix(a)&&l==="float")return e.format(`( ${u} ${i} ${c} )`,o,t);if(a==="float"&&e.isMatrix(l))return e.format(`${c} ${i} ${u}`,o,t);{let f=`( ${c} ${i} ${u} )`;return!d&&o==="bool"&&e.isVector(a)&&e.isVector(l)&&(f=`all${f}`),e.format(f,o,t)}}else if(a!=="void")return h?e.format(`${h}( ${c}, ${u} )`,o,t):e.isMatrix(a)&&l==="float"?e.format(`${u} ${i} ${c}`,o,t):e.format(`${c} ${i} ${u}`,o,t)}serialize(e){super.serialize(e),e.op=this.op}deserialize(e){super.deserialize(e),this.op=e.op}}const Nc=ge(Ft,"+").setParameterLength(2,1/0).setName("add"),Is=ge(Ft,"-").setParameterLength(2,1/0).setName("sub"),gi=ge(Ft,"*").setParameterLength(2,1/0).setName("mul"),ET=ge(Ft,"/").setParameterLength(2,1/0).setName("div"),og=ge(Ft,"%").setParameterLength(2).setName("mod"),AT=ge(Ft,"==").setParameterLength(2).setName("equal"),JD=ge(Ft,"!=").setParameterLength(2).setName("notEqual"),eL=ge(Ft,"<").setParameterLength(2).setName("lessThan"),tL=ge(Ft,">").setParameterLength(2).setName("greaterThan"),iL=ge(Ft,"<=").setParameterLength(2).setName("lessThanEqual"),nL=ge(Ft,">=").setParameterLength(2).setName("greaterThanEqual"),sL=ge(Ft,"&&").setParameterLength(2,1/0).setName("and"),rL=ge(Ft,"||").setParameterLength(2,1/0).setName("or"),oL=ge(Ft,"!").setParameterLength(1).setName("not"),aL=ge(Ft,"^^").setParameterLength(2).setName("xor"),lL=ge(Ft,"&").setParameterLength(2).setName("bitAnd"),cL=ge(Ft,"~").setParameterLength(2).setName("bitNot"),uL=ge(Ft,"|").setParameterLength(2).setName("bitOr"),hL=ge(Ft,"^").setParameterLength(2).setName("bitXor"),dL=ge(Ft,"<<").setParameterLength(2).setName("shiftLeft"),fL=ge(Ft,">>").setParameterLength(2).setName("shiftRight"),pL=Re(([r])=>(r.addAssign(1),r)),mL=Re(([r])=>(r.subAssign(1),r)),gL=Re(([r])=>{const e=Zt(r).toConst();return r.addAssign(1),e}),_L=Re(([r])=>{const e=Zt(r).toConst();return r.subAssign(1),e});q("add",Nc);q("sub",Is);q("mul",gi);q("div",ET);q("mod",og);q("equal",AT);q("notEqual",JD);q("lessThan",eL);q("greaterThan",tL);q("lessThanEqual",iL);q("greaterThanEqual",nL);q("and",sL);q("or",rL);q("not",oL);q("xor",aL);q("bitAnd",lL);q("bitNot",cL);q("bitOr",uL);q("bitXor",hL);q("shiftLeft",dL);q("shiftRight",fL);q("incrementBefore",pL);q("decrementBefore",mL);q("increment",gL);q("decrement",_L);const xL=(r,e)=>(console.warn('THREE.TSL: "modInt()" is deprecated. Use "mod( int( ... ) )" instead.'),og(Zt(r),Zt(e)));q("modInt",xL);class I extends yi{static get type(){return"MathNode"}constructor(e,t,i=null,n=null){if(super(),(e===I.MAX||e===I.MIN)&&arguments.length>3){let s=new I(e,t,i);for(let o=2;o<arguments.length-1;o++)s=new I(e,s,arguments[o]);t=s,i=arguments[arguments.length-1],n=null}this.method=e,this.aNode=t,this.bNode=i,this.cNode=n,this.isMathNode=!0}getInputType(e){const t=this.aNode.getNodeType(e),i=this.bNode?this.bNode.getNodeType(e):null,n=this.cNode?this.cNode.getNodeType(e):null,s=e.isMatrix(t)?0:e.getTypeLength(t),o=e.isMatrix(i)?0:e.getTypeLength(i),a=e.isMatrix(n)?0:e.getTypeLength(n);return s>o&&s>a?t:o>a?i:a>s?n:t}getNodeType(e){const t=this.method;return t===I.LENGTH||t===I.DISTANCE||t===I.DOT?"float":t===I.CROSS?"vec3":t===I.ALL||t===I.ANY?"bool":t===I.EQUALS?e.changeComponentType(this.aNode.getNodeType(e),"bool"):this.getInputType(e)}setup(e){const{aNode:t,bNode:i,method:n}=this;let s=null;if(n===I.ONE_MINUS)s=Is(1,t);else if(n===I.RECIPROCAL)s=ET(1,t);else if(n===I.DIFFERENCE)s=Gn(Is(t,i));else if(n===I.TRANSFORM_DIRECTION){let o=t,a=i;e.isMatrix(o.getNodeType(e))?a=_i(Ee(a),0):o=_i(Ee(o),0);const l=gi(o,a).xyz;s=ag(l)}return s!==null?s:super.setup(e)}generate(e,t){if(e.getNodeProperties(this).outputNode)return super.generate(e,t);let n=this.method;const s=this.getNodeType(e),o=this.getInputType(e),a=this.aNode,l=this.bNode,c=this.cNode,u=e.renderer.coordinateSystem;if(n===I.NEGATE)return e.format("( - "+a.build(e,o)+" )",s,t);{const h=[];return n===I.CROSS?h.push(a.build(e,s),l.build(e,s)):u===Ri&&n===I.STEP?h.push(a.build(e,e.getTypeLength(a.getNodeType(e))===1?"float":o),l.build(e,o)):u===Ri&&(n===I.MIN||n===I.MAX)?h.push(a.build(e,o),l.build(e,e.getTypeLength(l.getNodeType(e))===1?"float":o)):n===I.REFRACT?h.push(a.build(e,o),l.build(e,o),c.build(e,"float")):n===I.MIX?h.push(a.build(e,o),l.build(e,o),c.build(e,e.getTypeLength(c.getNodeType(e))===1?"float":o)):(u===fo&&n===I.ATAN&&l!==null&&(n="atan2"),e.shaderStage!=="fragment"&&(n===I.DFDX||n===I.DFDY)&&(console.warn(`THREE.TSL: '${n}' is not supported in the ${e.shaderStage} stage.`),n="/*"+n+"*/"),h.push(a.build(e,o)),l!==null&&h.push(l.build(e,o)),c!==null&&h.push(c.build(e,o))),e.format(`${e.getMethod(n,s)}( ${h.join(", ")} )`,s,t)}}serialize(e){super.serialize(e),e.method=this.method}deserialize(e){super.deserialize(e),this.method=e.method}}I.ALL="all";I.ANY="any";I.RADIANS="radians";I.DEGREES="degrees";I.EXP="exp";I.EXP2="exp2";I.LOG="log";I.LOG2="log2";I.SQRT="sqrt";I.INVERSE_SQRT="inversesqrt";I.FLOOR="floor";I.CEIL="ceil";I.NORMALIZE="normalize";I.FRACT="fract";I.SIN="sin";I.COS="cos";I.TAN="tan";I.ASIN="asin";I.ACOS="acos";I.ATAN="atan";I.ABS="abs";I.SIGN="sign";I.LENGTH="length";I.NEGATE="negate";I.ONE_MINUS="oneMinus";I.DFDX="dFdx";I.DFDY="dFdy";I.ROUND="round";I.RECIPROCAL="reciprocal";I.TRUNC="trunc";I.FWIDTH="fwidth";I.TRANSPOSE="transpose";I.DETERMINANT="determinant";I.INVERSE="inverse";I.BITCAST="bitcast";I.EQUALS="equals";I.MIN="min";I.MAX="max";I.STEP="step";I.REFLECT="reflect";I.DISTANCE="distance";I.DIFFERENCE="difference";I.DOT="dot";I.CROSS="cross";I.POW="pow";I.TRANSFORM_DIRECTION="transformDirection";I.MIX="mix";I.CLAMP="clamp";I.REFRACT="refract";I.SMOOTHSTEP="smoothstep";I.FACEFORWARD="faceforward";const yL=Ue(Math.PI),bL=ge(I,I.ALL).setParameterLength(1),TL=ge(I,I.ANY).setParameterLength(1),SL=ge(I,I.RADIANS).setParameterLength(1),vL=ge(I,I.DEGREES).setParameterLength(1),ML=ge(I,I.EXP).setParameterLength(1),Pc=ge(I,I.EXP2).setParameterLength(1),EL=ge(I,I.LOG).setParameterLength(1),ao=ge(I,I.LOG2).setParameterLength(1),AL=ge(I,I.SQRT).setParameterLength(1),wL=ge(I,I.INVERSE_SQRT).setParameterLength(1),ic=ge(I,I.FLOOR).setParameterLength(1),wT=ge(I,I.CEIL).setParameterLength(1),ag=ge(I,I.NORMALIZE).setParameterLength(1),Kc=ge(I,I.FRACT).setParameterLength(1),Dc=ge(I,I.SIN).setParameterLength(1),RT=ge(I,I.COS).setParameterLength(1),RL=ge(I,I.TAN).setParameterLength(1),CL=ge(I,I.ASIN).setParameterLength(1),NL=ge(I,I.ACOS).setParameterLength(1),CT=ge(I,I.ATAN).setParameterLength(1,2),Gn=ge(I,I.ABS).setParameterLength(1),NT=ge(I,I.SIGN).setParameterLength(1),Op=ge(I,I.LENGTH).setParameterLength(1),PL=ge(I,I.NEGATE).setParameterLength(1),DL=ge(I,I.ONE_MINUS).setParameterLength(1),PT=ge(I,I.DFDX).setParameterLength(1),DT=ge(I,I.DFDY).setParameterLength(1),LL=ge(I,I.ROUND).setParameterLength(1),IL=ge(I,I.RECIPROCAL).setParameterLength(1),FL=ge(I,I.TRUNC).setParameterLength(1),UL=ge(I,I.FWIDTH).setParameterLength(1),BL=ge(I,I.TRANSPOSE).setParameterLength(1),OL=ge(I,I.DETERMINANT).setParameterLength(1),kL=ge(I,I.INVERSE).setParameterLength(1),zL=(r,e)=>(console.warn('THREE.TSL: "equals" is deprecated. Use "equal" inside a vector instead, like: "bvec*( equal( ... ) )"'),AT(r,e)),LT=ge(I,I.MIN).setParameterLength(2,1/0),Vh=ge(I,I.MAX).setParameterLength(2,1/0),GL=ge(I,I.STEP).setParameterLength(2),VL=ge(I,I.REFLECT).setParameterLength(2),HL=ge(I,I.DISTANCE).setParameterLength(2),WL=ge(I,I.DIFFERENCE).setParameterLength(2),lg=ge(I,I.DOT).setParameterLength(2),IT=ge(I,I.CROSS).setParameterLength(2),FT=ge(I,I.POW).setParameterLength(2),$L=ge(I,I.POW,2).setParameterLength(1),XL=ge(I,I.POW,3).setParameterLength(1),qL=ge(I,I.POW,4).setParameterLength(1),YL=ge(I,I.TRANSFORM_DIRECTION).setParameterLength(2),jL=r=>gi(NT(r),FT(Gn(r),1/3)),UT=r=>lg(r,r),Zc=ge(I,I.MIX).setParameterLength(3),cd=(r,e=0,t=1)=>ee(new I(I.CLAMP,ee(r),ee(e),ee(t))),KL=r=>cd(r),ZL=ge(I,I.REFRACT).setParameterLength(3),Lc=ge(I,I.SMOOTHSTEP).setParameterLength(3),QL=ge(I,I.FACEFORWARD).setParameterLength(3),JL=Re(([r])=>{const i=43758.5453,n=lg(r.xy,ti(12.9898,78.233)),s=og(n,yL);return Kc(Dc(s).mul(i))}),eI=(r,e,t)=>Zc(e,t,r),tI=(r,e,t)=>Lc(e,t,r),iI=(r,e)=>GL(e,r),nI=(r,e)=>(console.warn('THREE.TSL: "atan2" is overloaded. Use "atan" instead.'),CT(r,e));q("all",bL);q("any",TL);q("equals",zL);q("radians",SL);q("degrees",vL);q("exp",ML);q("exp2",Pc);q("log",EL);q("log2",ao);q("sqrt",AL);q("inverseSqrt",wL);q("floor",ic);q("ceil",wT);q("normalize",ag);q("fract",Kc);q("sin",Dc);q("cos",RT);q("tan",RL);q("asin",CL);q("acos",NL);q("atan",CT);q("abs",Gn);q("sign",NT);q("length",Op);q("lengthSq",UT);q("negate",PL);q("oneMinus",DL);q("dFdx",PT);q("dFdy",DT);q("round",LL);q("reciprocal",IL);q("trunc",FL);q("fwidth",UL);q("atan2",nI);q("min",LT);q("max",Vh);q("step",iI);q("reflect",VL);q("distance",HL);q("dot",lg);q("cross",IT);q("pow",FT);q("pow2",$L);q("pow3",XL);q("pow4",qL);q("transformDirection",YL);q("mix",eI);q("clamp",cd);q("refract",ZL);q("smoothstep",tI);q("faceForward",QL);q("difference",WL);q("saturate",KL);q("cbrt",jL);q("transpose",BL);q("determinant",OL);q("inverse",kL);q("rand",JL);class sI extends He{static get type(){return"ConditionalNode"}constructor(e,t,i=null){super(),this.condNode=e,this.ifNode=t,this.elseNode=i}getNodeType(e){const{ifNode:t,elseNode:i}=e.getNodeProperties(this);if(t===void 0)return e.flowBuildStage(this,"setup"),this.getNodeType(e);const n=t.getNodeType(e);if(i!==null){const s=i.getNodeType(e);if(e.getTypeLength(s)>e.getTypeLength(n))return s}return n}setup(e){const t=this.condNode.cache(),i=this.ifNode.cache(),n=this.elseNode?this.elseNode.cache():null,s=e.context.nodeBlock;e.getDataFromNode(i).parentNodeBlock=s,n!==null&&(e.getDataFromNode(n).parentNodeBlock=s);const o=e.getNodeProperties(this);o.condNode=t,o.ifNode=i.context({nodeBlock:i}),o.elseNode=n?n.context({nodeBlock:n}):null}generate(e,t){const i=this.getNodeType(e),n=e.getDataFromNode(this);if(n.nodeProperty!==void 0)return n.nodeProperty;const{condNode:s,ifNode:o,elseNode:a}=e.getNodeProperties(this),l=e.currentFunctionNode,c=t!=="void",u=c?Th(i).build(e):"";n.nodeProperty=u;const h=s.build(e,"bool");e.addFlowCode(`
${e.tab}if ( ${h} ) {

`).addFlowTab();let d=o.build(e,i);if(d&&(c?d=u+" = "+d+";":(d="return "+d+";",l===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),d="// "+d))),e.removeFlowTab().addFlowCode(e.tab+"	"+d+`

`+e.tab+"}"),a!==null){e.addFlowCode(` else {

`).addFlowTab();let f=a.build(e,i);f&&(c?f=u+" = "+f+";":(f="return "+f+";",l===null&&(console.warn("THREE.TSL: Return statement used in an inline 'Fn()'. Define a layout struct to allow return values."),f="// "+f))),e.removeFlowTab().addFlowCode(e.tab+"	"+f+`

`+e.tab+`}

`)}else e.addFlowCode(`

`);return e.format(u,i,t)}}const $n=mt(sI).setParameterLength(2,3);q("select",$n);class BT extends He{static get type(){return"ContextNode"}constructor(e,t={}){super(),this.isContextNode=!0,this.node=e,this.value=t}getScope(){return this.node.getScope()}getNodeType(e){return this.node.getNodeType(e)}analyze(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}setup(e){const t=e.getContext();e.setContext({...e.context,...this.value}),this.node.build(e),e.setContext(t)}generate(e,t){const i=e.getContext();e.setContext({...e.context,...this.value});const n=this.node.build(e,t);return e.setContext(i),n}}const cg=mt(BT).setParameterLength(1,2),OT=(r,e)=>cg(r,{nodeName:e});function rI(r,e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),OT(r,e)}q("context",cg);q("label",rI);q("setName",OT);class Sh extends He{static get type(){return"VarNode"}constructor(e,t=null,i=!1){super(),this.node=e,this.name=t,this.global=!0,this.isVarNode=!0,this.readOnly=i,this.parents=!0,this.intent=!1}setIntent(e){return this.intent=e,this}getIntent(){return this.intent}getMemberType(e,t){return this.node.getMemberType(e,t)}getElementType(e){return this.node.getElementType(e)}getNodeType(e){return this.node.getNodeType(e)}getArrayCount(e){return this.node.getArrayCount(e)}build(...e){return this.intent===!0&&e[0].getNodeProperties(this).assign!==!0?this.node.build(...e):super.build(...e)}generate(e){const{node:t,name:i,readOnly:n}=this,{renderer:s}=e,o=s.backend.isWebGPUBackend===!0;let a=!1,l=!1;n&&(a=e.isDeterministic(t),l=o?n:a);const c=e.getVectorType(this.getNodeType(e)),u=t.build(e,c),h=e.getVarFromNode(this,i,c,void 0,l),d=e.getPropertyName(h);let f=d;if(l)if(o)f=a?`const ${d}`:`let ${d}`;else{const p=t.getArrayCount(e);f=`const ${e.getVar(h.type,d,p)}`}return e.addLineFlowCode(`${f} = ${u}`,this),d}}const ud=mt(Sh),oI=(r,e=null)=>ud(r,e).toStack(),aI=(r,e=null)=>ud(r,e,!0).toStack(),lI=r=>ig()===null?r:ud(r).setIntent(!0).toStack();q("toVar",oI);q("toConst",aI);q("toVarIntent",lI);const cI=r=>(console.warn('TSL: "temp( node )" is deprecated. Use "Var( node )" or "node.toVar()" instead.'),ud(r));q("temp",cI);class uI extends He{static get type(){return"SubBuild"}constructor(e,t,i=null){super(i),this.node=e,this.name=t,this.isSubBuildNode=!0}getNodeType(e){if(this.nodeType!==null)return this.nodeType;e.addSubBuild(this.name);const t=this.node.getNodeType(e);return e.removeSubBuild(),t}build(e,...t){e.addSubBuild(this.name);const i=this.node.build(e,...t);return e.removeSubBuild(),i}}const vh=(r,e,t=null)=>ee(new uI(ee(r),e,t));class hI extends He{static get type(){return"VaryingNode"}constructor(e,t=null){super(),this.node=e,this.name=t,this.isVaryingNode=!0,this.interpolationType=null,this.interpolationSampling=null,this.global=!0}setInterpolation(e,t=null){return this.interpolationType=e,this.interpolationSampling=t,this}getHash(e){return this.name||super.getHash(e)}getNodeType(e){return this.node.getNodeType(e)}setupVarying(e){const t=e.getNodeProperties(this);let i=t.varying;if(i===void 0){const n=this.name,s=this.getNodeType(e),o=this.interpolationType,a=this.interpolationSampling;t.varying=i=e.getVaryingFromNode(this,n,s,o,a),t.node=vh(this.node,"VERTEX")}return i.needsInterpolation||(i.needsInterpolation=e.shaderStage==="fragment"),i}setup(e){this.setupVarying(e),e.flowNodeFromShaderStage(ih.VERTEX,this.node)}analyze(e){this.setupVarying(e),e.flowNodeFromShaderStage(ih.VERTEX,this.node)}generate(e){const t=e.getSubBuildProperty("property",e.currentStack),i=e.getNodeProperties(this),n=this.setupVarying(e);if(i[t]===void 0){const s=this.getNodeType(e),o=e.getPropertyName(n,ih.VERTEX);e.flowNodeFromShaderStage(ih.VERTEX,i.node,s,o),i[t]=o}return e.getPropertyName(n)}}const yo=mt(hI).setParameterLength(1,2),dI=r=>yo(r);q("toVarying",yo);q("toVertexStage",dI);q("varying",(...r)=>(console.warn("THREE.TSL: .varying() has been renamed to .toVarying()."),yo(...r)));q("vertexStage",(...r)=>(console.warn("THREE.TSL: .vertexStage() has been renamed to .toVertexStage()."),yo(...r)));const fI=Re(([r])=>{const e=r.mul(.9478672986).add(.0521327014).pow(2.4),t=r.mul(.0773993808),i=r.lessThanEqual(.04045);return Zc(e,t,i)}).setLayout({name:"sRGBTransferEOTF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),pI=Re(([r])=>{const e=r.pow(.41666).mul(1.055).sub(.055),t=r.mul(12.92),i=r.lessThanEqual(.0031308);return Zc(e,t,i)}).setLayout({name:"sRGBTransferOETF",type:"vec3",inputs:[{name:"color",type:"vec3"}]}),ug="WorkingColorSpace",mI="OutputColorSpace";class kT extends yi{static get type(){return"ColorSpaceNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.source=t,this.target=i}resolveColorSpace(e,t){return t===ug?Be.workingColorSpace:t===mI?e.context.outputColorSpace||e.renderer.outputColorSpace:t}setup(e){const{colorNode:t}=this,i=this.resolveColorSpace(e,this.source),n=this.resolveColorSpace(e,this.target);let s=t;return Be.enabled===!1||i===n||!i||!n||(Be.getTransfer(i)===xe&&(s=_i(fI(s.rgb),s.a)),Be.getPrimaries(i)!==Be.getPrimaries(n)&&(s=_i(xo(Be._getMatrix(new We,i,n)).mul(s.rgb),s.a)),Be.getTransfer(n)===xe&&(s=_i(pI(s.rgb),s.a))),s}}const gI=(r,e)=>ee(new kT(ee(r),ug,e)),zT=(r,e)=>ee(new kT(ee(r),e,ug));q("workingToColorSpace",gI);q("colorSpaceToWorking",zT);let _I=class extends Yc{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}};class xI extends He{static get type(){return"ReferenceBaseNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.updateType=it.OBJECT}setGroup(e){return this.group=e,this}element(e){return ee(new _I(this,ee(e)))}setNodeType(e){const t=St(null,e).getSelf();this.group!==null&&t.setGroup(this.group),this.node=t}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}class yI extends xI{static get type(){return"RendererReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.renderer=i,this.setGroup(Hi)}updateReference(e){return this.reference=this.renderer!==null?this.renderer:e.renderer,this.reference}}const bI=(r,e,t=null)=>ee(new yI(r,e,t));class TI extends yi{static get type(){return"ToneMappingNode"}constructor(e,t=vI,i=null){super("vec3"),this.toneMapping=e,this.exposureNode=t,this.colorNode=i}customCacheKey(){return Bh(this.toneMapping)}setup(e){const t=this.colorNode||e.context.color,i=this.toneMapping;if(i===Ki)return t;let n=null;const s=e.renderer.library.getToneMappingFunction(i);return s!==null?n=_i(s(t.rgb,this.exposureNode),t.a):(console.error("ToneMappingNode: Unsupported Tone Mapping configuration.",i),n=t),n}}const SI=(r,e,t)=>ee(new TI(r,ee(e),ee(t))),vI=bI("toneMappingExposure","float");q("toneMapping",(r,e,t)=>SI(e,t,r));class MI extends Qm{static get type(){return"BufferAttributeNode"}constructor(e,t=null,i=0,n=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferStride=i,this.bufferOffset=n,this.usage=Ch,this.instanced=!1,this.attribute=null,this.global=!0,e&&e.isBufferAttribute===!0&&(this.attribute=e,this.usage=e.usage,this.instanced=e.isInstancedBufferAttribute)}getHash(e){if(this.bufferStride===0&&this.bufferOffset===0){let t=e.globalCache.getData(this.value);return t===void 0&&(t={node:this},e.globalCache.setData(this.value,t)),t.node.uuid}return this.uuid}getNodeType(e){return this.bufferType===null&&(this.bufferType=e.getTypeFromAttribute(this.attribute)),this.bufferType}setup(e){if(this.attribute!==null)return;const t=this.getNodeType(e),i=this.value,n=e.getTypeLength(t),s=this.bufferStride||n,o=this.bufferOffset,a=i.isInterleavedBuffer===!0?i:new Fb(i,s),l=new d1(a,n,o);a.setUsage(this.usage),this.attribute=l,this.attribute.isInstancedBufferAttribute=this.instanced}generate(e){const t=this.getNodeType(e),i=e.getBufferAttributeFromNode(this,t),n=e.getPropertyName(i);let s=null;return e.shaderStage==="vertex"||e.shaderStage==="compute"?(this.name=n,s=n):s=yo(this).build(e,t),s}getInputType(){return"bufferAttribute"}setUsage(e){return this.usage=e,this.attribute&&this.attribute.isBufferAttribute===!0&&(this.attribute.usage=e),this}setInstanced(e){return this.instanced=e,this}}const hg=(r,e=null,t=0,i=0)=>ee(new MI(r,e,t,i)),EI=(r,e=null,t=0,i=0)=>hg(r,e,t,i).setUsage(na),Rx=(r,e=null,t=0,i=0)=>hg(r,e,t,i).setInstanced(!0),Cx=(r,e=null,t=0,i=0)=>EI(r,e,t,i).setInstanced(!0);q("toAttribute",r=>hg(r.value));class AI extends He{static get type(){return"ComputeNode"}constructor(e,t){super("void"),this.isComputeNode=!0,this.computeNode=e,this.workgroupSize=t,this.count=null,this.version=1,this.name="",this.updateBeforeType=it.OBJECT,this.onInitFunction=null}setCount(e){return this.count=e,this}getCount(){return this.count}dispose(){this.dispatchEvent({type:"dispose"})}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}onInit(e){return this.onInitFunction=e,this}updateBefore({renderer:e}){e.compute(this)}setup(e){const t=this.computeNode.build(e);if(t){const i=e.getNodeProperties(this);i.outputComputeNode=t.outputNode,t.outputNode=null}return t}generate(e,t){const{shaderStage:i}=e;if(i==="compute"){const n=this.computeNode.build(e,"void");n!==""&&e.addLineFlowCode(n,this)}else{const s=e.getNodeProperties(this).outputComputeNode;if(s)return s.build(e,t)}}}const GT=(r,e=[64])=>{(e.length===0||e.length>3)&&console.error("THREE.TSL: compute() workgroupSize must have 1, 2, or 3 elements");for(let t=0;t<e.length;t++){const i=e[t];(typeof i!="number"||i<=0||!Number.isInteger(i))&&console.error(`THREE.TSL: compute() workgroupSize element at index [ ${t} ] must be a positive integer`)}for(;e.length<3;)e.push(1);return ee(new AI(ee(r),e))},wI=(r,e,t)=>GT(r,t).setCount(e);q("compute",wI);q("computeKernel",GT);class RI extends He{static get type(){return"CacheNode"}constructor(e,t=!0){super(),this.node=e,this.parent=t,this.isCacheNode=!0}getNodeType(e){const t=e.getCache(),i=e.getCacheFromNode(this,this.parent);e.setCache(i);const n=this.node.getNodeType(e);return e.setCache(t),n}build(e,...t){const i=e.getCache(),n=e.getCacheFromNode(this,this.parent);e.setCache(n);const s=this.node.build(e,...t);return e.setCache(i),s}}const CI=(r,e)=>ee(new RI(ee(r),e));q("cache",CI);class NI extends He{static get type(){return"BypassNode"}constructor(e,t){super(),this.isBypassNode=!0,this.outputNode=e,this.callNode=t}getNodeType(e){return this.outputNode.getNodeType(e)}generate(e){const t=this.callNode.build(e,"void");return t!==""&&e.addLineFlowCode(t,this),this.outputNode.build(e)}}const PI=mt(NI).setParameterLength(2);q("bypass",PI);class VT extends He{static get type(){return"RemapNode"}constructor(e,t,i,n=Ue(0),s=Ue(1)){super(),this.node=e,this.inLowNode=t,this.inHighNode=i,this.outLowNode=n,this.outHighNode=s,this.doClamp=!0}setup(){const{node:e,inLowNode:t,inHighNode:i,outLowNode:n,outHighNode:s,doClamp:o}=this;let a=e.sub(t).div(i.sub(t));return o===!0&&(a=a.clamp()),a.mul(s.sub(n)).add(n)}}const DI=mt(VT,null,null,{doClamp:!1}).setParameterLength(3,5),LI=mt(VT).setParameterLength(3,5);q("remap",DI);q("remapClamp",LI);class Mh extends He{static get type(){return"ExpressionNode"}constructor(e="",t="void"){super(t),this.snippet=e}generate(e,t){const i=this.getNodeType(e),n=this.snippet;if(i==="void")e.addLineFlowCode(n,this);else return e.format(n,i,t)}}const Qa=mt(Mh).setParameterLength(1,2),II=r=>(r?$n(r,Qa("discard")):Qa("discard")).toStack();q("discard",II);class FI extends yi{static get type(){return"RenderOutputNode"}constructor(e,t,i){super("vec4"),this.colorNode=e,this.toneMapping=t,this.outputColorSpace=i,this.isRenderOutputNode=!0}setup({context:e}){let t=this.colorNode||e.color;const i=(this.toneMapping!==null?this.toneMapping:e.toneMapping)||Ki,n=(this.outputColorSpace!==null?this.outputColorSpace:e.outputColorSpace)||Wi;return i!==Ki&&(t=t.toneMapping(i)),n!==Wi&&n!==Be.workingColorSpace&&(t=t.workingToColorSpace(n)),t}}const UI=(r,e=null,t=null)=>ee(new FI(ee(r),e,t));q("renderOutput",UI);class BI extends yi{static get type(){return"DebugNode"}constructor(e,t=null){super(),this.node=e,this.callback=t}getNodeType(e){return this.node.getNodeType(e)}setup(e){return this.node.build(e)}analyze(e){return this.node.build(e)}generate(e){const t=this.callback,i=this.node.build(e),n="--- TSL debug - "+e.shaderStage+" shader ---",s="-".repeat(n.length);let o="";return o+="// #"+n+`#
`,o+=e.flow.code.replace(/^\t/mg,"")+`
`,o+="/* ... */ "+i+` /* ... */
`,o+="// #"+s+`#
`,t!==null?t(e,o):console.log(o),i}}const OI=(r,e=null)=>ee(new BI(ee(r),e)).toStack();q("debug",OI);class HT extends He{static get type(){return"AttributeNode"}constructor(e,t=null){super(t),this.global=!0,this._attributeName=e}getHash(e){return this.getAttributeName(e)}getNodeType(e){let t=this.nodeType;if(t===null){const i=this.getAttributeName(e);if(e.hasGeometryAttribute(i)){const n=e.geometry.getAttribute(i);t=e.getTypeFromAttribute(n)}else t="float"}return t}setAttributeName(e){return this._attributeName=e,this}getAttributeName(){return this._attributeName}generate(e){const t=this.getAttributeName(e),i=this.getNodeType(e);if(e.hasGeometryAttribute(t)===!0){const s=e.geometry.getAttribute(t),o=e.getTypeFromAttribute(s),a=e.getAttribute(t,o);return e.shaderStage==="vertex"?e.format(a.name,o,i):yo(this).build(e,i)}else return console.warn(`AttributeNode: Vertex attribute "${t}" not found on geometry.`),e.generateConst(i)}serialize(e){super.serialize(e),e.global=this.global,e._attributeName=this._attributeName}deserialize(e){super.deserialize(e),this.global=e.global,this._attributeName=e._attributeName}}const mo=(r,e=null)=>ee(new HT(r,e));class ii extends He{static get type(){return"IndexNode"}constructor(e){super("uint"),this.scope=e,this.isIndexNode=!0}generate(e){const t=this.getNodeType(e),i=this.scope;let n;if(i===ii.VERTEX)n=e.getVertexIndex();else if(i===ii.INSTANCE)n=e.getInstanceIndex();else if(i===ii.DRAW)n=e.getDrawIndex();else if(i===ii.INVOCATION_LOCAL)n=e.getInvocationLocalIndex();else if(i===ii.INVOCATION_SUBGROUP)n=e.getInvocationSubgroupIndex();else if(i===ii.SUBGROUP)n=e.getSubgroupIndex();else throw new Error("THREE.IndexNode: Unknown scope: "+i);let s;return e.shaderStage==="vertex"||e.shaderStage==="compute"?s=n:s=yo(this).build(e,t),s}}ii.VERTEX="vertex";ii.INSTANCE="instance";ii.SUBGROUP="subgroup";ii.INVOCATION_LOCAL="invocationLocal";ii.INVOCATION_SUBGROUP="invocationSubgroup";ii.DRAW="draw";const kI=Ot(ii,ii.VERTEX),dg=Ot(ii,ii.INSTANCE),zI=Ot(ii,ii.DRAW);class GI extends hl{static get type(){return"ParameterNode"}constructor(e,t=null){super(e,t),this.isParameterNode=!0}getHash(){return this.uuid}generate(){return this.name}}class VI extends He{static get type(){return"StackNode"}constructor(e=null){super(),this.nodes=[],this.outputNode=null,this.parent=e,this._currentCond=null,this._expressionNode=null,this.isStackNode=!0}getNodeType(e){return this.outputNode?this.outputNode.getNodeType(e):"void"}getMemberType(e,t){return this.outputNode?this.outputNode.getMemberType(e,t):"void"}add(e){return this.nodes.push(e),this}If(e,t){const i=new Xl(t);return this._currentCond=$n(e,i),this.add(this._currentCond)}ElseIf(e,t){const i=new Xl(t),n=$n(e,i);return this._currentCond.elseNode=n,this._currentCond=n,this}Else(e){return this._currentCond.elseNode=new Xl(e),this}Switch(e){return this._expressionNode=ee(e),this}Case(...e){const t=[];if(e.length>=2)for(let a=0;a<e.length-1;a++)t.push(this._expressionNode.equal(ee(e[a])));else throw new Error("TSL: Invalid parameter length. Case() requires at least two parameters.");const i=e[e.length-1],n=new Xl(i);let s=t[0];for(let a=1;a<t.length;a++)s=s.or(t[a]);const o=$n(s,n);return this._currentCond===null?(this._currentCond=o,this.add(this._currentCond)):(this._currentCond.elseNode=o,this._currentCond=o,this)}Default(e){return this.Else(e),this}setup(e){const t=e.getNodeProperties(this);let i=0;for(const n of this.getChildren())n.isVarNode&&n.intent===!0&&e.getNodeProperties(n).assign!==!0||(t["node"+i++]=n);return t.outputNode||null}build(e,...t){const i=e.currentStack,n=ig();zh(this),e.currentStack=this;const s=e.buildStage;for(const a of this.nodes)if(!(a.isVarNode&&a.intent===!0&&e.getNodeProperties(a).assign!==!0)){if(s==="setup")a.build(e);else if(s==="analyze")a.build(e,this);else if(s==="generate"){const l=e.getDataFromNode(a,"any").stages,c=l&&l[e.shaderStage];if(a.isVarNode&&c&&c.length===1&&c[0]&&c[0].isStackNode)continue;a.build(e,"void")}}const o=this.outputNode?this.outputNode.build(e,...t):super.build(e,...t);return zh(n),e.currentStack=i,o}}const Bf=mt(VI).setParameterLength(0,1);class HI extends He{static get type(){return"LoopNode"}constructor(e=[]){super(),this.params=e}getVarName(e){return String.fromCharCode(105+e)}getProperties(e){const t=e.getNodeProperties(this);if(t.stackNode!==void 0)return t;const i={};for(let o=0,a=this.params.length-1;o<a;o++){const l=this.params[o],c=l.isNode!==!0&&l.name||this.getVarName(o),u=l.isNode!==!0&&l.type||"int";i[c]=Qa(c,u)}const n=e.addStack();t.returnsNode=this.params[this.params.length-1](i,e),t.stackNode=n;const s=this.params[0];return s.isNode!==!0&&typeof s.update=="function"&&(t.updateNode=Re(this.params[0].update)(i)),e.removeStack(),t}getNodeType(e){const{returnsNode:t}=this.getProperties(e);return t?t.getNodeType(e):"void"}setup(e){this.getProperties(e)}generate(e){const t=this.getProperties(e),i=this.params,n=t.stackNode;for(let a=0,l=i.length-1;a<l;a++){const c=i[a];let u=!1,h=null,d=null,f=null,p=null,_=null,g=null;c.isNode?c.getNodeType(e)==="bool"?(u=!0,p="bool",d=c.build(e,p)):(p="int",f=this.getVarName(a),h="0",d=c.build(e,p),_="<"):(p=c.type||"int",f=c.name||this.getVarName(a),h=c.start,d=c.end,_=c.condition,g=c.update,typeof h=="number"?h=e.generateConst(p,h):h&&h.isNode&&(h=h.build(e,p)),typeof d=="number"?d=e.generateConst(p,d):d&&d.isNode&&(d=d.build(e,p)),h!==void 0&&d===void 0?(h=h+" - 1",d="0",_=">="):d!==void 0&&h===void 0&&(h="0",_="<"),_===void 0&&(Number(h)>Number(d)?_=">=":_="<"));let m;if(u)m=`while ( ${d} )`;else{const b={start:h,end:d},y=b.start,x=b.end;let S;const w=()=>_.includes("<")?"+=":"-=";if(g!=null)switch(typeof g){case"function":S=e.flowStagesNode(t.updateNode,"void").code.replace(/\t|;/g,"");break;case"number":S=f+" "+w()+" "+e.generateConst(p,g);break;case"string":S=f+" "+g;break;default:g.isNode?S=f+" "+w()+" "+g.build(e):(console.error("THREE.TSL: 'Loop( { update: ... } )' is not a function, string or number."),S="break /* invalid update */")}else p==="int"||p==="uint"?g=_.includes("<")?"++":"--":g=w()+" 1.",S=f+" "+g;const M=e.getVar(p,f)+" = "+y,R=f+" "+_+" "+x;m=`for ( ${M}; ${R}; ${S} )`}e.addFlowCode((a===0?`
`:"")+e.tab+m+` {

`).addFlowTab()}const s=n.build(e,"void"),o=t.returnsNode?t.returnsNode.build(e):"";e.removeFlowTab().addFlowCode(`
`+e.tab+s);for(let a=0,l=this.params.length-1;a<l;a++)e.addFlowCode((a===0?"":e.tab)+`}

`).removeFlowTab();return e.addFlowTab(),o}}const jr=(...r)=>ee(new HI(ga(r,"int"))).toStack(),WI=()=>Qa("break").toStack(),Nx=new ed;class wt extends He{static get type(){return"Object3DNode"}constructor(e,t=null){super(),this.scope=e,this.object3d=t,this.updateType=it.OBJECT,this.uniformNode=new jc(null)}getNodeType(){const e=this.scope;if(e===wt.WORLD_MATRIX)return"mat4";if(e===wt.POSITION||e===wt.VIEW_POSITION||e===wt.DIRECTION||e===wt.SCALE)return"vec3";if(e===wt.RADIUS)return"float"}update(e){const t=this.object3d,i=this.uniformNode,n=this.scope;if(n===wt.WORLD_MATRIX)i.value=t.matrixWorld;else if(n===wt.POSITION)i.value=i.value||new B,i.value.setFromMatrixPosition(t.matrixWorld);else if(n===wt.SCALE)i.value=i.value||new B,i.value.setFromMatrixScale(t.matrixWorld);else if(n===wt.DIRECTION)i.value=i.value||new B,t.getWorldDirection(i.value);else if(n===wt.VIEW_POSITION){const s=e.camera;i.value=i.value||new B,i.value.setFromMatrixPosition(t.matrixWorld),i.value.applyMatrix4(s.matrixWorldInverse)}else if(n===wt.RADIUS){const s=e.object.geometry;s.boundingSphere===null&&s.computeBoundingSphere(),Nx.copy(s.boundingSphere).applyMatrix4(t.matrixWorld),i.value=Nx.radius}}generate(e){const t=this.scope;return t===wt.WORLD_MATRIX?this.uniformNode.nodeType="mat4":t===wt.POSITION||t===wt.VIEW_POSITION||t===wt.DIRECTION||t===wt.SCALE?this.uniformNode.nodeType="vec3":t===wt.RADIUS&&(this.uniformNode.nodeType="float"),this.uniformNode.build(e)}serialize(e){super.serialize(e),e.scope=this.scope}deserialize(e){super.deserialize(e),this.scope=e.scope}}wt.WORLD_MATRIX="worldMatrix";wt.POSITION="position";wt.SCALE="scale";wt.VIEW_POSITION="viewPosition";wt.DIRECTION="direction";wt.RADIUS="radius";class WT extends jc{static get type(){return"BufferNode"}constructor(e,t,i=0){super(e,t),this.isBufferNode=!0,this.bufferType=t,this.bufferCount=i}getElementType(e){return this.getNodeType(e)}getInputType(){return"buffer"}}const $T=(r,e,t)=>ee(new WT(r,e,t));class $I extends Yc{static get type(){return"UniformArrayElementNode"}constructor(e,t){super(e,t),this.isArrayBufferElementNode=!0}generate(e){const t=super.generate(e),i=this.getNodeType(),n=this.node.getPaddedType();return e.format(t,n,i)}}class XI extends WT{static get type(){return"UniformArrayNode"}constructor(e,t=null){super(null),this.array=e,this.elementType=t===null?kh(e[0]):t,this.paddedType=this.getPaddedType(),this.updateType=it.RENDER,this.isArrayBufferNode=!0}getNodeType(){return this.paddedType}getElementType(){return this.elementType}getPaddedType(){const e=this.elementType;let t="vec4";return e==="mat2"?t="mat2":/mat/.test(e)===!0?t="mat4":e.charAt(0)==="i"?t="ivec4":e.charAt(0)==="u"&&(t="uvec4"),t}update(){const{array:e,value:t}=this,i=this.elementType;if(i==="float"||i==="int"||i==="uint")for(let n=0;n<e.length;n++){const s=n*4;t[s]=e[n]}else if(i==="color")for(let n=0;n<e.length;n++){const s=n*4,o=e[n];t[s]=o.r,t[s+1]=o.g,t[s+2]=o.b||0}else if(i==="mat2")for(let n=0;n<e.length;n++){const s=n*4,o=e[n];t[s]=o.elements[0],t[s+1]=o.elements[1],t[s+2]=o.elements[2],t[s+3]=o.elements[3]}else if(i==="mat3")for(let n=0;n<e.length;n++){const s=n*16,o=e[n];t[s]=o.elements[0],t[s+1]=o.elements[1],t[s+2]=o.elements[2],t[s+4]=o.elements[3],t[s+5]=o.elements[4],t[s+6]=o.elements[5],t[s+8]=o.elements[6],t[s+9]=o.elements[7],t[s+10]=o.elements[8],t[s+15]=1}else if(i==="mat4")for(let n=0;n<e.length;n++){const s=n*16,o=e[n];for(let a=0;a<o.elements.length;a++)t[s+a]=o.elements[a]}else for(let n=0;n<e.length;n++){const s=n*4,o=e[n];t[s]=o.x,t[s+1]=o.y,t[s+2]=o.z||0,t[s+3]=o.w||0}}setup(e){const t=this.array.length,i=this.elementType;let n=Float32Array;const s=this.paddedType,o=e.getTypeLength(s);return i.charAt(0)==="i"&&(n=Int32Array),i.charAt(0)==="u"&&(n=Uint32Array),this.value=new n(t*o),this.bufferCount=t,this.bufferType=s,super.setup(e)}element(e){return ee(new $I(this,ee(e)))}}const Us=(r,e)=>ee(new XI(r,e));class qI extends He{constructor(e){super("float"),this.name=e,this.isBuiltinNode=!0}generate(){return this.name}}const hd=mt(qI).setParameterLength(1),XT=St(0,"uint").setName("u_cameraIndex").setGroup(rg("cameraIndex")).toVarying("v_cameraIndex"),Kr=St("float").setName("cameraNear").setGroup(Hi).onRenderUpdate(({camera:r})=>r.near),Zr=St("float").setName("cameraFar").setGroup(Hi).onRenderUpdate(({camera:r})=>r.far),YI=Re(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const t=[];for(const n of r.cameras)t.push(n.projectionMatrix);e=Us(t).setGroup(Hi).setName("cameraProjectionMatrices").element(r.isMultiViewCamera?hd("gl_ViewID_OVR"):XT).toVar("cameraProjectionMatrix")}else e=St("mat4").setName("cameraProjectionMatrix").setGroup(Hi).onRenderUpdate(({camera:t})=>t.projectionMatrix);return e}).once()(),dl=Re(({camera:r})=>{let e;if(r.isArrayCamera&&r.cameras.length>0){const t=[];for(const n of r.cameras)t.push(n.matrixWorldInverse);e=Us(t).setGroup(Hi).setName("cameraViewMatrices").element(r.isMultiViewCamera?hd("gl_ViewID_OVR"):XT).toVar("cameraViewMatrix")}else e=St("mat4").setName("cameraViewMatrix").setGroup(Hi).onRenderUpdate(({camera:t})=>t.matrixWorldInverse);return e}).once()();class Px extends wt{static get type(){return"ModelNode"}constructor(e){super(e)}update(e){this.object3d=e.object,super.update(e)}}const fg=Ot(Px,Px.WORLD_MATRIX),jI=St(new We).onObjectUpdate(({object:r},e)=>e.value.getNormalMatrix(r.matrixWorld)),qT=Re(r=>r.renderer.overrideNodes.modelViewMatrix||KI).once()().toVar("modelViewMatrix"),KI=dl.mul(fg),Dx=Re(r=>(r.context.isHighPrecisionModelViewMatrix=!0,St("mat4").onObjectUpdate(({object:e,camera:t})=>e.modelViewMatrix.multiplyMatrices(t.matrixWorldInverse,e.matrixWorld)))).once()().toVar("highpModelViewMatrix"),Lx=Re(r=>{const e=r.context.isHighPrecisionModelViewMatrix;return St("mat3").onObjectUpdate(({object:t,camera:i})=>(e!==!0&&t.modelViewMatrix.multiplyMatrices(i.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix)))}).once()().toVar("highpModelNormalViewMatrix"),YT=mo("position","vec3"),$i=YT.toVarying("positionLocal"),Ix=YT.toVarying("positionPrevious"),jT=Re(()=>$i.transformDirection(fg).toVarying("v_positionWorldDirection").normalize().toVar("positionWorldDirection"),"vec3").once(["POSITION"])(),di=Re(r=>r.context.setupPositionView().toVarying("v_positionView"),"vec3").once(["POSITION"])(),KT=di.negate().toVarying("v_positionViewDirection").normalize().toVar("positionViewDirection"),ZT=Re(([r=jT])=>{const e=r.z.atan(r.x).mul(1/(Math.PI*2)).add(.5),t=r.y.clamp(-1,1).asin().mul(1/Math.PI).add(.5);return ti(e,t)});class ZI extends He{static get type(){return"FrontFacingNode"}constructor(){super("bool"),this.isFrontFacingNode=!0}generate(e){if(e.shaderStage!=="fragment")return"true";const{renderer:t,material:i}=e;return t.coordinateSystem===Ri&&i.side===Ct?"false":e.getFrontFacing()}}const QI=Ot(ZI),QT=Ue(QI).mul(2).sub(1),dd=Re(([r],{material:e})=>{const t=e.side;return t===Ct?r=r.mul(-1):t===Ai&&(r=r.mul(QT)),r}),JI=mo("normal","vec3"),ds=Re(r=>r.geometry.hasAttribute("normal")===!1?(console.warn('THREE.TSL: Vertex attribute "normal" not found on geometry.'),Ee(0,1,0)):JI,"vec3").once()().toVar("normalLocal"),eF=di.dFdx().cross(di.dFdy()).normalize().toVar("normalFlat"),JT=Re(r=>{let e;return r.material.flatShading===!0?e=eF:e=eS(ds).toVarying("v_normalViewGeometry").normalize(),e},"vec3").once()().toVar("normalViewGeometry"),tF=Re(r=>{let e=JT.transformDirection(dl);return r.material.flatShading!==!0&&(e=e.toVarying("v_normalWorldGeometry")),e.normalize().toVar("normalWorldGeometry")},"vec3").once()(),Nn=Re(({subBuildFn:r,material:e,context:t})=>{let i;return r==="NORMAL"||r==="VERTEX"?(i=JT,e.flatShading!==!0&&(i=dd(i))):i=t.setupNormal().context({getUV:null}),i},"vec3").once(["NORMAL","VERTEX"])().toVar("normalView"),iF=Nn.transformDirection(dl).toVar("normalWorld"),nF=Re(({subBuildFn:r,context:e})=>{let t;return r==="NORMAL"||r==="VERTEX"?t=Nn:t=e.setupClearcoatNormal().context({getUV:null}),t},"vec3").once(["NORMAL","VERTEX"])().toVar("clearcoatNormalView"),sF=Re(([r,e=fg])=>{const t=xo(e),i=r.div(Ee(t[0].dot(t[0]),t[1].dot(t[1]),t[2].dot(t[2])));return t.mul(i).xyz}),eS=Re(([r],e)=>{const t=e.renderer.overrideNodes.modelNormalViewMatrix;if(t!==null)return t.transformDirection(r);const i=jI.mul(r);return dl.transformDirection(i)});Re(()=>(console.warn('THREE.TSL: "transformedNormalView" is deprecated. Use "normalView" instead.'),Nn)).once(["NORMAL","VERTEX"])();Re(()=>(console.warn('THREE.TSL: "transformedNormalWorld" is deprecated. Use "normalWorld" instead.'),iF)).once(["NORMAL","VERTEX"])();Re(()=>(console.warn('THREE.TSL: "transformedClearcoatNormalView" is deprecated. Use "clearcoatNormalView" instead.'),nF)).once(["NORMAL","VERTEX"])();class rF extends jc{static get type(){return"MaxMipLevelNode"}constructor(e){super(0),this._textureNode=e,this.updateType=it.FRAME}get textureNode(){return this._textureNode}get texture(){return this._textureNode.value}update(){const e=this.texture,t=e.images,i=t&&t.length>0?t[0]&&t[0].image||t[0]:e.image;if(i&&i.width!==void 0){const{width:n,height:s}=i;this.value=Math.log2(Math.max(n,s))}}}const oF=mt(rF).setParameterLength(1);let Dl,Ll;class jt extends He{static get type(){return"ScreenNode"}constructor(e){super(),this.scope=e,this.isViewportNode=!0}getNodeType(){return this.scope===jt.VIEWPORT?"vec4":"vec2"}getUpdateType(){let e=it.NONE;return(this.scope===jt.SIZE||this.scope===jt.VIEWPORT)&&(e=it.RENDER),this.updateType=e,e}update({renderer:e}){const t=e.getRenderTarget();this.scope===jt.VIEWPORT?t!==null?Ll.copy(t.viewport):(e.getViewport(Ll),Ll.multiplyScalar(e.getPixelRatio())):t!==null?(Dl.width=t.width,Dl.height=t.height):e.getDrawingBufferSize(Dl)}setup(){const e=this.scope;let t=null;return e===jt.SIZE?t=St(Dl||(Dl=new Je)):e===jt.VIEWPORT?t=St(Ll||(Ll=new je)):t=ti(tS.div(Fx)),t}generate(e){if(this.scope===jt.COORDINATE){let t=e.getFragCoord();if(e.isFlipY()){const i=e.getNodeProperties(Fx).outputNode.build(e);t=`${e.getType("vec2")}( ${t}.x, ${i}.y - ${t}.y )`}return t}return super.generate(e)}}jt.COORDINATE="coordinate";jt.VIEWPORT="viewport";jt.SIZE="size";jt.UV="uv";const _a=Ot(jt,jt.UV),Fx=Ot(jt,jt.SIZE),tS=Ot(jt,jt.COORDINATE),iS=Ot(jt,jt.VIEWPORT);iS.zw;iS.xy;const Qc=(r=0)=>mo("uv"+(r>0?r:""),"vec2");class aF extends He{static get type(){return"TextureSizeNode"}constructor(e,t=null){super("uvec2"),this.isTextureSizeNode=!0,this.textureNode=e,this.levelNode=t}generate(e,t){const i=this.textureNode.build(e,"property"),n=this.levelNode===null?"0":this.levelNode.build(e,"int");return e.format(`${e.getMethod("textureDimensions")}( ${i}, ${n} )`,this.getNodeType(e),t)}}const xa=mt(aF).setParameterLength(1,2),nS=new ki;class fl extends jc{static get type(){return"TextureNode"}constructor(e=nS,t=null,i=null,n=null){super(e),this.isTextureNode=!0,this.uvNode=t,this.levelNode=i,this.biasNode=n,this.compareNode=null,this.depthNode=null,this.gradNode=null,this.sampler=!0,this.updateMatrix=!1,this.updateType=it.NONE,this.referenceNode=null,this._value=e,this._matrixUniform=null,this.setUpdateMatrix(t===null)}set value(e){this.referenceNode?this.referenceNode.value=e:this._value=e}get value(){return this.referenceNode?this.referenceNode.value:this._value}getUniformHash(){return this.value.uuid}getNodeType(){return this.value.isDepthTexture===!0?"float":this.value.type===Mt?"uvec4":this.value.type===hi?"ivec4":"vec4"}getInputType(){return"texture"}getDefaultUV(){return Qc(this.value.channel)}updateReference(){return this.value}getTransformedUV(e){return this._matrixUniform===null&&(this._matrixUniform=St(this.value.matrix)),this._matrixUniform.mul(Ee(e,1)).xy}setUpdateMatrix(e){return this.updateMatrix=e,this.updateType=e?it.OBJECT:it.NONE,this}setupUV(e,t){const i=this.value;return e.isFlipY()&&(i.image instanceof ImageBitmap&&i.flipY===!0||i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0||i.isDepthTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(Zt(xa(this,this.levelNode).y).sub(t.y).sub(1))),t}setup(e){const t=e.getNodeProperties(this);t.referenceNode=this.referenceNode;const i=this.value;if(!i||i.isTexture!==!0)throw new Error("THREE.TSL: `texture( value )` function expects a valid instance of THREE.Texture().");let n=this.uvNode;(n===null||e.context.forceUVContext===!0)&&e.context.getUV&&(n=e.context.getUV(this,e)),n||(n=this.getDefaultUV()),this.updateMatrix===!0&&(n=this.getTransformedUV(n)),n=this.setupUV(e,n);let s=this.levelNode;s===null&&e.context.getTextureLevel&&(s=e.context.getTextureLevel(this)),t.uvNode=n,t.levelNode=s,t.biasNode=this.biasNode,t.compareNode=this.compareNode,t.gradNode=this.gradNode,t.depthNode=this.depthNode}generateUV(e,t){return t.build(e,this.sampler===!0?"vec2":"ivec2")}generateSnippet(e,t,i,n,s,o,a,l){const c=this.value;let u;return n?u=e.generateTextureLevel(c,t,i,n,o):s?u=e.generateTextureBias(c,t,i,s,o):l?u=e.generateTextureGrad(c,t,i,l,o):a?u=e.generateTextureCompare(c,t,i,a,o):this.sampler===!1?u=e.generateTextureLoad(c,t,i,o):u=e.generateTexture(c,t,i,o),u}generate(e,t){const i=this.value,n=e.getNodeProperties(this),s=super.generate(e,"property");if(/^sampler/.test(t))return s+"_sampler";if(e.isReference(t))return s;{const o=e.getDataFromNode(this);let a=o.propertyName;if(a===void 0){const{uvNode:u,levelNode:h,biasNode:d,compareNode:f,depthNode:p,gradNode:_}=n,g=this.generateUV(e,u),m=h?h.build(e,"float"):null,b=d?d.build(e,"float"):null,y=p?p.build(e,"int"):null,x=f?f.build(e,"float"):null,S=_?[_[0].build(e,"vec2"),_[1].build(e,"vec2")]:null,w=e.getVarFromNode(this);a=e.getPropertyName(w);const M=this.generateSnippet(e,s,g,m,b,y,x,S);e.addLineFlowCode(`${a} = ${M}`,this),o.snippet=M,o.propertyName=a}let l=a;const c=this.getNodeType(e);return e.needsToWorkingColorSpace(i)&&(l=zT(Qa(l,c),i.colorSpace).setup(e).build(e,c)),e.format(l,c,t)}}setSampler(e){return this.sampler=e,this}getSampler(){return this.sampler}uv(e){return console.warn("THREE.TextureNode: .uv() has been renamed. Use .sample() instead."),this.sample(e)}sample(e){const t=this.clone();return t.uvNode=ee(e),t.referenceNode=this.getSelf(),ee(t)}load(e){return this.sample(e).setSampler(!1)}blur(e){const t=this.clone();t.biasNode=ee(e).mul(oF(t)),t.referenceNode=this.getSelf();const i=t.value;return t.generateMipmaps===!1&&(i&&i.generateMipmaps===!1||i.minFilter===Rt||i.magFilter===Rt)&&(console.warn("THREE.TSL: texture().blur() requires mipmaps and sampling. Use .generateMipmaps=true and .minFilter/.magFilter=THREE.LinearFilter in the Texture."),t.biasNode=null),ee(t)}level(e){const t=this.clone();return t.levelNode=ee(e),t.referenceNode=this.getSelf(),ee(t)}size(e){return xa(this,e)}bias(e){const t=this.clone();return t.biasNode=ee(e),t.referenceNode=this.getSelf(),ee(t)}compare(e){const t=this.clone();return t.compareNode=ee(e),t.referenceNode=this.getSelf(),ee(t)}grad(e,t){const i=this.clone();return i.gradNode=[ee(e),ee(t)],i.referenceNode=this.getSelf(),ee(i)}depth(e){const t=this.clone();return t.depthNode=ee(e),t.referenceNode=this.getSelf(),ee(t)}serialize(e){super.serialize(e),e.value=this.value.toJSON(e.meta).uuid,e.sampler=this.sampler,e.updateMatrix=this.updateMatrix,e.updateType=this.updateType}deserialize(e){super.deserialize(e),this.value=e.meta.textures[e.value],this.sampler=e.sampler,this.updateMatrix=e.updateMatrix,this.updateType=e.updateType}update(){const e=this.value,t=this._matrixUniform;t!==null&&(t.value=e.matrix),e.matrixAutoUpdate===!0&&e.updateMatrix()}clone(){const e=new this.constructor(this.value,this.uvNode,this.levelNode,this.biasNode);return e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}const lF=mt(fl).setParameterLength(1,4).setName("texture"),as=(r=nS,e=null,t=null,i=null)=>{let n;return r&&r.isTextureNode===!0?(n=ee(r.clone()),n.referenceNode=r.getSelf(),e!==null&&(n.uvNode=ee(e)),t!==null&&(n.levelNode=ee(t)),i!==null&&(n.biasNode=ee(i))):n=lF(r,e,t,i),n},zn=(...r)=>as(...r).setSampler(!1),Zo=new Je;class cF extends fl{static get type(){return"ViewportTextureNode"}constructor(e=_a,t=null,i=null){let n=null;i===null?(n=new x1,n.minFilter=Xi,i=n):n=i,super(i,e,t),this.generateMipmaps=!1,this.defaultFramebuffer=n,this.isOutputTextureNode=!0,this.updateBeforeType=it.RENDER,this._textures=new WeakMap}getFrameBufferTexture(e=null){const t=this.referenceNode?this.referenceNode.defaultFramebuffer:this.defaultFramebuffer;if(e===null)return t;if(this._textures.has(e)===!1){const i=t.clone();this._textures.set(e,i)}return this._textures.get(e)}updateBefore(e){const t=e.renderer,i=t.getRenderTarget();i===null?t.getDrawingBufferSize(Zo):Zo.set(i.width,i.height);const n=this.getFrameBufferTexture(i);(n.image.width!==Zo.width||n.image.height!==Zo.height)&&(n.image.width=Zo.width,n.image.height=Zo.height,n.needsUpdate=!0);const s=n.generateMipmaps;n.generateMipmaps=this.generateMipmaps,t.copyFramebufferToTexture(n),n.generateMipmaps=s,this.value=n}clone(){const e=new this.constructor(this.uvNode,this.levelNode,this.value);return e.generateMipmaps=this.generateMipmaps,e}}let Of=null;class uF extends cF{static get type(){return"ViewportDepthTextureNode"}constructor(e=_a,t=null){Of===null&&(Of=new Xn),super(e,t,Of)}}const hF=mt(uF).setParameterLength(0,2);class qi extends He{static get type(){return"ViewportDepthNode"}constructor(e,t=null){super("float"),this.scope=e,this.valueNode=t,this.isViewportDepthNode=!0}generate(e){const{scope:t}=this;return t===qi.DEPTH_BASE?e.getFragDepth():super.generate(e)}setup({camera:e}){const{scope:t}=this,i=this.valueNode;let n=null;if(t===qi.DEPTH_BASE)i!==null&&(n=rS().assign(i));else if(t===qi.DEPTH)e.isPerspectiveCamera?n=dF(di.z,Kr,Zr):n=nc(di.z,Kr,Zr);else if(t===qi.LINEAR_DEPTH)if(i!==null)if(e.isPerspectiveCamera){const s=sS(i,Kr,Zr);n=nc(s,Kr,Zr)}else n=i;else n=nc(di.z,Kr,Zr);return n}}qi.DEPTH_BASE="depthBase";qi.DEPTH="depth";qi.LINEAR_DEPTH="linearDepth";const nc=(r,e,t)=>r.add(e).div(e.sub(t)),dF=(r,e,t)=>e.add(r).mul(t).div(t.sub(e).mul(r)),sS=(r,e,t)=>e.mul(t).div(t.sub(e).mul(r).sub(t)),fF=(r,e,t)=>{e=e.max(1e-6).toVar();const i=ao(r.negate().div(e)),n=ao(t.div(e));return i.div(n)},rS=mt(qi,qi.DEPTH_BASE),oS=Ot(qi,qi.DEPTH),pF=mt(qi,qi.LINEAR_DEPTH).setParameterLength(0,1);hF();oS.assign=r=>rS(r);new Ds;new B;new B;new B;new It;new B(0,0,-1);new je;new B;new B;new je;new Je;const mF=new go;_a.flipX();mF.depthTexture=new Xn(1,1);const Ux=new Hs,kf=new It,gF=St(0).onReference(({material:r})=>r).onObjectUpdate(({material:r})=>r.refractionRatio),aS=St(new It).onReference(function(r){return r.material}).onObjectUpdate(function({material:r,scene:e}){const t=e.environment!==null&&r.envMap===null?e.environmentRotation:r.envMapRotation;return t?(Ux.copy(t),kf.makeRotationFromEuler(Ux)):kf.identity(),kf}),_F=KT.negate().reflect(Nn),xF=KT.negate().refract(Nn,gF),yF=_F.transformDirection(dl).toVar("reflectVector"),bF=xF.transformDirection(dl).toVar("reflectVector"),TF=new Hc;class SF extends fl{static get type(){return"CubeTextureNode"}constructor(e,t=null,i=null,n=null){super(e,t,i,n),this.isCubeTextureNode=!0}getInputType(){return"cubeTexture"}getDefaultUV(){const e=this.value;return e.mapping===ls?yF:e.mapping===cs?bF:(console.error('THREE.CubeTextureNode: Mapping "%s" not supported.',e.mapping),Ee(0,0,0))}setUpdateMatrix(){}setupUV(e,t){const i=this.value;return(e.renderer.coordinateSystem===fo||!i.isRenderTargetTexture)&&(t=Ee(t.x.negate(),t.yz)),aS.mul(t)}generateUV(e,t){return t.build(e,"vec3")}}const vF=mt(SF).setParameterLength(1,4).setName("cubeTexture"),Ic=(r=TF,e=null,t=null,i=null)=>{let n;return r&&r.isCubeTextureNode===!0?(n=ee(r.clone()),n.referenceNode=r.getSelf(),e!==null&&(n.uvNode=ee(e)),t!==null&&(n.levelNode=ee(t)),i!==null&&(n.biasNode=ee(i))):n=vF(r,e,t,i),n};class MF extends Yc{static get type(){return"ReferenceElementNode"}constructor(e,t){super(e,t),this.referenceNode=e,this.isReferenceElementNode=!0}getNodeType(){return this.referenceNode.uniformType}generate(e){const t=super.generate(e),i=this.referenceNode.getNodeType(),n=this.getNodeType();return e.format(t,i,n)}}class pg extends He{static get type(){return"ReferenceNode"}constructor(e,t,i=null,n=null){super(),this.property=e,this.uniformType=t,this.object=i,this.count=n,this.properties=e.split("."),this.reference=i,this.node=null,this.group=null,this.name=null,this.updateType=it.OBJECT}element(e){return ee(new MF(this,ee(e)))}setGroup(e){return this.group=e,this}setName(e){return this.name=e,this}label(e){return console.warn('THREE.TSL: "label()" has been deprecated. Use "setName()" instead.'),this.setName(e)}setNodeType(e){let t=null;this.count!==null?t=$T(null,e,this.count):Array.isArray(this.getValueFromReference())?t=Us(null,e):e==="texture"?t=as(null):e==="cubeTexture"?t=Ic(null):t=St(null,e),this.group!==null&&t.setGroup(this.group),this.name!==null&&t.setName(this.name),this.node=t.getSelf()}getNodeType(e){return this.node===null&&(this.updateReference(e),this.updateValue()),this.node.getNodeType(e)}getValueFromReference(e=this.reference){const{properties:t}=this;let i=e[t[0]];for(let n=1;n<t.length;n++)i=i[t[n]];return i}updateReference(e){return this.reference=this.object!==null?this.object:e.object,this.reference}setup(){return this.updateValue(),this.node}update(){this.updateValue()}updateValue(){this.node===null&&this.setNodeType(this.uniformType);const e=this.getValueFromReference();Array.isArray(e)?this.node.array=e:this.node.value=e}}const An=(r,e,t)=>ee(new pg(r,e,t)),Bx=(r,e,t,i)=>ee(new pg(r,e,i,t));class EF extends pg{static get type(){return"MaterialReferenceNode"}constructor(e,t,i=null){super(e,t,i),this.material=i,this.isMaterialReferenceNode=!0}updateReference(e){return this.reference=this.material!==null?this.material:e.material,this.reference}}const ia=(r,e,t=null)=>ee(new EF(r,e,t)),lS=Qc(),AF=di.dFdx(),wF=di.dFdy(),cS=lS.dFdx(),uS=lS.dFdy(),hS=Nn,dS=wF.cross(hS),fS=hS.cross(AF),kp=dS.mul(cS.x).add(fS.mul(uS.x)),zp=dS.mul(cS.y).add(fS.mul(uS.y)),Ox=kp.dot(kp).max(zp.dot(zp)),pS=Ox.equal(0).select(0,Ox.inverseSqrt()),RF=kp.mul(pS).toVar("tangentViewFrame"),CF=zp.mul(pS).toVar("bitangentViewFrame"),mS=Re(r=>(r.geometry.hasAttribute("tangent")===!1&&r.geometry.computeTangents(),mo("tangent","vec4")))(),mg=mS.xyz.toVar("tangentLocal"),gS=Re(({subBuildFn:r,geometry:e,material:t})=>{let i;return r==="VERTEX"||e.hasAttribute("tangent")?i=qT.mul(_i(mg,0)).xyz.toVarying("v_tangentView").normalize():i=RF,t.flatShading!==!0&&(i=dd(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("tangentView"),NF=Re(([r,e],{subBuildFn:t,material:i})=>{let n=r.mul(mS.w).xyz;return t==="NORMAL"&&i.flatShading!==!0&&(n=n.toVarying(e)),n}).once(["NORMAL"]),PF=Re(({subBuildFn:r,geometry:e,material:t})=>{let i;return r==="VERTEX"||e.hasAttribute("tangent")?i=NF(Nn.cross(gS),"v_bitangentView").normalize():i=CF,t.flatShading!==!0&&(i=dd(i)),i},"vec3").once(["NORMAL","VERTEX"])().toVar("bitangentView"),DF=xo(gS,PF,Nn).toVar("TBNViewMatrix");class LF extends yi{static get type(){return"NormalMapNode"}constructor(e,t=null){super("vec3"),this.node=e,this.scaleNode=t,this.normalMapType=Mp}setup({material:e}){const{normalMapType:t,scaleNode:i}=this;let n=this.node.mul(2).sub(1);if(i!==null){let o=i;e.flatShading===!0&&(o=dd(o)),n=Ee(n.xy.mul(o),n.z)}let s=null;return t===Tb?s=eS(n):t===Mp?s=DF.mul(n).normalize():(console.error(`THREE.NodeMaterial: Unsupported normal map type: ${t}`),s=Nn),s}}const kx=mt(LF).setParameterLength(1,2),IF=Re(({textureNode:r,bumpScale:e})=>{const t=n=>r.cache().context({getUV:s=>n(s.uvNode||Qc()),forceUVContext:!0}),i=Ue(t(n=>n));return ti(Ue(t(n=>n.add(n.dFdx()))).sub(i),Ue(t(n=>n.add(n.dFdy()))).sub(i)).mul(e)}),FF=Re(r=>{const{surf_pos:e,surf_norm:t,dHdxy:i}=r,n=e.dFdx().normalize(),s=e.dFdy().normalize(),o=t,a=s.cross(o),l=o.cross(n),c=n.dot(a).mul(QT),u=c.sign().mul(i.x.mul(a).add(i.y.mul(l)));return c.abs().mul(t).sub(u).normalize()});class UF extends yi{static get type(){return"BumpMapNode"}constructor(e,t=null){super("vec3"),this.textureNode=e,this.scaleNode=t}setup(){const e=this.scaleNode!==null?this.scaleNode:1,t=IF({textureNode:this.textureNode,bumpScale:e});return FF({surf_pos:di,surf_norm:Nn,dHdxy:t})}}const BF=mt(UF).setParameterLength(1,2),zx=new Map;class de extends He{static get type(){return"MaterialNode"}constructor(e){super(),this.scope=e}getCache(e,t){let i=zx.get(e);return i===void 0&&(i=ia(e,t),zx.set(e,i)),i}getFloat(e){return this.getCache(e,"float")}getColor(e){return this.getCache(e,"color")}getTexture(e){return this.getCache(e==="map"?"map":e+"Map","texture")}setup(e){const t=e.context.material,i=this.scope;let n=null;if(i===de.COLOR){const s=t.color!==void 0?this.getColor(i):Ee();t.map&&t.map.isTexture===!0?n=s.mul(this.getTexture("map")):n=s}else if(i===de.OPACITY){const s=this.getFloat(i);t.alphaMap&&t.alphaMap.isTexture===!0?n=s.mul(this.getTexture("alpha")):n=s}else if(i===de.SPECULAR_STRENGTH)t.specularMap&&t.specularMap.isTexture===!0?n=this.getTexture("specular").r:n=Ue(1);else if(i===de.SPECULAR_INTENSITY){const s=this.getFloat(i);t.specularIntensityMap&&t.specularIntensityMap.isTexture===!0?n=s.mul(this.getTexture(i).a):n=s}else if(i===de.SPECULAR_COLOR){const s=this.getColor(i);t.specularColorMap&&t.specularColorMap.isTexture===!0?n=s.mul(this.getTexture(i).rgb):n=s}else if(i===de.ROUGHNESS){const s=this.getFloat(i);t.roughnessMap&&t.roughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).g):n=s}else if(i===de.METALNESS){const s=this.getFloat(i);t.metalnessMap&&t.metalnessMap.isTexture===!0?n=s.mul(this.getTexture(i).b):n=s}else if(i===de.EMISSIVE){const s=this.getFloat("emissiveIntensity"),o=this.getColor(i).mul(s);t.emissiveMap&&t.emissiveMap.isTexture===!0?n=o.mul(this.getTexture(i)):n=o}else if(i===de.NORMAL)t.normalMap?(n=kx(this.getTexture("normal"),this.getCache("normalScale","vec2")),n.normalMapType=t.normalMapType):t.bumpMap?n=BF(this.getTexture("bump").r,this.getFloat("bumpScale")):n=Nn;else if(i===de.CLEARCOAT){const s=this.getFloat(i);t.clearcoatMap&&t.clearcoatMap.isTexture===!0?n=s.mul(this.getTexture(i).r):n=s}else if(i===de.CLEARCOAT_ROUGHNESS){const s=this.getFloat(i);t.clearcoatRoughnessMap&&t.clearcoatRoughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).r):n=s}else if(i===de.CLEARCOAT_NORMAL)t.clearcoatNormalMap?n=kx(this.getTexture(i),this.getCache(i+"Scale","vec2")):n=Nn;else if(i===de.SHEEN){const s=this.getColor("sheenColor").mul(this.getFloat("sheen"));t.sheenColorMap&&t.sheenColorMap.isTexture===!0?n=s.mul(this.getTexture("sheenColor").rgb):n=s}else if(i===de.SHEEN_ROUGHNESS){const s=this.getFloat(i);t.sheenRoughnessMap&&t.sheenRoughnessMap.isTexture===!0?n=s.mul(this.getTexture(i).a):n=s,n=n.clamp(.07,1)}else if(i===de.ANISOTROPY)if(t.anisotropyMap&&t.anisotropyMap.isTexture===!0){const s=this.getTexture(i);n=ST(Il.x,Il.y,Il.y.negate(),Il.x).mul(s.rg.mul(2).sub(ti(1)).normalize().mul(s.b))}else n=Il;else if(i===de.IRIDESCENCE_THICKNESS){const s=An("1","float",t.iridescenceThicknessRange);if(t.iridescenceThicknessMap){const o=An("0","float",t.iridescenceThicknessRange);n=s.sub(o).mul(this.getTexture(i).g).add(o)}else n=s}else if(i===de.TRANSMISSION){const s=this.getFloat(i);t.transmissionMap?n=s.mul(this.getTexture(i).r):n=s}else if(i===de.THICKNESS){const s=this.getFloat(i);t.thicknessMap?n=s.mul(this.getTexture(i).g):n=s}else if(i===de.IOR)n=this.getFloat(i);else if(i===de.LIGHT_MAP)n=this.getTexture(i).rgb.mul(this.getFloat("lightMapIntensity"));else if(i===de.AO)n=this.getTexture(i).r.sub(1).mul(this.getFloat("aoMapIntensity")).add(1);else if(i===de.LINE_DASH_OFFSET)n=t.dashOffset?this.getFloat(i):Ue(0);else{const s=this.getNodeType(e);n=this.getCache(i,s)}return n}}de.ALPHA_TEST="alphaTest";de.COLOR="color";de.OPACITY="opacity";de.SHININESS="shininess";de.SPECULAR="specular";de.SPECULAR_STRENGTH="specularStrength";de.SPECULAR_INTENSITY="specularIntensity";de.SPECULAR_COLOR="specularColor";de.REFLECTIVITY="reflectivity";de.ROUGHNESS="roughness";de.METALNESS="metalness";de.NORMAL="normal";de.CLEARCOAT="clearcoat";de.CLEARCOAT_ROUGHNESS="clearcoatRoughness";de.CLEARCOAT_NORMAL="clearcoatNormal";de.EMISSIVE="emissive";de.ROTATION="rotation";de.SHEEN="sheen";de.SHEEN_ROUGHNESS="sheenRoughness";de.ANISOTROPY="anisotropy";de.IRIDESCENCE="iridescence";de.IRIDESCENCE_IOR="iridescenceIOR";de.IRIDESCENCE_THICKNESS="iridescenceThickness";de.IOR="ior";de.TRANSMISSION="transmission";de.THICKNESS="thickness";de.ATTENUATION_DISTANCE="attenuationDistance";de.ATTENUATION_COLOR="attenuationColor";de.LINE_SCALE="scale";de.LINE_DASH_SIZE="dashSize";de.LINE_GAP_SIZE="gapSize";de.LINE_WIDTH="linewidth";de.LINE_DASH_OFFSET="dashOffset";de.POINT_SIZE="size";de.DISPERSION="dispersion";de.LIGHT_MAP="light";de.AO="ao";const OF=Ot(de,de.ALPHA_TEST),kF=Ot(de,de.COLOR),zF=Ot(de,de.EMISSIVE),GF=Ot(de,de.OPACITY),VF=Ot(de,de.NORMAL),HF=Ot(de,de.LIGHT_MAP),WF=Ot(de,de.AO),Il=St(new Je).onReference(function(r){return r.material}).onRenderUpdate(function({material:r}){this.value.set(r.anisotropy*Math.cos(r.anisotropyRotation),r.anisotropy*Math.sin(r.anisotropyRotation))}),_S=Re(r=>r.context.setupModelViewProjection(),"vec4").once()().toVarying("v_modelViewProjection");class $F extends He{static get type(){return"InstanceNode"}constructor(e,t,i=null){super("void"),this.count=e,this.instanceMatrix=t,this.instanceColor=i,this.instanceMatrixNode=null,this.instanceColorNode=null,this.updateType=it.FRAME,this.buffer=null,this.bufferColor=null}setup(e){const{count:t,instanceMatrix:i,instanceColor:n}=this;let{instanceMatrixNode:s,instanceColorNode:o}=this;if(s===null){if(t<=1e3)s=$T(i.array,"mat4",Math.max(t,1)).element(dg);else{const l=new T1(i.array,16,1);this.buffer=l;const c=i.usage===na?Cx:Rx,u=[c(l,"vec4",16,0),c(l,"vec4",16,4),c(l,"vec4",16,8),c(l,"vec4",16,12)];s=sg(...u)}this.instanceMatrixNode=s}if(n&&o===null){const l=new p1(n.array,3),c=n.usage===na?Cx:Rx;this.bufferColor=l,o=Ee(c(l,"vec3",3,0)),this.instanceColorNode=o}const a=s.mul($i).xyz;if($i.assign(a),e.hasGeometryAttribute("normal")){const l=sF(ds,s);ds.assign(l)}this.instanceColorNode!==null&&Gh("vec3","vInstanceColor").assign(this.instanceColorNode)}update(){this.instanceMatrix.usage!==na&&this.buffer!==null&&this.instanceMatrix.version!==this.buffer.version&&(this.buffer.version=this.instanceMatrix.version),this.instanceColor&&this.instanceColor.usage!==na&&this.bufferColor!==null&&this.instanceColor.version!==this.bufferColor.version&&(this.bufferColor.version=this.instanceColor.version)}}class XF extends $F{static get type(){return"InstancedMeshNode"}constructor(e){const{count:t,instanceMatrix:i,instanceColor:n}=e;super(t,i,n),this.instancedMesh=e}}const qF=mt(XF).setParameterLength(1);class YF extends He{static get type(){return"BatchNode"}constructor(e){super("void"),this.batchMesh=e,this.batchingIdNode=null}setup(e){this.batchingIdNode===null&&(e.getDrawIndex()===null?this.batchingIdNode=dg:this.batchingIdNode=zI);const i=Re(([p])=>{const _=Zt(xa(zn(this.batchMesh._indirectTexture),0).x),g=Zt(p).mod(_),m=Zt(p).div(_);return zn(this.batchMesh._indirectTexture,Ls(g,m)).x}).setLayout({name:"getIndirectIndex",type:"uint",inputs:[{name:"id",type:"int"}]})(Zt(this.batchingIdNode)),n=this.batchMesh._matricesTexture,s=Zt(xa(zn(n),0).x),o=Ue(i).mul(4).toInt().toVar(),a=o.mod(s),l=o.div(s),c=sg(zn(n,Ls(a,l)),zn(n,Ls(a.add(1),l)),zn(n,Ls(a.add(2),l)),zn(n,Ls(a.add(3),l))),u=this.batchMesh._colorsTexture;if(u!==null){const _=Re(([g])=>{const m=Zt(xa(zn(u),0).x),b=g,y=b.mod(m),x=b.div(m);return zn(u,Ls(y,x)).rgb}).setLayout({name:"getBatchingColor",type:"vec3",inputs:[{name:"id",type:"int"}]})(i);Gh("vec3","vBatchColor").assign(_)}const h=xo(c);$i.assign(c.mul($i));const d=ds.div(Ee(h[0].dot(h[0]),h[1].dot(h[1]),h[2].dot(h[2]))),f=h.mul(d).xyz;ds.assign(f),e.hasGeometryAttribute("tangent")&&mg.mulAssign(h)}}const jF=mt(YF).setParameterLength(1),Gx=new WeakMap;class KF extends He{static get type(){return"SkinningNode"}constructor(e){super("void"),this.skinnedMesh=e,this.updateType=it.OBJECT,this.skinIndexNode=mo("skinIndex","uvec4"),this.skinWeightNode=mo("skinWeight","vec4"),this.bindMatrixNode=An("bindMatrix","mat4"),this.bindMatrixInverseNode=An("bindMatrixInverse","mat4"),this.boneMatricesNode=Bx("skeleton.boneMatrices","mat4",e.skeleton.bones.length),this.positionNode=$i,this.toPositionNode=$i,this.previousBoneMatricesNode=null}getSkinnedPosition(e=this.boneMatricesNode,t=this.positionNode){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:s,bindMatrixInverseNode:o}=this,a=e.element(i.x),l=e.element(i.y),c=e.element(i.z),u=e.element(i.w),h=s.mul(t),d=Nc(a.mul(n.x).mul(h),l.mul(n.y).mul(h),c.mul(n.z).mul(h),u.mul(n.w).mul(h));return o.mul(d).xyz}getSkinnedNormal(e=this.boneMatricesNode,t=ds){const{skinIndexNode:i,skinWeightNode:n,bindMatrixNode:s,bindMatrixInverseNode:o}=this,a=e.element(i.x),l=e.element(i.y),c=e.element(i.z),u=e.element(i.w);let h=Nc(n.x.mul(a),n.y.mul(l),n.z.mul(c),n.w.mul(u));return h=o.mul(h).mul(s),h.transformDirection(t).xyz}getPreviousSkinnedPosition(e){const t=e.object;return this.previousBoneMatricesNode===null&&(t.skeleton.previousBoneMatrices=new Float32Array(t.skeleton.boneMatrices),this.previousBoneMatricesNode=Bx("skeleton.previousBoneMatrices","mat4",t.skeleton.bones.length)),this.getSkinnedPosition(this.previousBoneMatricesNode,Ix)}needsPreviousBoneMatrices(e){const t=e.renderer.getMRT();return t&&t.has("velocity")||GP(e.object).useVelocity===!0}setup(e){this.needsPreviousBoneMatrices(e)&&Ix.assign(this.getPreviousSkinnedPosition(e));const t=this.getSkinnedPosition();if(this.toPositionNode&&this.toPositionNode.assign(t),e.hasGeometryAttribute("normal")){const i=this.getSkinnedNormal();ds.assign(i),e.hasGeometryAttribute("tangent")&&mg.assign(i)}return t}generate(e,t){if(t!=="void")return super.generate(e,t)}update(e){const t=e.object&&e.object.skeleton?e.object.skeleton:this.skinnedMesh.skeleton;Gx.get(t)!==e.frameId&&(Gx.set(t,e.frameId),this.previousBoneMatricesNode!==null&&t.previousBoneMatrices.set(t.boneMatrices),t.update())}}const ZF=r=>ee(new KF(r)),zf=new WeakMap,an=new je,Vx=Re(({bufferMap:r,influence:e,stride:t,width:i,depth:n,offset:s})=>{const o=Zt(kI).mul(t).add(s),a=o.div(i),l=o.sub(a.mul(i));return zn(r,Ls(l,a)).depth(n).xyz.mul(e)});function QF(r){const e=r.morphAttributes.position!==void 0,t=r.morphAttributes.normal!==void 0,i=r.morphAttributes.color!==void 0,n=r.morphAttributes.position||r.morphAttributes.normal||r.morphAttributes.color,s=n!==void 0?n.length:0;let o=zf.get(r);if(o===void 0||o.count!==s){let b=function(){g.dispose(),zf.delete(r),r.removeEventListener("dispose",b)};var a=b;o!==void 0&&o.texture.dispose();const l=r.morphAttributes.position||[],c=r.morphAttributes.normal||[],u=r.morphAttributes.color||[];let h=0;e===!0&&(h=1),t===!0&&(h=2),i===!0&&(h=3);let d=r.attributes.position.count*h,f=1;const p=4096;d>p&&(f=Math.ceil(d/p),d=p);const _=new Float32Array(d*f*4*s),g=new wm(_,d,f,s);g.type=Wt,g.needsUpdate=!0;const m=h*4;for(let y=0;y<s;y++){const x=l[y],S=c[y],w=u[y],M=d*f*4*y;for(let R=0;R<x.count;R++){const T=R*m;e===!0&&(an.fromBufferAttribute(x,R),_[M+T+0]=an.x,_[M+T+1]=an.y,_[M+T+2]=an.z,_[M+T+3]=0),t===!0&&(an.fromBufferAttribute(S,R),_[M+T+4]=an.x,_[M+T+5]=an.y,_[M+T+6]=an.z,_[M+T+7]=0),i===!0&&(an.fromBufferAttribute(w,R),_[M+T+8]=an.x,_[M+T+9]=an.y,_[M+T+10]=an.z,_[M+T+11]=w.itemSize===4?an.w:1)}}o={count:s,texture:g,stride:h,size:new Je(d,f)},zf.set(r,o),r.addEventListener("dispose",b)}return o}class JF extends He{static get type(){return"MorphNode"}constructor(e){super("void"),this.mesh=e,this.morphBaseInfluence=St(1),this.updateType=it.OBJECT}setup(e){const{geometry:t}=e,i=t.morphAttributes.position!==void 0,n=t.hasAttribute("normal")&&t.morphAttributes.normal!==void 0,s=t.morphAttributes.position||t.morphAttributes.normal||t.morphAttributes.color,o=s!==void 0?s.length:0,{texture:a,stride:l,size:c}=QF(t);i===!0&&$i.mulAssign(this.morphBaseInfluence),n===!0&&ds.mulAssign(this.morphBaseInfluence);const u=Zt(c.width);jr(o,({i:h})=>{const d=Ue(0).toVar();this.mesh.count>1&&this.mesh.morphTexture!==null&&this.mesh.morphTexture!==void 0?d.assign(zn(this.mesh.morphTexture,Ls(Zt(h).add(1),Zt(dg))).r):d.assign(An("morphTargetInfluences","float").element(h).toVar()),Rn(d.notEqual(0),()=>{i===!0&&$i.addAssign(Vx({bufferMap:a,influence:d,stride:l,width:u,depth:h,offset:Zt(0)})),n===!0&&ds.addAssign(Vx({bufferMap:a,influence:d,stride:l,width:u,depth:h,offset:Zt(1)}))})})}update(){const e=this.morphBaseInfluence;this.mesh.geometry.morphTargetsRelative?e.value=1:e.value=1-this.mesh.morphTargetInfluences.reduce((t,i)=>t+i,0)}}const eU=mt(JF).setParameterLength(1);class xS extends He{static get type(){return"LightingNode"}constructor(){super("vec3"),this.isLightingNode=!0}}class tU extends xS{static get type(){return"AONode"}constructor(e=null){super(),this.aoNode=e}setup(e){e.context.ambientOcclusion.mulAssign(this.aoNode)}}class iU extends BT{static get type(){return"LightingContextNode"}constructor(e,t=null,i=null,n=null){super(e),this.lightingModel=t,this.backdropNode=i,this.backdropAlphaNode=n,this._value=null}getContext(){const{backdropNode:e,backdropAlphaNode:t}=this,i=Ee().toVar("directDiffuse"),n=Ee().toVar("directSpecular"),s=Ee().toVar("indirectDiffuse"),o=Ee().toVar("indirectSpecular"),a={directDiffuse:i,directSpecular:n,indirectDiffuse:s,indirectSpecular:o};return{radiance:Ee().toVar("radiance"),irradiance:Ee().toVar("irradiance"),iblIrradiance:Ee().toVar("iblIrradiance"),ambientOcclusion:Ue(1).toVar("ambientOcclusion"),reflectedLight:a,backdrop:e,backdropAlpha:t}}setup(e){return this.value=this._value||(this._value=this.getContext()),this.value.lightingModel=this.lightingModel||e.context.lightingModel,super.setup(e)}}const nU=mt(iU);class sU extends xS{static get type(){return"IrradianceNode"}constructor(e){super(),this.node=e}setup(e){e.context.irradiance.addAssign(this.node)}}class Cn extends He{static get type(){return"ClippingNode"}constructor(e=Cn.DEFAULT){super(),this.scope=e}setup(e){super.setup(e);const t=e.clippingContext,{intersectionPlanes:i,unionPlanes:n}=t;return this.hardwareClipping=e.material.hardwareClipping,this.scope===Cn.ALPHA_TO_COVERAGE?this.setupAlphaToCoverage(i,n):this.scope===Cn.HARDWARE?this.setupHardwareClipping(n,e):this.setupDefault(i,n)}setupAlphaToCoverage(e,t){return Re(()=>{const i=Ue().toVar("distanceToPlane"),n=Ue().toVar("distanceToGradient"),s=Ue(1).toVar("clipOpacity"),o=t.length;if(this.hardwareClipping===!1&&o>0){const l=Us(t);jr(o,({i:c})=>{const u=l.element(c);i.assign(di.dot(u.xyz).negate().add(u.w)),n.assign(i.fwidth().div(2)),s.mulAssign(Lc(n.negate(),n,i))})}const a=e.length;if(a>0){const l=Us(e),c=Ue(1).toVar("intersectionClipOpacity");jr(a,({i:u})=>{const h=l.element(u);i.assign(di.dot(h.xyz).negate().add(h.w)),n.assign(i.fwidth().div(2)),c.mulAssign(Lc(n.negate(),n,i).oneMinus())}),s.mulAssign(c.oneMinus())}kn.a.mulAssign(s),kn.a.equal(0).discard()})()}setupDefault(e,t){return Re(()=>{const i=t.length;if(this.hardwareClipping===!1&&i>0){const s=Us(t);jr(i,({i:o})=>{const a=s.element(o);di.dot(a.xyz).greaterThan(a.w).discard()})}const n=e.length;if(n>0){const s=Us(e),o=ng(!0).toVar("clipped");jr(n,({i:a})=>{const l=s.element(a);o.assign(di.dot(l.xyz).greaterThan(l.w).and(o))}),o.discard()}})()}setupHardwareClipping(e,t){const i=e.length;return t.enableHardwareClipping(i),Re(()=>{const n=Us(e),s=hd(t.getClipDistance());jr(i,({i:o})=>{const a=n.element(o),l=di.dot(a.xyz).sub(a.w).negate();s.element(o).assign(l)})})()}}Cn.ALPHA_TO_COVERAGE="alphaToCoverage";Cn.DEFAULT="default";Cn.HARDWARE="hardware";const rU=()=>ee(new Cn),oU=()=>ee(new Cn(Cn.ALPHA_TO_COVERAGE)),aU=()=>ee(new Cn(Cn.HARDWARE)),lU=["alphaMap","alphaTest","anisotropy","anisotropyMap","anisotropyRotation","aoMap","aoMapIntensity","attenuationColor","attenuationDistance","bumpMap","clearcoat","clearcoatMap","clearcoatNormalMap","clearcoatNormalScale","clearcoatRoughness","color","dispersion","displacementMap","emissive","emissiveIntensity","emissiveMap","envMap","envMapIntensity","gradientMap","ior","iridescence","iridescenceIOR","iridescenceMap","iridescenceThicknessMap","lightMap","lightMapIntensity","map","matcap","metalness","metalnessMap","normalMap","normalScale","opacity","roughness","roughnessMap","sheen","sheenColor","sheenColorMap","sheenRoughnessMap","shininess","specular","specularColor","specularColorMap","specularIntensity","specularIntensityMap","specularMap","thickness","transmission","transmissionMap"],Gf=new WeakMap;class cU{constructor(e){this.renderObjects=new WeakMap,this.hasNode=this.containsNode(e),this.hasAnimation=e.object.isSkinnedMesh===!0,this.refreshUniforms=lU,this.renderId=0}firstInitialization(e){return this.renderObjects.has(e)===!1?(this.getRenderObjectData(e),!0):!1}needsVelocity(e){const t=e.getMRT();return t!==null&&t.has("velocity")}getRenderObjectData(e){let t=this.renderObjects.get(e);if(t===void 0){const{geometry:i,material:n,object:s}=e;if(t={material:this.getMaterialData(n),geometry:{id:i.id,attributes:this.getAttributesData(i.attributes),indexVersion:i.index?i.index.version:null,drawRange:{start:i.drawRange.start,count:i.drawRange.count}},worldMatrix:s.matrixWorld.clone()},s.center&&(t.center=s.center.clone()),s.morphTargetInfluences&&(t.morphTargetInfluences=s.morphTargetInfluences.slice()),e.bundle!==null&&(t.version=e.bundle.version),t.material.transmission>0){const{width:o,height:a}=e.context;t.bufferWidth=o,t.bufferHeight=a}t.lights=this.getLightsData(e.lightsNode.getLights()),this.renderObjects.set(e,t)}return t}getAttributesData(e){const t={};for(const i in e){const n=e[i];t[i]={version:n.version}}return t}containsNode(e){const t=e.material;for(const i in t)if(t[i]&&t[i].isNode)return!0;return e.renderer.overrideNodes.modelViewMatrix!==null||e.renderer.overrideNodes.modelNormalViewMatrix!==null}getMaterialData(e){const t={};for(const i of this.refreshUniforms){const n=e[i];n!=null&&(typeof n=="object"&&n.clone!==void 0?n.isTexture===!0?t[i]={id:n.id,version:n.version}:t[i]=n.clone():t[i]=n)}return t}equals(e,t){const{object:i,material:n,geometry:s}=e,o=this.getRenderObjectData(e);if(o.worldMatrix.equals(i.matrixWorld)!==!0)return o.worldMatrix.copy(i.matrixWorld),!1;const a=o.material;for(const g in a){const m=a[g],b=n[g];if(m.equals!==void 0){if(m.equals(b)===!1)return m.copy(b),!1}else if(b.isTexture===!0){if(m.id!==b.id||m.version!==b.version)return m.id=b.id,m.version=b.version,!1}else if(m!==b)return a[g]=b,!1}if(a.transmission>0){const{width:g,height:m}=e.context;if(o.bufferWidth!==g||o.bufferHeight!==m)return o.bufferWidth=g,o.bufferHeight=m,!1}const l=o.geometry,c=s.attributes,u=l.attributes,h=Object.keys(u),d=Object.keys(c);if(l.id!==s.id)return l.id=s.id,!1;if(h.length!==d.length)return o.geometry.attributes=this.getAttributesData(c),!1;for(const g of h){const m=u[g],b=c[g];if(b===void 0)return delete u[g],!1;if(m.version!==b.version)return m.version=b.version,!1}const f=s.index,p=l.indexVersion,_=f?f.version:null;if(p!==_)return l.indexVersion=_,!1;if(l.drawRange.start!==s.drawRange.start||l.drawRange.count!==s.drawRange.count)return l.drawRange.start=s.drawRange.start,l.drawRange.count=s.drawRange.count,!1;if(o.morphTargetInfluences){let g=!1;for(let m=0;m<o.morphTargetInfluences.length;m++)o.morphTargetInfluences[m]!==i.morphTargetInfluences[m]&&(g=!0);if(g)return!0}if(o.lights){for(let g=0;g<t.length;g++)if(o.lights[g].map!==t[g].map)return!1}return o.center&&o.center.equals(i.center)===!1?(o.center.copy(i.center),!0):(e.bundle!==null&&(o.version=e.bundle.version),!0)}getLightsData(e){const t=[];for(const i of e)i.isSpotLight===!0&&i.map!==null&&t.push({map:i.map.version});return t}getLights(e,t){if(Gf.has(e)){const n=Gf.get(e);if(n.renderId===t)return n.lightsData}const i=this.getLightsData(e.getLights());return Gf.set(e,{renderId:t,lightsData:i}),i}needsRefresh(e,t){if(this.hasNode||this.hasAnimation||this.firstInitialization(e)||this.needsVelocity(t.renderer))return!0;const{renderId:i}=t;if(this.renderId!==i)return this.renderId=i,!0;const n=e.object.static===!0,s=e.bundle!==null&&e.bundle.static===!0&&this.getRenderObjectData(e).version===e.bundle.version;if(n||s)return!1;const o=this.getLights(e.lightsNode,i);return this.equals(e,o)!==!0}}const uU=.05,Hx=Re(([r])=>Kc(gi(1e4,Dc(gi(17,r.x).add(gi(.1,r.y)))).mul(Nc(.1,Gn(Dc(gi(13,r.y).add(r.x))))))),Wx=Re(([r])=>Hx(ti(Hx(r.xy),r.z))),hU=Re(([r])=>{const e=Vh(Op(PT(r.xyz)),Op(DT(r.xyz))),t=Ue(1).div(Ue(uU).mul(e)).toVar("pixScale"),i=ti(Pc(ic(ao(t))),Pc(wT(ao(t)))),n=ti(Wx(ic(i.x.mul(r.xyz))),Wx(ic(i.y.mul(r.xyz)))),s=Kc(ao(t)),o=Nc(gi(s.oneMinus(),n.x),gi(s,n.y)),a=LT(s,s.oneMinus()),l=Ee(o.mul(o).div(gi(2,a).mul(Is(1,a))),o.sub(gi(.5,a)).div(Is(1,a)),Is(1,Is(1,o).mul(Is(1,o)).div(gi(2,a).mul(Is(1,a))))),c=o.lessThan(a.oneMinus()).select(o.lessThan(a).select(l.x,l.y),l.z);return cd(c,1e-6,1)}).setLayout({name:"getAlphaHashThreshold",type:"float",inputs:[{name:"position",type:"vec3"}]});class dU extends HT{static get type(){return"VertexColorNode"}constructor(e){super(null,"vec4"),this.isVertexColorNode=!0,this.index=e}getAttributeName(){const e=this.index;return"color"+(e>0?e:"")}generate(e){const t=this.getAttributeName(e),i=e.hasGeometryAttribute(t);let n;return i===!0?n=super.generate(e):n=e.generateConst(this.nodeType,new je(1,1,1,1)),n}serialize(e){super.serialize(e),e.index=this.index}deserialize(e){super.deserialize(e),this.index=e.index}}const fU=(r=0)=>ee(new dU(r)),pU=Re(([r])=>_i(r.rgb.mul(r.a),r.a),{color:"vec4",return:"vec4"});class pl extends Xa{static get type(){return"NodeMaterial"}get type(){return this.constructor.type}set type(e){}constructor(){super(),this.isNodeMaterial=!0,this.fog=!0,this.lights=!1,this.hardwareClipping=!1,this.lightsNode=null,this.envNode=null,this.aoNode=null,this.colorNode=null,this.normalNode=null,this.opacityNode=null,this.backdropNode=null,this.backdropAlphaNode=null,this.alphaTestNode=null,this.maskNode=null,this.positionNode=null,this.geometryNode=null,this.depthNode=null,this.receivedShadowPositionNode=null,this.castShadowPositionNode=null,this.receivedShadowNode=null,this.castShadowNode=null,this.outputNode=null,this.mrtNode=null,this.fragmentNode=null,this.vertexNode=null,Object.defineProperty(this,"shadowPositionNode",{get:()=>this.receivedShadowPositionNode,set:e=>{console.warn('THREE.NodeMaterial: ".shadowPositionNode" was renamed to ".receivedShadowPositionNode".'),this.receivedShadowPositionNode=e}})}customProgramCacheKey(){return this.type+hT(this)}build(e){this.setup(e)}setupObserver(e){return new cU(e)}setup(e){e.context.setupNormal=()=>vh(this.setupNormal(e),"NORMAL","vec3"),e.context.setupPositionView=()=>this.setupPositionView(e),e.context.setupModelViewProjection=()=>this.setupModelViewProjection(e);const t=e.renderer,i=t.getRenderTarget();e.addStack();const n=vh(this.setupVertex(e),"VERTEX"),s=this.vertexNode||n;e.stack.outputNode=s,this.setupHardwareClipping(e),this.geometryNode!==null&&(e.stack.outputNode=e.stack.outputNode.bypass(this.geometryNode)),e.addFlow("vertex",e.removeStack()),e.addStack();let o;const a=this.setupClipping(e);if((this.depthWrite===!0||this.depthTest===!0)&&(i!==null?i.depthBuffer===!0&&this.setupDepth(e):t.depth===!0&&this.setupDepth(e)),this.fragmentNode===null){this.setupDiffuseColor(e),this.setupVariants(e);const l=this.setupLighting(e);a!==null&&e.stack.add(a);const c=_i(l,kn.a).max(0);o=this.setupOutput(e,c),tc.assign(o);const u=this.outputNode!==null;if(u&&(o=this.outputNode),i!==null){const h=t.getMRT(),d=this.mrtNode;h!==null?(u&&tc.assign(o),o=h,d!==null&&(o=h.merge(d))):d!==null&&(o=d)}}else{let l=this.fragmentNode;l.isOutputStructNode!==!0&&(l=_i(l)),o=this.setupOutput(e,l)}e.stack.outputNode=o,e.addFlow("fragment",e.removeStack()),e.observer=this.setupObserver(e)}setupClipping(e){if(e.clippingContext===null)return null;const{unionPlanes:t,intersectionPlanes:i}=e.clippingContext;let n=null;if(t.length>0||i.length>0){const s=e.renderer.samples;this.alphaToCoverage&&s>1?n=oU():e.stack.add(rU())}return n}setupHardwareClipping(e){if(this.hardwareClipping=!1,e.clippingContext===null)return;const t=e.clippingContext.unionPlanes.length;t>0&&t<=8&&e.isAvailable("clipDistance")&&(e.stack.add(aU()),this.hardwareClipping=!0)}setupDepth(e){const{renderer:t,camera:i}=e;let n=this.depthNode;if(n===null){const s=t.getMRT();s&&s.has("depth")?n=s.get("depth"):t.logarithmicDepthBuffer===!0&&(i.isPerspectiveCamera?n=fF(di.z,Kr,Zr):n=nc(di.z,Kr,Zr))}n!==null&&oS.assign(n).toStack()}setupPositionView(){return qT.mul($i).xyz}setupModelViewProjection(){return YI.mul(di)}setupVertex(e){return e.addStack(),this.setupPosition(e),e.context.vertex=e.removeStack(),_S}setupPosition(e){const{object:t,geometry:i}=e;if((i.morphAttributes.position||i.morphAttributes.normal||i.morphAttributes.color)&&eU(t).toStack(),t.isSkinnedMesh===!0&&ZF(t).toStack(),this.displacementMap){const n=ia("displacementMap","texture"),s=ia("displacementScale","float"),o=ia("displacementBias","float");$i.addAssign(ds.normalize().mul(n.x.mul(s).add(o)))}return t.isBatchedMesh&&jF(t).toStack(),t.isInstancedMesh&&t.instanceMatrix&&t.instanceMatrix.isInstancedBufferAttribute===!0&&qF(t).toStack(),this.positionNode!==null&&$i.assign(vh(this.positionNode,"POSITION","vec3")),$i}setupDiffuseColor({object:e,geometry:t}){this.maskNode!==null&&ng(this.maskNode).not().discard();let i=this.colorNode?_i(this.colorNode):kF;this.vertexColors===!0&&t.hasAttribute("color")&&(i=i.mul(fU())),e.instanceColor&&(i=Gh("vec3","vInstanceColor").mul(i)),e.isBatchedMesh&&e._colorsTexture&&(i=Gh("vec3","vBatchColor").mul(i)),kn.assign(i);const n=this.opacityNode?Ue(this.opacityNode):GF;kn.a.assign(kn.a.mul(n));let s=null;(this.alphaTestNode!==null||this.alphaTest>0)&&(s=this.alphaTestNode!==null?Ue(this.alphaTestNode):OF,kn.a.lessThanEqual(s).discard()),this.alphaHash===!0&&kn.a.lessThan(hU($i)).discard(),this.transparent===!1&&this.blending===fn&&this.alphaToCoverage===!1?kn.a.assign(1):s===null&&kn.a.lessThanEqual(0).discard()}setupVariants(){}setupOutgoingLight(){return this.lights===!0?Ee(0):kn.rgb}setupNormal(){return this.normalNode?Ee(this.normalNode):VF}setupEnvironment(){let e=null;return this.envNode?e=this.envNode:this.envMap&&(e=this.envMap.isCubeTexture?ia("envMap","cubeTexture"):ia("envMap","texture")),e}setupLightMap(e){let t=null;return e.material.lightMap&&(t=new sU(HF)),t}setupLights(e){const t=[],i=this.setupEnvironment(e);i&&i.isLightingNode&&t.push(i);const n=this.setupLightMap(e);if(n&&n.isLightingNode&&t.push(n),this.aoNode!==null||e.material.aoMap){const o=this.aoNode!==null?this.aoNode:WF;t.push(new tU(o))}let s=this.lightsNode||e.lightsNode;return t.length>0&&(s=e.renderer.lighting.createNode([...s.getLights(),...t])),s}setupLightingModel(){}setupLighting(e){const{material:t}=e,{backdropNode:i,backdropAlphaNode:n,emissiveNode:s}=this,a=this.lights===!0||this.lightsNode!==null?this.setupLights(e):null;let l=this.setupOutgoingLight(e);if(a&&a.getScope().hasLights){const c=this.setupLightingModel(e)||null;l=nU(a,c,i,n)}else i!==null&&(l=Ee(n!==null?Zc(l,i,n):i));return(s&&s.isNode===!0||t.emissive&&t.emissive.isColor===!0)&&(wx.assign(Ee(s||zF)),l=l.add(wx)),l}setupFog(e,t){const i=e.fogNode;return i&&(tc.assign(t),t=_i(i.toVar())),t}setupPremultipliedAlpha(e,t){return pU(t)}setupOutput(e,t){return this.fog===!0&&(t=this.setupFog(e,t)),this.premultipliedAlpha===!0&&(t=this.setupPremultipliedAlpha(e,t)),t}setDefaultValues(e){for(const i in e){const n=e[i];this[i]===void 0&&(this[i]=n,n&&n.clone&&(this[i]=n.clone()))}const t=Object.getOwnPropertyDescriptors(e.constructor.prototype);for(const i in t)Object.getOwnPropertyDescriptor(this.constructor.prototype,i)===void 0&&t[i].get!==void 0&&Object.defineProperty(this.constructor.prototype,i,t[i])}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{},nodes:{}});const i=Xa.prototype.toJSON.call(this,e),n=Oh(this);i.inputNodes={};for(const{property:o,childNode:a}of n)i.inputNodes[o]=a.toJSON(e).uuid;function s(o){const a=[];for(const l in o){const c=o[l];delete c.metadata,a.push(c)}return a}if(t){const o=s(e.textures),a=s(e.images),l=s(e.nodes);o.length>0&&(i.textures=o),a.length>0&&(i.images=a),l.length>0&&(i.nodes=l)}return i}copy(e){return this.lightsNode=e.lightsNode,this.envNode=e.envNode,this.colorNode=e.colorNode,this.normalNode=e.normalNode,this.opacityNode=e.opacityNode,this.backdropNode=e.backdropNode,this.backdropAlphaNode=e.backdropAlphaNode,this.alphaTestNode=e.alphaTestNode,this.maskNode=e.maskNode,this.positionNode=e.positionNode,this.geometryNode=e.geometryNode,this.depthNode=e.depthNode,this.receivedShadowPositionNode=e.receivedShadowPositionNode,this.castShadowPositionNode=e.castShadowPositionNode,this.receivedShadowNode=e.receivedShadowNode,this.castShadowNode=e.castShadowNode,this.outputNode=e.outputNode,this.mrtNode=e.mrtNode,this.fragmentNode=e.fragmentNode,this.vertexNode=e.vertexNode,super.copy(e)}}const Vf=new Im(-1,1,1,-1,0,1);class mU extends $s{constructor(e=!1){super();const t=e===!1?[0,-1,0,1,2,1]:[0,2,0,0,2,0];this.setAttribute("position",new Oi([-1,3,0,-1,-1,0,3,-1,0],3)),this.setAttribute("uv",new Oi(t,2))}}const gU=new mU;class yS extends fi{constructor(e=null){super(gU,e),this.camera=Vf,this.isQuadMesh=!0}async renderAsync(e){return e.renderAsync(this,Vf)}render(e){e.render(this,Vf)}}class Fc extends He{static get type(){return"EventNode"}constructor(e,t){super("void"),this.eventType=e,this.callback=t,e===Fc.OBJECT?this.updateType=it.OBJECT:e===Fc.MATERIAL&&(this.updateType=it.RENDER)}update(e){this.callback(e)}}Fc.OBJECT="object";Fc.MATERIAL="material";const Fl=new Hs,Hf=new It;class Yi extends He{static get type(){return"SceneNode"}constructor(e=Yi.BACKGROUND_BLURRINESS,t=null){super(),this.scope=e,this.scene=t}setup(e){const t=this.scope,i=this.scene!==null?this.scene:e.scene;let n;return t===Yi.BACKGROUND_BLURRINESS?n=An("backgroundBlurriness","float",i):t===Yi.BACKGROUND_INTENSITY?n=An("backgroundIntensity","float",i):t===Yi.BACKGROUND_ROTATION?n=St("mat4").setName("backgroundRotation").setGroup(Hi).onRenderUpdate(()=>{const s=i.background;return s!==null&&s.isTexture&&s.mapping!==fm?(Fl.copy(i.backgroundRotation),Fl.x*=-1,Fl.y*=-1,Fl.z*=-1,Hf.makeRotationFromEuler(Fl)):Hf.identity(),Hf}):console.error("THREE.SceneNode: Unknown scope:",t),n}}Yi.BACKGROUND_BLURRINESS="backgroundBlurriness";Yi.BACKGROUND_INTENSITY="backgroundIntensity";Yi.BACKGROUND_ROTATION="backgroundRotation";const _U=Ot(Yi,Yi.BACKGROUND_BLURRINESS),$x=Ot(Yi,Yi.BACKGROUND_INTENSITY),xU=Ot(Yi,Yi.BACKGROUND_ROTATION),yU=Re(({texture:r,uv:e})=>{const i=Ee().toVar();return Rn(e.x.lessThan(1e-4),()=>{i.assign(Ee(1,0,0))}).ElseIf(e.y.lessThan(1e-4),()=>{i.assign(Ee(0,1,0))}).ElseIf(e.z.lessThan(1e-4),()=>{i.assign(Ee(0,0,1))}).ElseIf(e.x.greaterThan(1-1e-4),()=>{i.assign(Ee(-1,0,0))}).ElseIf(e.y.greaterThan(1-1e-4),()=>{i.assign(Ee(0,-1,0))}).ElseIf(e.z.greaterThan(1-1e-4),()=>{i.assign(Ee(0,0,-1))}).Else(()=>{const s=r.sample(e.add(Ee(-.01,0,0))).r.sub(r.sample(e.add(Ee(.01,0,0))).r),o=r.sample(e.add(Ee(0,-.01,0))).r.sub(r.sample(e.add(Ee(0,.01,0))).r),a=r.sample(e.add(Ee(0,0,-.01))).r.sub(r.sample(e.add(Ee(0,0,.01))).r);i.assign(Ee(s,o,a))}),i.normalize()});class bU extends fl{static get type(){return"Texture3DNode"}constructor(e,t=null,i=null){super(e,t,i),this.isTexture3DNode=!0}getInputType(){return"texture3D"}getDefaultUV(){return Ee(.5,.5,.5)}setUpdateMatrix(){}setupUV(e,t){const i=this.value;return e.isFlipY()&&(i.isRenderTargetTexture===!0||i.isFramebufferTexture===!0)&&(this.sampler?t=t.flipY():t=t.setY(Zt(xa(this,this.levelNode).y).sub(t.y).sub(1))),t}generateUV(e,t){return t.build(e,"vec3")}normal(e){return yU({texture:this,uv:e})}}const TU=mt(bU).setParameterLength(1,3),sh=new Je;class SU extends fl{static get type(){return"PassTextureNode"}constructor(e,t){super(t),this.passNode=e,this.setUpdateMatrix(!1)}setup(e){return this.passNode.build(e),super.setup(e)}clone(){return new this.constructor(this.passNode,this.value)}}class Xx extends SU{static get type(){return"PassMultipleTextureNode"}constructor(e,t,i=!1){super(e,null),this.textureName=t,this.previousTexture=i}updateTexture(){this.value=this.previousTexture?this.passNode.getPreviousTexture(this.textureName):this.passNode.getTexture(this.textureName)}setup(e){return this.updateTexture(),super.setup(e)}clone(){const e=new this.constructor(this.passNode,this.textureName,this.previousTexture);return e.uvNode=this.uvNode,e.levelNode=this.levelNode,e.biasNode=this.biasNode,e.sampler=this.sampler,e.depthNode=this.depthNode,e.compareNode=this.compareNode,e.gradNode=this.gradNode,e}}class fd extends yi{static get type(){return"PassNode"}constructor(e,t,i,n={}){super("vec4"),this.scope=e,this.scene=t,this.camera=i,this.options=n,this._pixelRatio=1,this._width=1,this._height=1;const s=new Xn;s.isRenderTargetTexture=!0,s.name="depth";const o=new go(this._width*this._pixelRatio,this._height*this._pixelRatio,{type:pn,...n});o.texture.name="output",o.depthTexture=s,this.renderTarget=o,this._textures={output:o.texture,depth:s},this._textureNodes={},this._linearDepthNodes={},this._viewZNodes={},this._previousTextures={},this._previousTextureNodes={},this._cameraNear=St(0),this._cameraFar=St(0),this._mrt=null,this._layers=null,this._resolution=1,this._viewport=null,this._scissor=null,this.isPassNode=!0,this.updateBeforeType=it.FRAME,this.global=!0}setResolution(e){return this._resolution=e,this}getResolution(){return this._resolution}setLayers(e){return this._layers=e,this}getLayers(){return this._layers}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getTexture(e){let t=this._textures[e];return t===void 0&&(t=this.renderTarget.texture.clone(),t.name=e,this._textures[e]=t,this.renderTarget.textures.push(t)),t}getPreviousTexture(e){let t=this._previousTextures[e];return t===void 0&&(t=this.getTexture(e).clone(),this._previousTextures[e]=t),t}toggleTexture(e){const t=this._previousTextures[e];if(t!==void 0){const i=this._textures[e],n=this.renderTarget.textures.indexOf(i);this.renderTarget.textures[n]=t,this._textures[e]=t,this._previousTextures[e]=i,this._textureNodes[e].updateTexture(),this._previousTextureNodes[e].updateTexture()}}getTextureNode(e="output"){let t=this._textureNodes[e];return t===void 0&&(t=ee(new Xx(this,e)),t.updateTexture(),this._textureNodes[e]=t),t}getPreviousTextureNode(e="output"){let t=this._previousTextureNodes[e];return t===void 0&&(this._textureNodes[e]===void 0&&this.getTextureNode(e),t=ee(new Xx(this,e,!0)),t.updateTexture(),this._previousTextureNodes[e]=t),t}getViewZNode(e="depth"){let t=this._viewZNodes[e];if(t===void 0){const i=this._cameraNear,n=this._cameraFar;this._viewZNodes[e]=t=sS(this.getTextureNode(e),i,n)}return t}getLinearDepthNode(e="depth"){let t=this._linearDepthNodes[e];if(t===void 0){const i=this._cameraNear,n=this._cameraFar,s=this.getViewZNode(e);this._linearDepthNodes[e]=t=nc(s,i,n)}return t}async compileAsync(e){const t=e.getRenderTarget(),i=e.getMRT();e.setRenderTarget(this.renderTarget),e.setMRT(this._mrt),await e.compileAsync(this.scene,this.camera),e.setRenderTarget(t),e.setMRT(i)}setup({renderer:e}){return this.renderTarget.samples=this.options.samples===void 0?e.samples:this.options.samples,this.renderTarget.texture.type=e.getColorBufferType(),this.scope===fd.COLOR?this.getTextureNode():this.getLinearDepthNode()}updateBefore(e){const{renderer:t}=e,{scene:i}=this;let n,s;const o=t.getOutputRenderTarget();o&&o.isXRRenderTarget===!0?(s=1,n=t.xr.getCamera(),t.xr.updateCamera(n),sh.set(o.width,o.height)):(n=this.camera,s=t.getPixelRatio(),t.getSize(sh)),this._pixelRatio=s,this.setSize(sh.width,sh.height);const a=t.getRenderTarget(),l=t.getMRT(),c=n.layers.mask;this._cameraNear.value=n.near,this._cameraFar.value=n.far,this._layers!==null&&(n.layers.mask=this._layers.mask);for(const u in this._previousTextures)this.toggleTexture(u);t.setRenderTarget(this.renderTarget),t.setMRT(this._mrt),t.render(i,n),t.setRenderTarget(a),t.setMRT(l),n.layers.mask=c}setSize(e,t){this._width=e,this._height=t;const i=this._width*this._pixelRatio*this._resolution,n=this._height*this._pixelRatio*this._resolution;this.renderTarget.setSize(i,n),this._scissor!==null&&this.renderTarget.scissor.copy(this._scissor),this._viewport!==null&&this.renderTarget.viewport.copy(this._viewport)}setScissor(e,t,i,n){e===null?this._scissor=null:(this._scissor===null&&(this._scissor=new je),e.isVector4?this._scissor.copy(e):this._scissor.set(e,t,i,n),this._scissor.multiplyScalar(this._pixelRatio*this._resolution).floor())}setViewport(e,t,i,n){e===null?this._viewport=null:(this._viewport===null&&(this._viewport=new je),e.isVector4?this._viewport.copy(e):this._viewport.set(e,t,i,n),this._viewport.multiplyScalar(this._pixelRatio*this._resolution).floor())}setPixelRatio(e){this._pixelRatio=e,this.setSize(this._width,this._height)}dispose(){this.renderTarget.dispose()}}fd.COLOR="color";fd.DEPTH="depth";Ee(1.6605,-.1246,-.0182),Ee(-.5876,1.1329,-.1006),Ee(-.0728,-.0083,1.1187);Ee(.6274,.0691,.0164),Ee(.3293,.9195,.088),Ee(.0433,.0113,.8956);class ei extends He{static get type(){return"CodeNode"}constructor(e="",t=[],i=""){super("code"),this.isCodeNode=!0,this.global=!0,this.code=e,this.includes=t,this.language=i}setIncludes(e){return this.includes=e,this}getIncludes(){return this.includes}generate(e){const t=this.getIncludes(e);for(const n of t)n.build(e);const i=e.getCodeFromNode(this,this.getNodeType(e));return i.code=this.code,i.code}serialize(e){super.serialize(e),e.code=this.code,e.language=this.language}deserialize(e){super.deserialize(e),this.code=e.code,this.language=e.language}}class vU extends ei{static get type(){return"FunctionNode"}constructor(e="",t=[],i=""){super(e,t,i)}getNodeType(e){return this.getNodeFunction(e).type}getInputs(e){return this.getNodeFunction(e).inputs}getNodeFunction(e){const t=e.getDataFromNode(this);let i=t.nodeFunction;return i===void 0&&(i=e.parser.parseFunction(this.code),t.nodeFunction=i),i}generate(e,t){super.generate(e);const i=this.getNodeFunction(e),n=i.name,s=i.type,o=e.getCodeFromNode(this,s);n!==""&&(o.name=n);const a=e.getPropertyName(o),l=this.getNodeFunction(e).getCode(a);return o.code=l+`
`,t==="property"?a:e.format(`${a}()`,s,t)}}function bS(r){let e;const t=r.context.getViewZ;return t!==void 0&&(e=t(this)),(e||di.z).negate()}const MU=Re(([r,e],t)=>{const i=bS(t);return Lc(r,e,i)}),EU=Re(([r],e)=>{const t=bS(e);return r.mul(r,t,t).negate().exp().oneMinus()}),qx=Re(([r,e])=>_i(e.toFloat().mix(tc.rgb,r.toVec3()),tc.a));class AU extends He{constructor(e){super(),this.scope=e}generate(e){const{scope:t}=this,{renderer:i}=e;i.backend.isWebGLBackend===!0?e.addFlowCode(`	// ${t}Barrier 
`):e.addLineFlowCode(`${t}Barrier()`,this)}}mt(AU);class gs extends He{static get type(){return"AtomicFunctionNode"}constructor(e,t,i){super("uint"),this.method=e,this.pointerNode=t,this.valueNode=i,this.parents=!0}getInputType(e){return this.pointerNode.getNodeType(e)}getNodeType(e){return this.getInputType(e)}generate(e){const t=e.getNodeProperties(this),i=t.parents,n=this.method,s=this.getNodeType(e),o=this.getInputType(e),a=this.pointerNode,l=this.valueNode,c=[];c.push(`&${a.build(e,o)}`),l!==null&&c.push(l.build(e,o));const u=`${e.getMethod(n,s)}( ${c.join(", ")} )`;if(i?i.length===1&&i[0].isStackNode===!0:!1)e.addLineFlowCode(u,this);else return t.constNode===void 0&&(t.constNode=Qa(u,s).toConst()),t.constNode.build(e)}}gs.ATOMIC_LOAD="atomicLoad";gs.ATOMIC_STORE="atomicStore";gs.ATOMIC_ADD="atomicAdd";gs.ATOMIC_SUB="atomicSub";gs.ATOMIC_MAX="atomicMax";gs.ATOMIC_MIN="atomicMin";gs.ATOMIC_AND="atomicAnd";gs.ATOMIC_OR="atomicOr";gs.ATOMIC_XOR="atomicXor";mt(gs);const wU=r=>r.sort((e,t)=>e.id-t.id),RU=(r,e)=>{for(const t of e)if(t.isAnalyticLightNode&&t.light.id===r)return t;return null},Wf=new WeakMap,Ul=[];class TS extends He{static get type(){return"LightsNode"}constructor(){super("vec3"),this.totalDiffuseNode=Th("vec3","totalDiffuse"),this.totalSpecularNode=Th("vec3","totalSpecular"),this.outgoingLightNode=Th("vec3","outgoingLight"),this._lights=[],this._lightNodes=null,this._lightNodesHash=null,this.global=!0}customCacheKey(){const e=this._lights;for(let i=0;i<e.length;i++){const n=e[i];if(Ul.push(n.id),Ul.push(n.castShadow?1:0),n.isSpotLight===!0){const s=n.map!==null?n.map.id:-1,o=n.colorNode?n.colorNode.getCacheKey():-1;Ul.push(s,o)}}const t=Km(Ul);return Ul.length=0,t}getHash(e){if(this._lightNodesHash===null){this._lightNodes===null&&this.setupLightsNode(e);const t=[];for(const i of this._lightNodes)t.push(i.getSelf().getHash());this._lightNodesHash="lights-"+t.join(",")}return this._lightNodesHash}analyze(e){const t=e.getNodeProperties(this);for(const i of t.nodes)i.build(e);t.outputNode.build(e)}setupLightsNode(e){const t=[],i=this._lightNodes,n=wU(this._lights),s=e.renderer.library;for(const o of n)if(o.isNode)t.push(ee(o));else{let a=null;if(i!==null&&(a=RU(o.id,i)),a===null){const l=s.getLightNodeClass(o.constructor);if(l===null){console.warn(`LightsNode.setupNodeLights: Light node not found for ${o.constructor.name}`);continue}let c=null;Wf.has(o)?c=Wf.get(o):(c=ee(new l(o)),Wf.set(o,c)),t.push(c)}}this._lightNodes=t}setupDirectLight(e,t,i){const{lightingModel:n,reflectedLight:s}=e.context;n.direct({...i,lightNode:t,reflectedLight:s},e)}setupDirectRectAreaLight(e,t,i){const{lightingModel:n,reflectedLight:s}=e.context;n.directRectArea({...i,lightNode:t,reflectedLight:s},e)}setupLights(e,t){for(const i of t)i.build(e)}getLightNodes(e){return this._lightNodes===null&&this.setupLightsNode(e),this._lightNodes}setup(e){const t=e.lightsNode;e.lightsNode=this;let i=this.outgoingLightNode;const n=e.context,s=n.lightingModel,o=e.getNodeProperties(this);if(s){const{totalDiffuseNode:a,totalSpecularNode:l}=this;n.outgoingLight=i;const c=e.addStack();o.nodes=c.nodes,s.start(e);const{backdrop:u,backdropAlpha:h}=n,{directDiffuse:d,directSpecular:f,indirectDiffuse:p,indirectSpecular:_}=n.reflectedLight;let g=d.add(p);u!==null&&(h!==null?g=Ee(h.mix(g,u)):g=Ee(u),n.material.transparent=!0),a.assign(g),l.assign(f.add(_)),i.assign(a.add(l)),s.finish(e),i=i.bypass(e.removeStack())}else o.nodes=[];return e.lightsNode=t,i}setLights(e){return this._lights=e,this._lightNodes=null,this._lightNodesHash=null,this}getLights(){return this._lights}get hasLights(){return this._lights.length>0}}const Yx=Ue(1),Gp=Ue(-2),rh=Ue(.8),$f=Ue(-1),oh=Ue(.4),Xf=Ue(2),ah=Ue(.305),qf=Ue(3),jx=Ue(.21),CU=Ue(4),Kx=Ue(4),NU=Ue(16),PU=Re(([r])=>{const e=Ee(Gn(r)).toVar(),t=Ue(-1).toVar();return Rn(e.x.greaterThan(e.z),()=>{Rn(e.x.greaterThan(e.y),()=>{t.assign($n(r.x.greaterThan(0),0,3))}).Else(()=>{t.assign($n(r.y.greaterThan(0),1,4))})}).Else(()=>{Rn(e.z.greaterThan(e.y),()=>{t.assign($n(r.z.greaterThan(0),2,5))}).Else(()=>{t.assign($n(r.y.greaterThan(0),1,4))})}),t}).setLayout({name:"getFace",type:"float",inputs:[{name:"direction",type:"vec3"}]}),DU=Re(([r,e])=>{const t=ti().toVar();return Rn(e.equal(0),()=>{t.assign(ti(r.z,r.y).div(Gn(r.x)))}).ElseIf(e.equal(1),()=>{t.assign(ti(r.x.negate(),r.z.negate()).div(Gn(r.y)))}).ElseIf(e.equal(2),()=>{t.assign(ti(r.x.negate(),r.y).div(Gn(r.z)))}).ElseIf(e.equal(3),()=>{t.assign(ti(r.z.negate(),r.y).div(Gn(r.x)))}).ElseIf(e.equal(4),()=>{t.assign(ti(r.x.negate(),r.z).div(Gn(r.y)))}).Else(()=>{t.assign(ti(r.x,r.y).div(Gn(r.z)))}),gi(.5,t.add(1))}).setLayout({name:"getUV",type:"vec2",inputs:[{name:"direction",type:"vec3"},{name:"face",type:"float"}]}),LU=Re(([r])=>{const e=Ue(0).toVar();return Rn(r.greaterThanEqual(rh),()=>{e.assign(Yx.sub(r).mul($f.sub(Gp)).div(Yx.sub(rh)).add(Gp))}).ElseIf(r.greaterThanEqual(oh),()=>{e.assign(rh.sub(r).mul(Xf.sub($f)).div(rh.sub(oh)).add($f))}).ElseIf(r.greaterThanEqual(ah),()=>{e.assign(oh.sub(r).mul(qf.sub(Xf)).div(oh.sub(ah)).add(Xf))}).ElseIf(r.greaterThanEqual(jx),()=>{e.assign(ah.sub(r).mul(CU.sub(qf)).div(ah.sub(jx)).add(qf))}).Else(()=>{e.assign(Ue(-2).mul(ao(gi(1.16,r))))}),e}).setLayout({name:"roughnessToMip",type:"float",inputs:[{name:"roughness",type:"float"}]}),IU=Re(([r,e])=>{const t=r.toVar();t.assign(gi(2,t).sub(1));const i=Ee(t,1).toVar();return Rn(e.equal(0),()=>{i.assign(i.zyx)}).ElseIf(e.equal(1),()=>{i.assign(i.xzy),i.xz.mulAssign(-1)}).ElseIf(e.equal(2),()=>{i.x.mulAssign(-1)}).ElseIf(e.equal(3),()=>{i.assign(i.zyx),i.xz.mulAssign(-1)}).ElseIf(e.equal(4),()=>{i.assign(i.xzy),i.xy.mulAssign(-1)}).ElseIf(e.equal(5),()=>{i.z.mulAssign(-1)}),i}).setLayout({name:"getDirection",type:"vec3",inputs:[{name:"uv",type:"vec2"},{name:"face",type:"float"}]}),FU=Re(([r,e,t,i,n,s])=>{const o=Ue(t),a=Ee(e),l=cd(LU(o),Gp,s),c=Kc(l),u=ic(l),h=Ee(Vp(r,a,u,i,n,s)).toVar();return Rn(c.notEqual(0),()=>{const d=Ee(Vp(r,a,u.add(1),i,n,s)).toVar();h.assign(Zc(h,d,c))}),h}),Vp=Re(([r,e,t,i,n,s])=>{const o=Ue(t).toVar(),a=Ee(e),l=Ue(PU(a)).toVar(),c=Ue(Vh(Kx.sub(o),0)).toVar();o.assign(Vh(o,Kx));const u=Ue(Pc(o)).toVar(),h=ti(DU(a,l).mul(u.sub(2)).add(1)).toVar();return Rn(l.greaterThan(2),()=>{h.y.addAssign(u),l.subAssign(3)}),h.x.addAssign(l.mul(u)),h.x.addAssign(c.mul(gi(3,NU))),h.y.addAssign(gi(4,Pc(s).sub(u))),h.x.mulAssign(i),h.y.mulAssign(n),r.sample(h).grad(ti(),ti())}),Yf=Re(({envMap:r,mipInt:e,outputDirection:t,theta:i,axis:n,CUBEUV_TEXEL_WIDTH:s,CUBEUV_TEXEL_HEIGHT:o,CUBEUV_MAX_MIP:a})=>{const l=RT(i),c=t.mul(l).add(n.cross(t).mul(Dc(i))).add(n.mul(n.dot(t).mul(l.oneMinus())));return Vp(r,c,e,s,o,a)}),UU=Re(({n:r,latitudinal:e,poleAxis:t,outputDirection:i,weights:n,samples:s,dTheta:o,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})=>{const d=Ee($n(e,t,IT(t,i))).toVar();Rn(d.equal(Ee(0)),()=>{d.assign(Ee(i.z,0,i.x.negate()))}),d.assign(ag(d));const f=Ee().toVar();return f.addAssign(n.element(0).mul(Yf({theta:0,axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),jr({start:Zt(1),end:r},({i:p})=>{Rn(p.greaterThanEqual(s),()=>{WI()});const _=Ue(o.mul(Ue(p))).toVar();f.addAssign(n.element(p).mul(Yf({theta:_.mul(-1),axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h}))),f.addAssign(n.element(p).mul(Yf({theta:_,axis:d,outputDirection:i,mipInt:a,envMap:l,CUBEUV_TEXEL_WIDTH:c,CUBEUV_TEXEL_HEIGHT:u,CUBEUV_MAX_MIP:h})))}),_i(f,1)}),la=4,Zx=[.125,.215,.35,.446,.526,.582],Qr=20,jf=new Im(-1,1,1,-1,0,1),BU=new Ei(90,1),Qx=new ct;let Kf=null,Zf=0,Qf=0;const $r=(1+Math.sqrt(5))/2,Qo=1/$r,Jx=[new B(-$r,Qo,0),new B($r,Qo,0),new B(-Qo,0,$r),new B(Qo,0,$r),new B(0,$r,-Qo),new B(0,$r,Qo),new B(-1,1,-1),new B(1,1,-1),new B(-1,1,1),new B(1,1,1)],OU=new B,SS=new WeakMap,kU=[3,1,5,0,4,2],Jf=IU(Qc(),mo("faceIndex")).normalize(),gg=Ee(Jf.x,Jf.y,Jf.z);class zU{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._lodMeshes=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._backgroundBox=null}get _hasInitialized(){return this._renderer.hasInitialized()}fromScene(e,t=0,i=.1,n=100,s={}){const{size:o=256,position:a=OU,renderTarget:l=null}=s;if(this._setSize(o),this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromScene() called before the backend is initialized. Try using .fromSceneAsync() instead.");const u=l||this._allocateTarget();return s.renderTarget=u,this.fromSceneAsync(e,t,i,n,s),u}Kf=this._renderer.getRenderTarget(),Zf=this._renderer.getActiveCubeFace(),Qf=this._renderer.getActiveMipmapLevel();const c=l||this._allocateTarget();return c.depthBuffer=!0,this._init(c),this._sceneToCubeUV(e,i,n,c,a),t>0&&this._blur(c,0,0,t),this._applyPMREM(c),this._cleanup(c),c}async fromSceneAsync(e,t=0,i=.1,n=100,s={}){return this._hasInitialized===!1&&await this._renderer.init(),this.fromScene(e,t,i,n,s)}fromEquirectangular(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromEquirectangular() called before the backend is initialized. Try using .fromEquirectangularAsync() instead."),this._setSizeFromTexture(e);const i=t||this._allocateTarget();return this.fromEquirectangularAsync(e,i),i}return this._fromTexture(e,t)}async fromEquirectangularAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}fromCubemap(e,t=null){if(this._hasInitialized===!1){console.warn("THREE.PMREMGenerator: .fromCubemap() called before the backend is initialized. Try using .fromCubemapAsync() instead."),this._setSizeFromTexture(e);const i=t||this._allocateTarget();return this.fromCubemapAsync(e,t),i}return this._fromTexture(e,t)}async fromCubemapAsync(e,t=null){return this._hasInitialized===!1&&await this._renderer.init(),this._fromTexture(e,t)}async compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=ty(),await this._compileMaterial(this._cubemapMaterial))}async compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=iy(),await this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose(),this._backgroundBox!==null&&(this._backgroundBox.geometry.dispose(),this._backgroundBox.material.dispose())}_setSizeFromTexture(e){e.mapping===ls||e.mapping===cs?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4)}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Kf,Zf,Qf),e.scissorTest=!1,lh(e,0,0,e.width,e.height)}_fromTexture(e,t){this._setSizeFromTexture(e),Kf=this._renderer.getRenderTarget(),Zf=this._renderer.getActiveCubeFace(),Qf=this._renderer.getActiveMipmapLevel();const i=t||this._allocateTarget();return this._init(i),this._textureToCubeUV(e,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTarget(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize;return ey(e,t)}_init(e){if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e.width||this._pingPongRenderTarget.height!==e.height){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ey(e.width,e.height);const{_lodMax:t}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas,lodMeshes:this._lodMeshes}=GU(t)),this._blurMaterial=VU(t,e.width,e.height)}}async _compileMaterial(e){const t=new fi(this._lodPlanes[0],e);await this._renderer.compile(t,jf)}_sceneToCubeUV(e,t,i,n,s){const o=BU;o.near=t,o.far=i;const a=[1,1,1,1,-1,1],l=[1,-1,1,-1,1,-1],c=this._renderer,u=c.autoClear;c.getClearColor(Qx),c.autoClear=!1;let h=this._backgroundBox;if(h===null){const p=new ns({name:"PMREM.Background",side:Ct,depthWrite:!1,depthTest:!1});h=new fi(new _o,p)}let d=!1;const f=e.background;f?f.isColor&&(h.material.color.copy(f),e.background=null,d=!0):(h.material.color.copy(Qx),d=!0),c.setRenderTarget(n),c.clear(),d&&c.render(h,o);for(let p=0;p<6;p++){const _=p%3;_===0?(o.up.set(0,a[p],0),o.position.set(s.x,s.y,s.z),o.lookAt(s.x+l[p],s.y,s.z)):_===1?(o.up.set(0,0,a[p]),o.position.set(s.x,s.y,s.z),o.lookAt(s.x,s.y+l[p],s.z)):(o.up.set(0,a[p],0),o.position.set(s.x,s.y,s.z),o.lookAt(s.x,s.y,s.z+l[p]));const g=this._cubeSize;lh(n,_*g,p>2?g:0,g,g),c.render(e,o)}c.autoClear=u,e.background=f}_textureToCubeUV(e,t){const i=this._renderer,n=e.mapping===ls||e.mapping===cs;n?this._cubemapMaterial===null&&(this._cubemapMaterial=ty(e)):this._equirectMaterial===null&&(this._equirectMaterial=iy(e));const s=n?this._cubemapMaterial:this._equirectMaterial;s.fragmentNode.value=e;const o=this._lodMeshes[0];o.material=s;const a=this._cubeSize;lh(t,0,0,3*a,2*a),i.setRenderTarget(t),i.render(o,jf)}_applyPMREM(e){const t=this._renderer,i=t.autoClear;t.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=Jx[(n-s-1)%Jx.length];this._blur(e,s-1,s,o,a)}t.autoClear=i}_blur(e,t,i,n,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,i,n,"latitudinal",s),this._halfBlur(o,e,i,i,n,"longitudinal",s)}_halfBlur(e,t,i,n,s,o,a){const l=this._renderer,c=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,h=this._lodMeshes[n];h.material=c;const d=SS.get(c),f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Qr-1),_=s/p,g=isFinite(s)?1+Math.floor(u*_):Qr;g>Qr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Qr}`);const m=[];let b=0;for(let M=0;M<Qr;++M){const R=M/_,T=Math.exp(-R*R/2);m.push(T),M===0?b+=T:M<g&&(b+=2*T)}for(let M=0;M<m.length;M++)m[M]=m[M]/b;e.texture.frame=(e.texture.frame||0)+1,d.envMap.value=e.texture,d.samples.value=g,d.weights.array=m,d.latitudinal.value=o==="latitudinal"?1:0,a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-i;const x=this._sizeLods[n],S=3*x*(n>y-la?n-y+la:0),w=4*(this._cubeSize-x);lh(t,S,w,3*x,2*x),l.setRenderTarget(t),l.render(h,jf)}}function GU(r){const e=[],t=[],i=[],n=[];let s=r;const o=r-la+1+Zx.length;for(let a=0;a<o;a++){const l=Math.pow(2,s);t.push(l);let c=1/l;a>r-la?c=Zx[a-r+la-1]:a===0&&(c=0),i.push(c);const u=1/(l-2),h=-u,d=1+u,f=[h,h,d,h,d,d,h,h,d,d,h,d],p=6,_=6,g=3,m=2,b=1,y=new Float32Array(g*_*p),x=new Float32Array(m*_*p),S=new Float32Array(b*_*p);for(let M=0;M<p;M++){const R=M%3*2/3-1,T=M>2?0:-1,E=[R,T,0,R+2/3,T,0,R+2/3,T+1,0,R,T,0,R+2/3,T+1,0,R,T+1,0],C=kU[M];y.set(E,g*_*C),x.set(f,m*_*C);const k=[C,C,C,C,C,C];S.set(k,b*_*C)}const w=new $s;w.setAttribute("position",new Ci(y,g)),w.setAttribute("uv",new Ci(x,m)),w.setAttribute("faceIndex",new Ci(S,b)),e.push(w),n.push(new fi(w,null)),s>la&&s--}return{lodPlanes:e,sizeLods:t,sigmas:i,lodMeshes:n}}function ey(r,e){const t={magFilter:ni,minFilter:ni,generateMipmaps:!1,type:pn,format:Gt,colorSpace:ho},i=new go(r,e,t);return i.texture.mapping=lo,i.texture.name="PMREM.cubeUv",i.texture.isPMREMTexture=!0,i.scissorTest=!0,i}function lh(r,e,t,i,n){r.viewport.set(e,t,i,n),r.scissor.set(e,t,i,n)}function _g(r){const e=new pl;return e.depthTest=!1,e.depthWrite=!1,e.blending=dn,e.name=`PMREM_${r}`,e}function VU(r,e,t){const i=Us(new Array(Qr).fill(0)),n=St(new B(0,1,0)),s=St(0),o=Ue(Qr),a=St(0),l=St(1),c=as(null),u=St(0),h=Ue(1/e),d=Ue(1/t),f=Ue(r),p={n:o,latitudinal:a,weights:i,poleAxis:n,outputDirection:gg,dTheta:s,samples:l,envMap:c,mipInt:u,CUBEUV_TEXEL_WIDTH:h,CUBEUV_TEXEL_HEIGHT:d,CUBEUV_MAX_MIP:f},_=_g("blur");return _.fragmentNode=UU({...p,latitudinal:a.equal(1)}),SS.set(_,p),_}function ty(r){const e=_g("cubemap");return e.fragmentNode=Ic(r,gg),e}function iy(r){const e=_g("equirect");return e.fragmentNode=as(r,ZT(gg),0),e}const ny=new WeakMap;function HU(r){const e=Math.log2(r)-2,t=1/r;return{texelWidth:1/(3*Math.max(Math.pow(2,e),112)),texelHeight:t,maxMip:e}}function WU(r,e,t){const i=$U(e);let n=i.get(r);if((n!==void 0?n.pmremVersion:-1)!==r.pmremVersion){const o=r.image;if(r.isCubeTexture)if(qU(o))n=t.fromCubemap(r,n);else return null;else if(YU(o))n=t.fromEquirectangular(r,n);else return null;n.pmremVersion=r.pmremVersion,i.set(r,n)}return n.texture}function $U(r){let e=ny.get(r);return e===void 0&&(e=new WeakMap,ny.set(r,e)),e}class XU extends yi{static get type(){return"PMREMNode"}constructor(e,t=null,i=null){super("vec3"),this._value=e,this._pmrem=null,this.uvNode=t,this.levelNode=i,this._generator=null;const n=new ki;n.isRenderTargetTexture=!0,this._texture=as(n),this._width=St(0),this._height=St(0),this._maxMip=St(0),this.updateBeforeType=it.RENDER}set value(e){this._value=e,this._pmrem=null}get value(){return this._value}updateFromTexture(e){const t=HU(e.image.height);this._texture.value=e,this._width.value=t.texelWidth,this._height.value=t.texelHeight,this._maxMip.value=t.maxMip}updateBefore(e){let t=this._pmrem;const i=t?t.pmremVersion:-1,n=this._value;i!==n.pmremVersion&&(n.isPMREMTexture===!0?t=n:t=WU(n,e.renderer,this._generator),t!==null&&(this._pmrem=t,this.updateFromTexture(t)))}setup(e){this._generator===null&&(this._generator=new zU(e.renderer)),this.updateBefore(e);let t=this.uvNode;t===null&&e.context.getUV&&(t=e.context.getUV(this)),t=aS.mul(Ee(t.x,t.y.negate(),t.z));let i=this.levelNode;return i===null&&e.context.getTextureLevel&&(i=e.context.getTextureLevel(this)),FU(this._texture,t,i,this._width,this._height,this._maxMip)}dispose(){super.dispose(),this._generator!==null&&this._generator.dispose()}}function qU(r){if(r==null)return!1;let e=0;const t=6;for(let i=0;i<t;i++)r[i]!==void 0&&e++;return e===t}function YU(r){return r==null?!1:r.height>0}const jU=mt(XU).setParameterLength(1,3);Re(([r=Qc()],{renderer:e,material:t})=>{const i=UT(r.mul(2).sub(1));let n;if(t.alphaToCoverage&&e.samples>1){const s=Ue(i.fwidth()).toVar();n=Lc(s.oneMinus(),s.add(1),i).oneMinus()}else n=$n(i.greaterThan(1),0,1);return n});const Bn=new Zm;class KU extends vr{constructor(e,t){super(),this.renderer=e,this.nodes=t}update(e,t,i){const n=this.renderer,s=this.nodes.getBackgroundNode(e)||e.background;let o=!1;if(s===null)n._clearColor.getRGB(Bn),Bn.a=n._clearColor.a;else if(s.isColor===!0)s.getRGB(Bn),Bn.a=1,o=!0;else if(s.isNode===!0){const c=this.get(e),u=s;Bn.copy(n._clearColor);let h=c.backgroundMesh;if(h===void 0){let g=function(){s.removeEventListener("dispose",g),h.material.dispose(),h.geometry.dispose()};var l=g;const f=cg(_i(u).mul($x),{getUV:()=>xU.mul(tF),getTextureLevel:()=>_U});let p=_S;p=p.setZ(p.w);const _=new pl;_.name="Background.material",_.side=Ct,_.depthTest=!1,_.depthWrite=!1,_.allowOverride=!1,_.fog=!1,_.lights=!1,_.vertexNode=p,_.colorNode=f,c.backgroundMeshNode=f,c.backgroundMesh=h=new fi(new Lm(1,32,32),_),h.frustumCulled=!1,h.name="Background.mesh",h.onBeforeRender=function(m,b,y){this.matrixWorld.copyPosition(y.matrixWorld)},s.addEventListener("dispose",g)}const d=u.getCacheKey();c.backgroundCacheKey!==d&&(c.backgroundMeshNode.node=_i(u).mul($x),c.backgroundMeshNode.needsUpdate=!0,h.material.needsUpdate=!0,c.backgroundCacheKey=d),t.unshift(h,h.geometry,h.material,0,0,null,null)}else console.error("THREE.Renderer: Unsupported background configuration.",s);const a=n.xr.getEnvironmentBlendMode();if(a==="additive"?Bn.set(0,0,0,1):a==="alpha-blend"&&Bn.set(0,0,0,0),n.autoClear===!0||o===!0){const c=i.clearColorValue;c.r=Bn.r,c.g=Bn.g,c.b=Bn.b,c.a=Bn.a,(n.backend.isWebGLBackend===!0||n.alpha===!0)&&(c.r*=c.a,c.g*=c.a,c.b*=c.a),i.depthClearValue=n._clearDepth,i.stencilClearValue=n._clearStencil,i.clearColor=n.autoClearColor===!0,i.clearDepth=n.autoClearDepth===!0,i.clearStencil=n.autoClearStencil===!0}else i.clearColor=!1,i.clearDepth=!1,i.clearStencil=!1}}let ZU=0;class Hp{constructor(e="",t=[],i=0,n=[]){this.name=e,this.bindings=t,this.index=i,this.bindingsReference=n,this.id=ZU++}}class QU{constructor(e,t,i,n,s,o,a,l,c,u=[]){this.vertexShader=e,this.fragmentShader=t,this.computeShader=i,this.transforms=u,this.nodeAttributes=n,this.bindings=s,this.updateNodes=o,this.updateBeforeNodes=a,this.updateAfterNodes=l,this.observer=c,this.usedTimes=0}createBindings(){const e=[];for(const t of this.bindings)if(t.bindings[0].groupNode.shared!==!0){const n=new Hp(t.name,[],t.index,t);e.push(n);for(const s of t.bindings)n.bindings.push(s.clone())}else e.push(t);return e}}class vS extends Ib{constructor(e=1,t={}){super(e,t),this.isCubeRenderTarget=!0}fromEquirectangularTexture(e,t){const i=t.minFilter,n=t.generateMipmaps;t.generateMipmaps=!0,this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const s=new _o(5,5,5),o=ZT(jT),a=new pl;a.colorNode=as(t,o,0),a.side=Ct,a.blending=dn;const l=new fi(s,a),c=new td;c.add(l),t.minFilter===Xi&&(t.minFilter=ni);const u=new Lb(1,10,this),h=e.getMRT();return e.setMRT(null),u.update(e,c),e.setMRT(h),t.minFilter=i,t.currentGenerateMipmaps=n,l.geometry.dispose(),l.material.dispose(),this}}const sc=new WeakMap;class JU extends yi{static get type(){return"CubeMapNode"}constructor(e){super("vec3"),this.envNode=e,this._cubeTexture=null,this._cubeTextureNode=Ic(null);const t=new Hc;t.isRenderTargetTexture=!0,this._defaultTexture=t,this.updateBeforeType=it.RENDER}updateBefore(e){const{renderer:t,material:i}=e,n=this.envNode;if(n.isTextureNode||n.isMaterialReferenceNode){const s=n.isTextureNode?n.value:i[n.property];if(s&&s.isTexture){const o=s.mapping;if(o===Aa||o===wa){if(sc.has(s)){const a=sc.get(s);sy(a,s.mapping),this._cubeTexture=a}else{const a=s.image;if(eB(a)){const l=new vS(a.height);l.fromEquirectangularTexture(t,s),sy(l.texture,s.mapping),this._cubeTexture=l.texture,sc.set(s,l.texture),s.addEventListener("dispose",MS)}else this._cubeTexture=this._defaultTexture}this._cubeTextureNode.value=this._cubeTexture}else this._cubeTextureNode=this.envNode}}}setup(e){return this.updateBefore(e),this._cubeTextureNode}}function eB(r){return r==null?!1:r.height>0}function MS(r){const e=r.target;e.removeEventListener("dispose",MS);const t=sc.get(e);t!==void 0&&(sc.delete(e),t.dispose())}function sy(r,e){e===Aa?r.mapping=ls:e===wa&&(r.mapping=cs)}const tB=mt(JU).setParameterLength(1);class ry{constructor(e,t,i=null){this.isNodeAttribute=!0,this.name=e,this.type=t,this.node=i}}class iB{constructor(e,t,i){this.isNodeUniform=!0,this.name=e,this.type=t,this.node=i.getSelf()}get value(){return this.node.value}set value(e){this.node.value=e}get id(){return this.node.id}get groupNode(){return this.node.groupNode}}class ES{constructor(e,t,i=!1,n=null){this.isNodeVar=!0,this.name=e,this.type=t,this.readOnly=i,this.count=n}}class nB extends ES{constructor(e,t,i=null,n=null){super(e,t),this.needsInterpolation=!1,this.isNodeVarying=!0,this.interpolationType=i,this.interpolationSampling=n}}class sB{constructor(e,t,i=""){this.name=e,this.type=t,this.code=i,Object.defineProperty(this,"isNodeCode",{value:!0})}}let rB=0;class ep{constructor(e=null){this.id=rB++,this.nodesData=new WeakMap,this.parent=e}getData(e){let t=this.nodesData.get(e);return t===void 0&&this.parent!==null&&(t=this.parent.getData(e)),t}setData(e,t){this.nodesData.set(e,t)}}class oB{constructor(e,t){this.name=e,this.members=t,this.output=!1}}class Mr{constructor(e,t){this.name=e,this.value=t,this.boundary=0,this.itemSize=0,this.offset=0}setValue(e){this.value=e}getValue(){return this.value}}class aB extends Mr{constructor(e,t=0){super(e,t),this.isNumberUniform=!0,this.boundary=4,this.itemSize=1}}class lB extends Mr{constructor(e,t=new Je){super(e,t),this.isVector2Uniform=!0,this.boundary=8,this.itemSize=2}}class cB extends Mr{constructor(e,t=new B){super(e,t),this.isVector3Uniform=!0,this.boundary=16,this.itemSize=3}}class uB extends Mr{constructor(e,t=new je){super(e,t),this.isVector4Uniform=!0,this.boundary=16,this.itemSize=4}}class hB extends Mr{constructor(e,t=new ct){super(e,t),this.isColorUniform=!0,this.boundary=16,this.itemSize=3}}class dB extends Mr{constructor(e,t=new nd){super(e,t),this.isMatrix2Uniform=!0,this.boundary=8,this.itemSize=4}}class fB extends Mr{constructor(e,t=new We){super(e,t),this.isMatrix3Uniform=!0,this.boundary=48,this.itemSize=12}}class pB extends Mr{constructor(e,t=new It){super(e,t),this.isMatrix4Uniform=!0,this.boundary=64,this.itemSize=16}}class mB extends aB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class gB extends lB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class _B extends cB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class xB extends uB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class yB extends hB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class bB extends dB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class TB extends fB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}class SB extends pB{constructor(e){super(e.name,e.value),this.nodeUniform=e}getValue(){return this.nodeUniform.value}getType(){return this.nodeUniform.type}}const oy=new WeakMap,vB=new Map([[Int8Array,"int"],[Int16Array,"int"],[Int32Array,"int"],[Uint8Array,"uint"],[Uint16Array,"uint"],[Uint32Array,"uint"],[Float32Array,"float"]]),ch=r=>/e/g.test(r)?String(r).replace(/\+/g,""):(r=Number(r),r+(r%1?"":".0"));class AS{constructor(e,t,i){this.object=e,this.material=e&&e.material||null,this.geometry=e&&e.geometry||null,this.renderer=t,this.parser=i,this.scene=null,this.camera=null,this.nodes=[],this.sequentialNodes=[],this.updateNodes=[],this.updateBeforeNodes=[],this.updateAfterNodes=[],this.hashNodes={},this.observer=null,this.lightsNode=null,this.environmentNode=null,this.fogNode=null,this.clippingContext=null,this.vertexShader=null,this.fragmentShader=null,this.computeShader=null,this.flowNodes={vertex:[],fragment:[],compute:[]},this.flowCode={vertex:"",fragment:"",compute:""},this.uniforms={vertex:[],fragment:[],compute:[],index:0},this.structs={vertex:[],fragment:[],compute:[],index:0},this.bindings={vertex:{},fragment:{},compute:{}},this.bindingsIndexes={},this.bindGroups=null,this.attributes=[],this.bufferAttributes=[],this.varyings=[],this.codes={},this.vars={},this.declarations={},this.flow={code:""},this.chaining=[],this.stack=Bf(),this.stacks=[],this.tab="	",this.currentFunctionNode=null,this.context={material:this.material},this.cache=new ep,this.globalCache=this.cache,this.flowsData=new WeakMap,this.shaderStage=null,this.buildStage=null,this.subBuildLayers=[],this.currentStack=null,this.subBuildFn=null}getBindGroupsCache(){let e=oy.get(this.renderer);return e===void 0&&(e=new hs,oy.set(this.renderer,e)),e}createRenderTarget(e,t,i){return new go(e,t,i)}createCubeRenderTarget(e,t){return new vS(e,t)}includes(e){return this.nodes.includes(e)}getOutputStructName(){}_getBindGroup(e,t){const i=this.getBindGroupsCache(),n=[];let s=!0;for(const a of t)n.push(a),s=s&&a.groupNode.shared!==!0;let o;return s?(o=i.get(n),o===void 0&&(o=new Hp(e,n,this.bindingsIndexes[e].group,n),i.set(n,o))):o=new Hp(e,n,this.bindingsIndexes[e].group,n),o}getBindGroupArray(e,t){const i=this.bindings[t];let n=i[e];return n===void 0&&(this.bindingsIndexes[e]===void 0&&(this.bindingsIndexes[e]={binding:0,group:Object.keys(this.bindingsIndexes).length}),i[e]=n=[]),n}getBindings(){let e=this.bindGroups;if(e===null){const t={},i=this.bindings;for(const n of bx)for(const s in i[n]){const o=i[n][s];(t[s]||(t[s]=[])).push(...o)}e=[];for(const n in t){const s=t[n],o=this._getBindGroup(n,s);e.push(o)}this.bindGroups=e}return e}sortBindingGroups(){const e=this.getBindings();e.sort((t,i)=>t.bindings[0].groupNode.order-i.bindings[0].groupNode.order);for(let t=0;t<e.length;t++){const i=e[t];this.bindingsIndexes[i.name].group=t,i.index=t}}setHashNode(e,t){this.hashNodes[t]=e}addNode(e){this.nodes.includes(e)===!1&&(this.nodes.push(e),this.setHashNode(e,e.getHash(this)))}addSequentialNode(e){this.sequentialNodes.includes(e)===!1&&this.sequentialNodes.push(e)}buildUpdateNodes(){for(const e of this.nodes)e.getUpdateType()!==it.NONE&&this.updateNodes.push(e.getSelf());for(const e of this.sequentialNodes){const t=e.getUpdateBeforeType(),i=e.getUpdateAfterType();t!==it.NONE&&this.updateBeforeNodes.push(e.getSelf()),i!==it.NONE&&this.updateAfterNodes.push(e.getSelf())}}get currentNode(){return this.chaining[this.chaining.length-1]}isFilteredTexture(e){return e.magFilter===ni||e.magFilter===ha||e.magFilter===Bs||e.magFilter===Xi||e.minFilter===ni||e.minFilter===ha||e.minFilter===Bs||e.minFilter===Xi}addChain(e){this.chaining.push(e)}removeChain(e){if(this.chaining.pop()!==e)throw new Error("NodeBuilder: Invalid node chaining!")}getMethod(e){return e}getNodeFromHash(e){return this.hashNodes[e]}addFlow(e,t){return this.flowNodes[e].push(t),t}setContext(e){this.context=e}getContext(){return this.context}getSharedContext(){return{...this.context},this.context}setCache(e){this.cache=e}getCache(){return this.cache}getCacheFromNode(e,t=!0){const i=this.getDataFromNode(e);return i.cache===void 0&&(i.cache=new ep(t?this.getCache():null)),i.cache}isAvailable(){return!1}getVertexIndex(){console.warn("Abstract function.")}getInstanceIndex(){console.warn("Abstract function.")}getDrawIndex(){console.warn("Abstract function.")}getFrontFacing(){console.warn("Abstract function.")}getFragCoord(){console.warn("Abstract function.")}isFlipY(){return!1}increaseUsage(e){const t=this.getDataFromNode(e);return t.usageCount=t.usageCount===void 0?1:t.usageCount+1,t.usageCount}generateTexture(){console.warn("Abstract function.")}generateTextureLod(){console.warn("Abstract function.")}generateArrayDeclaration(e,t){return this.getType(e)+"[ "+t+" ]"}generateArray(e,t,i=null){let n=this.generateArrayDeclaration(e,t)+"( ";for(let s=0;s<t;s++){const o=i?i[s]:null;o!==null?n+=o.build(this,e):n+=this.generateConst(e),s<t-1&&(n+=", ")}return n+=" )",n}generateStruct(e,t,i=null){const n=[];for(const s of t){const{name:o,type:a}=s;i&&i[o]&&i[o].isNode?n.push(i[o].build(this,a)):n.push(this.generateConst(a))}return e+"( "+n.join(", ")+" )"}generateConst(e,t=null){if(t===null&&(e==="float"||e==="int"||e==="uint"?t=0:e==="bool"?t=!1:e==="color"?t=new ct:e==="vec2"?t=new Je:e==="vec3"?t=new B:e==="vec4"&&(t=new je)),e==="float")return ch(t);if(e==="int")return`${Math.round(t)}`;if(e==="uint")return t>=0?`${Math.round(t)}u`:"0u";if(e==="bool")return t?"true":"false";if(e==="color")return`${this.getType("vec3")}( ${ch(t.r)}, ${ch(t.g)}, ${ch(t.b)} )`;const i=this.getTypeLength(e),n=this.getComponentType(e),s=o=>this.generateConst(n,o);if(i===2)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)} )`;if(i===3)return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)} )`;if(i===4&&e!=="mat2")return`${this.getType(e)}( ${s(t.x)}, ${s(t.y)}, ${s(t.z)}, ${s(t.w)} )`;if(i>=4&&t&&(t.isMatrix2||t.isMatrix3||t.isMatrix4))return`${this.getType(e)}( ${t.elements.map(s).join(", ")} )`;if(i>4)return`${this.getType(e)}()`;throw new Error(`NodeBuilder: Type '${e}' not found in generate constant attempt.`)}getType(e){return e==="color"?"vec3":e}hasGeometryAttribute(e){return this.geometry&&this.geometry.getAttribute(e)!==void 0}getAttribute(e,t){const i=this.attributes;for(const s of i)if(s.name===e)return s;const n=new ry(e,t);return this.registerDeclaration(n),i.push(n),n}getPropertyName(e){return e.name}isVector(e){return/vec\d/.test(e)}isMatrix(e){return/mat\d/.test(e)}isReference(e){return e==="void"||e==="property"||e==="sampler"||e==="samplerComparison"||e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="depthTexture"||e==="texture3D"}needsToWorkingColorSpace(){return!1}getComponentTypeFromTexture(e){const t=e.type;if(e.isDataTexture){if(t===hi)return"int";if(t===Mt)return"uint"}return"float"}getElementType(e){return e==="mat2"?"vec2":e==="mat3"?"vec3":e==="mat4"?"vec4":this.getComponentType(e)}getComponentType(e){if(e=this.getVectorType(e),e==="float"||e==="bool"||e==="int"||e==="uint")return e;const t=/(b|i|u|)(vec|mat)([2-4])/.exec(e);return t===null?null:t[1]==="b"?"bool":t[1]==="i"?"int":t[1]==="u"?"uint":"float"}getVectorType(e){return e==="color"?"vec3":e==="texture"||e==="cubeTexture"||e==="storageTexture"||e==="texture3D"?"vec4":e}getTypeFromLength(e,t="float"){if(e===1)return t;let i=zP(e);const n=t==="float"?"":t[0];return/mat2/.test(t)===!0&&(i=i.replace("vec","mat")),n+i}getTypeFromArray(e){return vB.get(e.constructor)}isInteger(e){return/int|uint|(i|u)vec/.test(e)}getTypeFromAttribute(e){let t=e;e.isInterleavedBufferAttribute&&(t=e.data);const i=t.array,n=e.itemSize,s=e.normalized;let o;return!(e instanceof Nb)&&s!==!0&&(o=this.getTypeFromArray(i)),this.getTypeFromLength(n,o)}getTypeLength(e){const t=this.getVectorType(e),i=/vec([2-4])/.exec(t);return i!==null?Number(i[1]):t==="float"||t==="bool"||t==="int"||t==="uint"?1:/mat2/.test(e)===!0?4:/mat3/.test(e)===!0?9:/mat4/.test(e)===!0?16:0}getVectorFromMatrix(e){return e.replace("mat","vec")}changeComponentType(e,t){return this.getTypeFromLength(this.getTypeLength(e),t)}getIntegerType(e){const t=this.getComponentType(e);return t==="int"||t==="uint"?e:this.changeComponentType(e,"int")}addStack(){return this.stack=Bf(this.stack),this.stacks.push(ig()||this.stack),zh(this.stack),this.stack}removeStack(){const e=this.stack;return this.stack=e.parent,zh(this.stacks.pop()),e}getDataFromNode(e,t=this.shaderStage,i=null){i=i===null?e.isGlobal(this)?this.globalCache:this.cache:i;let n=i.getData(e);n===void 0&&(n={},i.setData(e,n)),n[t]===void 0&&(n[t]={});let s=n[t];const o=n.any?n.any.subBuilds:null,a=this.getClosestSubBuild(o);return a&&(s.subBuildsCache===void 0&&(s.subBuildsCache={}),s=s.subBuildsCache[a]||(s.subBuildsCache[a]={}),s.subBuilds=o),s}getNodeProperties(e,t="any"){const i=this.getDataFromNode(e,t);return i.properties||(i.properties={outputNode:null})}getBufferAttributeFromNode(e,t){const i=this.getDataFromNode(e);let n=i.bufferAttribute;if(n===void 0){const s=this.uniforms.index++;n=new ry("nodeAttribute"+s,t,e),this.bufferAttributes.push(n),i.bufferAttribute=n}return n}getStructTypeFromNode(e,t,i=null,n=this.shaderStage){const s=this.getDataFromNode(e,n,this.globalCache);let o=s.structType;if(o===void 0){const a=this.structs.index++;i===null&&(i="StructType"+a),o=new oB(i,t),this.structs[n].push(o),s.structType=o}return o}getOutputStructTypeFromNode(e,t){const i=this.getStructTypeFromNode(e,t,"OutputType","fragment");return i.output=!0,i}getUniformFromNode(e,t,i=this.shaderStage,n=null){const s=this.getDataFromNode(e,i,this.globalCache);let o=s.uniform;if(o===void 0){const a=this.uniforms.index++;o=new iB(n||"nodeUniform"+a,t,e),this.uniforms[i].push(o),this.registerDeclaration(o),s.uniform=o}return o}getVarFromNode(e,t=null,i=e.getNodeType(this),n=this.shaderStage,s=!1){const o=this.getDataFromNode(e,n),a=this.getSubBuildProperty("variable",o.subBuilds);let l=o[a];if(l===void 0){const c=s?"_const":"_var",u=this.vars[n]||(this.vars[n]=[]),h=this.vars[c]||(this.vars[c]=0);t===null&&(t=(s?"nodeConst":"nodeVar")+h,this.vars[c]++),a!=="variable"&&(t=this.getSubBuildProperty(t,o.subBuilds));const d=e.getArrayCount(this);l=new ES(t,i,s,d),s||u.push(l),this.registerDeclaration(l),o[a]=l}return l}isDeterministic(e){if(e.isMathNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0)&&(e.cNode?this.isDeterministic(e.cNode):!0);if(e.isOperatorNode)return this.isDeterministic(e.aNode)&&(e.bNode?this.isDeterministic(e.bNode):!0);if(e.isArrayNode){if(e.values!==null){for(const t of e.values)if(!this.isDeterministic(t))return!1}return!0}else if(e.isConstNode)return!0;return!1}getVaryingFromNode(e,t=null,i=e.getNodeType(this),n=null,s=null){const o=this.getDataFromNode(e,"any"),a=this.getSubBuildProperty("varying",o.subBuilds);let l=o[a];if(l===void 0){const c=this.varyings,u=c.length;t===null&&(t="nodeVarying"+u),a!=="varying"&&(t=this.getSubBuildProperty(t,o.subBuilds)),l=new nB(t,i,n,s),c.push(l),this.registerDeclaration(l),o[a]=l}return l}registerDeclaration(e){const t=this.shaderStage,i=this.declarations[t]||(this.declarations[t]={}),n=this.getPropertyName(e);let s=1,o=n;for(;i[o]!==void 0;)o=n+"_"+s++;s>1&&(e.name=o,console.warn(`THREE.TSL: Declaration name '${n}' of '${e.type}' already in use. Renamed to '${o}'.`)),i[o]=e}getCodeFromNode(e,t,i=this.shaderStage){const n=this.getDataFromNode(e);let s=n.code;if(s===void 0){const o=this.codes[i]||(this.codes[i]=[]),a=o.length;s=new sB("nodeCode"+a,t),o.push(s),n.code=s}return s}addFlowCodeHierarchy(e,t){const{flowCodes:i,flowCodeBlock:n}=this.getDataFromNode(e);let s=!0,o=t;for(;o;){if(n.get(o)===!0){s=!1;break}o=this.getDataFromNode(o).parentNodeBlock}if(s)for(const a of i)this.addLineFlowCode(a)}addLineFlowCodeBlock(e,t,i){const n=this.getDataFromNode(e),s=n.flowCodes||(n.flowCodes=[]),o=n.flowCodeBlock||(n.flowCodeBlock=new WeakMap);s.push(t),o.set(i,!0)}addLineFlowCode(e,t=null){return e===""?this:(t!==null&&this.context.nodeBlock&&this.addLineFlowCodeBlock(t,e,this.context.nodeBlock),e=this.tab+e,/;\s*$/.test(e)||(e=e+`;
`),this.flow.code+=e,this)}addFlowCode(e){return this.flow.code+=e,this}addFlowTab(){return this.tab+="	",this}removeFlowTab(){return this.tab=this.tab.slice(0,-1),this}getFlowData(e){return this.flowsData.get(e)}flowNode(e){const t=e.getNodeType(this),i=this.flowChildNode(e,t);return this.flowsData.set(e,i),i}addInclude(e){this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(e)}buildFunctionNode(e){const t=new vU,i=this.currentFunctionNode;return this.currentFunctionNode=t,t.code=this.buildFunctionCode(e),this.currentFunctionNode=i,t}flowShaderNode(e){const t=e.layout,i={[Symbol.iterator](){let o=0;const a=Object.values(this);return{next:()=>({value:a[o],done:o++>=a.length})}}};for(const o of t.inputs)i[o.name]=new GI(o.type,o.name);e.layout=null;const n=e.call(i),s=this.flowStagesNode(n,t.type);return e.layout=t,s}flowBuildStage(e,t,i=null){const n=this.getBuildStage();this.setBuildStage(t);const s=e.build(this,i);return this.setBuildStage(n),s}flowStagesNode(e,t=null){const i=this.flow,n=this.vars,s=this.declarations,o=this.cache,a=this.buildStage,l=this.stack,c={code:""};this.flow=c,this.vars={},this.declarations={},this.cache=new ep,this.stack=Bf();for(const u of yx)this.setBuildStage(u),c.result=e.build(this,t);return c.vars=this.getVars(this.shaderStage),this.flow=i,this.vars=n,this.declarations=s,this.cache=o,this.stack=l,this.setBuildStage(a),c}getFunctionOperator(){return null}buildFunctionCode(){console.warn("Abstract function.")}flowChildNode(e,t=null){const i=this.flow,n={code:""};return this.flow=n,n.result=e.build(this,t),this.flow=i,n}flowNodeFromShaderStage(e,t,i=null,n=null){const s=this.tab,o=this.cache,a=this.shaderStage,l=this.context;this.setShaderStage(e);const c={...this.context};delete c.nodeBlock,this.cache=this.globalCache,this.tab="	",this.context=c;let u=null;if(this.buildStage==="generate"){const h=this.flowChildNode(t,i);n!==null&&(h.code+=`${this.tab+n} = ${h.result};
`),this.flowCode[e]=this.flowCode[e]+h.code,u=h}else u=t.build(this);return this.setShaderStage(a),this.cache=o,this.tab=s,this.context=l,u}getAttributesArray(){return this.attributes.concat(this.bufferAttributes)}getAttributes(){console.warn("Abstract function.")}getVaryings(){console.warn("Abstract function.")}getVar(e,t,i=null){return`${i!==null?this.generateArrayDeclaration(e,i):this.getType(e)} ${t}`}getVars(e){let t="";const i=this.vars[e];if(i!==void 0)for(const n of i)t+=`${this.getVar(n.type,n.name)}; `;return t}getUniforms(){console.warn("Abstract function.")}getCodes(e){const t=this.codes[e];let i="";if(t!==void 0)for(const n of t)i+=n.code+`
`;return i}getHash(){return this.vertexShader+this.fragmentShader+this.computeShader}setShaderStage(e){this.shaderStage=e}getShaderStage(){return this.shaderStage}setBuildStage(e){this.buildStage=e}getBuildStage(){return this.buildStage}buildCode(){console.warn("Abstract function.")}get subBuild(){return this.subBuildLayers[this.subBuildLayers.length-1]||null}addSubBuild(e){this.subBuildLayers.push(e)}removeSubBuild(){return this.subBuildLayers.pop()}getClosestSubBuild(e){let t;if(e&&e.isNode?e.isShaderCallNodeInternal?t=e.shaderNode.subBuilds:e.isStackNode?t=[e.subBuild]:t=this.getDataFromNode(e,"any").subBuilds:e instanceof Set?t=[...e]:t=e,!t)return null;const i=this.subBuildLayers;for(let n=t.length-1;n>=0;n--){const s=t[n];if(i.includes(s))return s}return null}getSubBuildOutput(e){return this.getSubBuildProperty("outputNode",e)}getSubBuildProperty(e="",t=null){let i;t!==null?i=this.getClosestSubBuild(t):i=this.subBuildFn;let n;return i?n=e?i+"_"+e:i:n=e,n}build(){const{object:e,material:t,renderer:i}=this;if(t!==null){let n=i.library.fromMaterial(t);n===null&&(console.error(`NodeMaterial: Material "${t.type}" is not compatible.`),n=new pl),n.build(this)}else this.addFlow("compute",e);for(const n of yx){this.setBuildStage(n),this.context.vertex&&this.context.vertex.isNode&&this.flowNodeFromShaderStage("vertex",this.context.vertex);for(const s of bx){this.setShaderStage(s);const o=this.flowNodes[s];for(const a of o)n==="generate"?this.flowNode(a):a.build(this)}}return this.setBuildStage(null),this.setShaderStage(null),this.buildCode(),this.buildUpdateNodes(),this}getNodeUniform(e,t){if(t==="float"||t==="int"||t==="uint")return new mB(e);if(t==="vec2"||t==="ivec2"||t==="uvec2")return new gB(e);if(t==="vec3"||t==="ivec3"||t==="uvec3")return new _B(e);if(t==="vec4"||t==="ivec4"||t==="uvec4")return new xB(e);if(t==="color")return new yB(e);if(t==="mat2")return new bB(e);if(t==="mat3")return new TB(e);if(t==="mat4")return new SB(e);throw new Error(`Uniform "${t}" not declared.`)}format(e,t,i){if(t=this.getVectorType(t),i=this.getVectorType(i),t===i||i===null||this.isReference(i))return e;const n=this.getTypeLength(t),s=this.getTypeLength(i);return n===16&&s===9?`${this.getType(i)}( ${e}[ 0 ].xyz, ${e}[ 1 ].xyz, ${e}[ 2 ].xyz )`:n===9&&s===4?`${this.getType(i)}( ${e}[ 0 ].xy, ${e}[ 1 ].xy )`:n>4||s>4||s===0?e:n===s?`${this.getType(i)}( ${e} )`:n>s?(e=i==="bool"?`all( ${e} )`:`${e}.${"xyz".slice(0,s)}`,this.format(e,this.getTypeFromLength(s,this.getComponentType(t)),i)):s===4&&n>1?`${this.getType(i)}( ${this.format(e,t,"vec3")}, 1.0 )`:n===2?`${this.getType(i)}( ${this.format(e,t,"vec2")}, 0.0 )`:(n===1&&s>1&&t!==this.getComponentType(i)&&(e=`${this.getType(this.getComponentType(i))}( ${e} )`),`${this.getType(i)}( ${e} )`)}getSignature(){return`// Three.js r${tm} - Node System
`}*[Symbol.iterator](){}}class ay{constructor(){this.time=0,this.deltaTime=0,this.frameId=0,this.renderId=0,this.updateMap=new WeakMap,this.updateBeforeMap=new WeakMap,this.updateAfterMap=new WeakMap,this.renderer=null,this.material=null,this.camera=null,this.object=null,this.scene=null}_getMaps(e,t){let i=e.get(t);return i===void 0&&(i={renderMap:new WeakMap,frameMap:new WeakMap},e.set(t,i)),i}updateBeforeNode(e){const t=e.getUpdateBeforeType(),i=e.updateReference(this);if(t===it.FRAME){const{frameMap:n}=this._getMaps(this.updateBeforeMap,i);n.get(i)!==this.frameId&&e.updateBefore(this)!==!1&&n.set(i,this.frameId)}else if(t===it.RENDER){const{renderMap:n}=this._getMaps(this.updateBeforeMap,i);n.get(i)!==this.renderId&&e.updateBefore(this)!==!1&&n.set(i,this.renderId)}else t===it.OBJECT&&e.updateBefore(this)}updateAfterNode(e){const t=e.getUpdateAfterType(),i=e.updateReference(this);if(t===it.FRAME){const{frameMap:n}=this._getMaps(this.updateAfterMap,i);n.get(i)!==this.frameId&&e.updateAfter(this)!==!1&&n.set(i,this.frameId)}else if(t===it.RENDER){const{renderMap:n}=this._getMaps(this.updateAfterMap,i);n.get(i)!==this.renderId&&e.updateAfter(this)!==!1&&n.set(i,this.renderId)}else t===it.OBJECT&&e.updateAfter(this)}updateNode(e){const t=e.getUpdateType(),i=e.updateReference(this);if(t===it.FRAME){const{frameMap:n}=this._getMaps(this.updateMap,i);n.get(i)!==this.frameId&&e.update(this)!==!1&&n.set(i,this.frameId)}else if(t===it.RENDER){const{renderMap:n}=this._getMaps(this.updateMap,i);n.get(i)!==this.renderId&&e.update(this)!==!1&&n.set(i,this.renderId)}else t===it.OBJECT&&e.update(this)}update(){this.frameId++,this.lastTime===void 0&&(this.lastTime=performance.now()),this.deltaTime=(performance.now()-this.lastTime)/1e3,this.lastTime=performance.now(),this.time+=this.deltaTime}}class xg{constructor(e,t,i=null,n="",s=!1){this.type=e,this.name=t,this.count=i,this.qualifier=n,this.isConst=s}}xg.isNodeFunctionInput=!0;class wS{parseFunction(){console.warn("Abstract function.")}}class yg{constructor(e,t,i="",n=""){this.type=e,this.inputs=t,this.name=i,this.precision=n}getCode(){console.warn("Abstract function.")}}yg.isNodeFunction=!0;const MB=/^\s*(highp|mediump|lowp)?\s*([a-z_0-9]+)\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)/i,EB=/[a-z_0-9]+/ig,ly="#pragma main",AB=r=>{r=r.trim();const e=r.indexOf(ly),t=e!==-1?r.slice(e+ly.length):r,i=t.match(MB);if(i!==null&&i.length===5){const n=i[4],s=[];let o=null;for(;(o=EB.exec(n))!==null;)s.push(o);const a=[];let l=0;for(;l<s.length;){const p=s[l][0]==="const";p===!0&&l++;let _=s[l][0];_==="in"||_==="out"||_==="inout"?l++:_="";const g=s[l++][0];let m=Number.parseInt(s[l][0]);Number.isNaN(m)===!1?l++:m=null;const b=s[l++][0];a.push(new xg(g,b,m,_,p))}const c=t.substring(i[0].length),u=i[3]!==void 0?i[3]:"",h=i[2],d=i[1]!==void 0?i[1]:"",f=e!==-1?r.slice(0,e):"";return{type:h,inputs:a,name:u,precision:d,inputsCode:n,blockCode:c,headerCode:f}}else throw new Error("FunctionNode: Function is not a GLSL code.")};class wB extends yg{constructor(e){const{type:t,inputs:i,name:n,precision:s,inputsCode:o,blockCode:a,headerCode:l}=AB(e);super(t,i,n,s),this.inputsCode=o,this.blockCode=a,this.headerCode=l}getCode(e=this.name){let t;const i=this.blockCode;if(i!==""){const{type:n,inputsCode:s,headerCode:o,precision:a}=this;let l=`${n} ${e} ( ${s.trim()} )`;a!==""&&(l=`${a} ${l}`),t=o+l+i}else t="";return t}}class RB extends wS{parseFunction(e){return new wB(e)}}Ee(.04);Ue(1);const cy=new WeakMap,ts=[],kr=[];class CB extends vr{constructor(e,t){super(),this.renderer=e,this.backend=t,this.nodeFrame=new ay,this.nodeBuilderCache=new Map,this.callHashCache=new hs,this.groupsData=new hs,this.cacheLib={}}updateGroup(e){const t=e.groupNode,i=t.name;if(i===MT.name)return!0;if(i===Hi.name){const s=this.get(e),o=this.nodeFrame.renderId;return s.renderId!==o?(s.renderId=o,!0):!1}if(i===jD.name){const s=this.get(e),o=this.nodeFrame.frameId;return s.frameId!==o?(s.frameId=o,!0):!1}ts[0]=t,ts[1]=e;let n=this.groupsData.get(ts);return n===void 0&&this.groupsData.set(ts,n={}),ts.length=0,n.version!==t.version?(n.version=t.version,!0):!1}getForRenderCacheKey(e){return e.initialCacheKey}getForRender(e){const t=this.get(e);let i=t.nodeBuilderState;if(i===void 0){const{nodeBuilderCache:n}=this,s=this.getForRenderCacheKey(e);if(i=n.get(s),i===void 0){const o=this.backend.createNodeBuilder(e.object,this.renderer);o.scene=e.scene,o.material=e.material,o.camera=e.camera,o.context.material=e.material,o.lightsNode=e.lightsNode,o.environmentNode=this.getEnvironmentNode(e.scene),o.fogNode=this.getFogNode(e.scene),o.clippingContext=e.clippingContext,this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview&&o.enableMultiview(),o.build(),i=this._createNodeBuilderState(o),n.set(s,i)}i.usedTimes++,t.nodeBuilderState=i}return i}delete(e){if(e.isRenderObject){const t=this.get(e).nodeBuilderState;t.usedTimes--,t.usedTimes===0&&this.nodeBuilderCache.delete(this.getForRenderCacheKey(e))}return super.delete(e)}getForCompute(e){const t=this.get(e);let i=t.nodeBuilderState;if(i===void 0){const n=this.backend.createNodeBuilder(e,this.renderer);n.build(),i=this._createNodeBuilderState(n),t.nodeBuilderState=i}return i}_createNodeBuilderState(e){return new QU(e.vertexShader,e.fragmentShader,e.computeShader,e.getAttributesArray(),e.getBindings(),e.updateNodes,e.updateBeforeNodes,e.updateAfterNodes,e.observer,e.transforms)}getEnvironmentNode(e){this.updateEnvironment(e);let t=null;if(e.environmentNode&&e.environmentNode.isNode)t=e.environmentNode;else{const i=this.get(e);i.environmentNode&&(t=i.environmentNode)}return t}getBackgroundNode(e){this.updateBackground(e);let t=null;if(e.backgroundNode&&e.backgroundNode.isNode)t=e.backgroundNode;else{const i=this.get(e);i.backgroundNode&&(t=i.backgroundNode)}return t}getFogNode(e){return this.updateFog(e),e.fogNode||this.get(e).fogNode||null}getCacheKey(e,t){ts[0]=e,ts[1]=t;const i=this.renderer.info.calls,n=this.callHashCache.get(ts)||{};if(n.callId!==i){const s=this.getEnvironmentNode(e),o=this.getFogNode(e);t&&kr.push(t.getCacheKey(!0)),s&&kr.push(s.getCacheKey()),o&&kr.push(o.getCacheKey()),kr.push(this.renderer.getOutputRenderTarget()&&this.renderer.getOutputRenderTarget().multiview?1:0),kr.push(this.renderer.shadowMap.enabled?1:0),n.callId=i,n.cacheKey=Km(kr),this.callHashCache.set(ts,n),kr.length=0}return ts.length=0,n.cacheKey}get isToneMappingState(){return!this.renderer.getRenderTarget()}updateBackground(e){const t=this.get(e),i=e.background;if(i){const n=e.backgroundBlurriness===0&&t.backgroundBlurriness>0||e.backgroundBlurriness>0&&t.backgroundBlurriness===0;if(t.background!==i||n){const s=this.getCacheNode("background",i,()=>{if(i.isCubeTexture===!0||i.mapping===Aa||i.mapping===wa||i.mapping===lo){if(e.backgroundBlurriness>0||i.mapping===lo)return jU(i);{let o;return i.isCubeTexture===!0?o=Ic(i):o=as(i),tB(o)}}else{if(i.isTexture===!0)return as(i,_a.flipY()).setUpdateMatrix(!0);i.isColor!==!0&&console.error("WebGPUNodes: Unsupported background configuration.",i)}},n);t.backgroundNode=s,t.background=i,t.backgroundBlurriness=e.backgroundBlurriness}}else t.backgroundNode&&(delete t.backgroundNode,delete t.background)}getCacheNode(e,t,i,n=!1){const s=this.cacheLib[e]||(this.cacheLib[e]=new WeakMap);let o=s.get(t);return(o===void 0||n)&&(o=i(),s.set(t,o)),o}updateFog(e){const t=this.get(e),i=e.fog;if(i){if(t.fog!==i){const n=this.getCacheNode("fog",i,()=>{if(i.isFogExp2){const s=An("color","color",i).setGroup(Hi),o=An("density","float",i).setGroup(Hi);return qx(s,EU(o))}else if(i.isFog){const s=An("color","color",i).setGroup(Hi),o=An("near","float",i).setGroup(Hi),a=An("far","float",i).setGroup(Hi);return qx(s,MU(o,a))}else console.error("THREE.Renderer: Unsupported fog configuration.",i)});t.fogNode=n,t.fog=i}}else delete t.fogNode,delete t.fog}updateEnvironment(e){const t=this.get(e),i=e.environment;if(i){if(t.environment!==i){const n=this.getCacheNode("environment",i,()=>{if(i.isCubeTexture===!0)return Ic(i);if(i.isTexture===!0)return as(i);console.error("Nodes: Unsupported environment configuration.",i)});t.environmentNode=n,t.environment=i}}else t.environmentNode&&(delete t.environmentNode,delete t.environment)}getNodeFrame(e=this.renderer,t=null,i=null,n=null,s=null){const o=this.nodeFrame;return o.renderer=e,o.scene=t,o.object=i,o.camera=n,o.material=s,o}getNodeFrameForRender(e){return this.getNodeFrame(e.renderer,e.scene,e.object,e.camera,e.material)}getOutputCacheKey(){const e=this.renderer;return e.toneMapping+","+e.currentColorSpace+","+e.xr.isPresenting}hasOutputChange(e){return cy.get(e)!==this.getOutputCacheKey()}getOutputNode(e){const t=this.renderer,i=this.getOutputCacheKey(),n=e.isArrayTexture?TU(e,Ee(_a,hd("gl_ViewID_OVR"))).renderOutput(t.toneMapping,t.currentColorSpace):as(e,_a).renderOutput(t.toneMapping,t.currentColorSpace);return cy.set(e,i),n}updateBefore(e){const t=e.getNodeBuilderState();for(const i of t.updateBeforeNodes)this.getNodeFrameForRender(e).updateBeforeNode(i)}updateAfter(e){const t=e.getNodeBuilderState();for(const i of t.updateAfterNodes)this.getNodeFrameForRender(e).updateAfterNode(i)}updateForCompute(e){const t=this.getNodeFrame(),i=this.getForCompute(e);for(const n of i.updateNodes)t.updateNode(n)}updateForRender(e){const t=this.getNodeFrameForRender(e),i=e.getNodeBuilderState();for(const n of i.updateNodes)t.updateNode(n)}needsRefresh(e){const t=this.getNodeFrameForRender(e);return e.getMonitor().needsRefresh(e,t)}dispose(){super.dispose(),this.nodeFrame=new ay,this.nodeBuilderCache=new Map,this.cacheLib={}}}const tp=new Ds;class Hh{constructor(e=null){this.version=0,this.clipIntersection=null,this.cacheKey="",this.shadowPass=!1,this.viewNormalMatrix=new We,this.clippingGroupContexts=new WeakMap,this.intersectionPlanes=[],this.unionPlanes=[],this.parentVersion=null,e!==null&&(this.viewNormalMatrix=e.viewNormalMatrix,this.clippingGroupContexts=e.clippingGroupContexts,this.shadowPass=e.shadowPass,this.viewMatrix=e.viewMatrix)}projectPlanes(e,t,i){const n=e.length;for(let s=0;s<n;s++){tp.copy(e[s]).applyMatrix4(this.viewMatrix,this.viewNormalMatrix);const o=t[i+s],a=tp.normal;o.x=-a.x,o.y=-a.y,o.z=-a.z,o.w=tp.constant}}updateGlobal(e,t){this.shadowPass=e.overrideMaterial!==null&&e.overrideMaterial.isShadowPassMaterial,this.viewMatrix=t.matrixWorldInverse,this.viewNormalMatrix.getNormalMatrix(this.viewMatrix)}update(e,t){let i=!1;e.version!==this.parentVersion&&(this.intersectionPlanes=Array.from(e.intersectionPlanes),this.unionPlanes=Array.from(e.unionPlanes),this.parentVersion=e.version),this.clipIntersection!==t.clipIntersection&&(this.clipIntersection=t.clipIntersection,this.clipIntersection?this.unionPlanes.length=e.unionPlanes.length:this.intersectionPlanes.length=e.intersectionPlanes.length);const n=t.clippingPlanes,s=n.length;let o,a;if(this.clipIntersection?(o=this.intersectionPlanes,a=e.intersectionPlanes.length):(o=this.unionPlanes,a=e.unionPlanes.length),o.length!==a+s){o.length=a+s;for(let l=0;l<s;l++)o[a+l]=new je;i=!0}this.projectPlanes(n,o,a),i&&(this.version++,this.cacheKey=`${this.intersectionPlanes.length}:${this.unionPlanes.length}`)}getGroupContext(e){if(this.shadowPass&&!e.clipShadows)return this;let t=this.clippingGroupContexts.get(e);return t===void 0&&(t=new Hh(this),this.clippingGroupContexts.set(e,t)),t.update(this,e),t}get unionClippingCount(){return this.unionPlanes.length}}class NB{constructor(e,t){this.bundleGroup=e,this.camera=t}}const Bl=[];class PB{constructor(){this.bundles=new hs}get(e,t){const i=this.bundles;Bl[0]=e,Bl[1]=t;let n=i.get(Bl);return n===void 0&&(n=new NB(e,t),i.set(Bl,n)),Bl.length=0,n}dispose(){this.bundles=new hs}}class DB{constructor(){this.lightNodes=new WeakMap,this.materialNodes=new Map,this.toneMappingNodes=new Map}fromMaterial(e){if(e.isNodeMaterial)return e;let t=null;const i=this.getMaterialNodeClass(e.type);if(i!==null){t=new i;for(const n in e)t[n]=e[n]}return t}addToneMapping(e,t){this.addType(e,t,this.toneMappingNodes)}getToneMappingFunction(e){return this.toneMappingNodes.get(e)||null}getMaterialNodeClass(e){return this.materialNodes.get(e)||null}addMaterial(e,t){this.addType(e,t,this.materialNodes)}getLightNodeClass(e){return this.lightNodes.get(e)||null}addLight(e,t){this.addClass(e,t,this.lightNodes)}addType(e,t,i){if(i.has(t)){console.warn(`Redefinition of node ${t}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t=="function"||typeof t=="object")throw new Error(`Base class ${t} is not a class.`);i.set(t,e)}addClass(e,t,i){if(i.has(t)){console.warn(`Redefinition of node ${t.name}`);return}if(typeof e!="function")throw new Error(`Node class ${e.name} is not a class.`);if(typeof t!="function")throw new Error(`Base class ${t.name} is not a class.`);i.set(t,e)}}const LB=new TS,Ol=[];class IB extends hs{constructor(){super()}createNode(e=[]){return new TS().setLights(e)}getNode(e,t){if(e.isQuadMesh)return LB;Ol[0]=e,Ol[1]=t;let i=this.get(Ol);return i===void 0&&(i=this.createNode(),this.set(Ol,i)),Ol.length=0,i}}class ql extends go{constructor(e=1,t=1,i={}){super(e,t,i),this.isXRRenderTarget=!0,this._hasExternalTextures=!1,this._autoAllocateDepthBuffer=!0,this._isOpaqueFramebuffer=!1}copy(e){return super.copy(e),this._hasExternalTextures=e._hasExternalTextures,this._autoAllocateDepthBuffer=e._autoAllocateDepthBuffer,this._isOpaqueFramebuffer=e._isOpaqueFramebuffer,this}}const uy=new B,hy=new B;class FB extends Sr{constructor(e,t=!1){super(),this.enabled=!1,this.isPresenting=!1,this.cameraAutoUpdate=!0,this._renderer=e,this._cameraL=new Ei,this._cameraL.viewport=new je,this._cameraR=new Ei,this._cameraR.viewport=new je,this._cameras=[this._cameraL,this._cameraR],this._cameraXR=new Bb,this._currentDepthNear=null,this._currentDepthFar=null,this._controllers=[],this._controllerInputSources=[],this._xrRenderTarget=null,this._layers=[],this._supportsLayers=!1,this._supportsGlBinding=typeof XRWebGLBinding<"u",this._frameBufferTargets=null,this._createXRLayer=GB.bind(this),this._gl=null,this._currentAnimationContext=null,this._currentAnimationLoop=null,this._currentPixelRatio=null,this._currentSize=new Je,this._onSessionEvent=OB.bind(this),this._onSessionEnd=kB.bind(this),this._onInputSourcesChange=zB.bind(this),this._onAnimationFrame=VB.bind(this),this._referenceSpace=null,this._referenceSpaceType="local-floor",this._customReferenceSpace=null,this._framebufferScaleFactor=1,this._foveation=1,this._session=null,this._glBaseLayer=null,this._glBinding=null,this._glProjLayer=null,this._xrFrame=null,this._useLayers=this._supportsGlBinding&&"createProjectionLayer"in XRWebGLBinding.prototype,this._useMultiviewIfPossible=t,this._useMultiview=!1}getController(e){return this._getController(e).getTargetRaySpace()}getControllerGrip(e){return this._getController(e).getGripSpace()}getHand(e){return this._getController(e).getHandSpace()}getFoveation(){if(!(this._glProjLayer===null&&this._glBaseLayer===null))return this._foveation}setFoveation(e){this._foveation=e,this._glProjLayer!==null&&(this._glProjLayer.fixedFoveation=e),this._glBaseLayer!==null&&this._glBaseLayer.fixedFoveation!==void 0&&(this._glBaseLayer.fixedFoveation=e)}getFramebufferScaleFactor(){return this._framebufferScaleFactor}setFramebufferScaleFactor(e){this._framebufferScaleFactor=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change framebuffer scale while presenting.")}getReferenceSpaceType(){return this._referenceSpaceType}setReferenceSpaceType(e){this._referenceSpaceType=e,this.isPresenting===!0&&console.warn("THREE.XRManager: Cannot change reference space type while presenting.")}getReferenceSpace(){return this._customReferenceSpace||this._referenceSpace}setReferenceSpace(e){this._customReferenceSpace=e}getCamera(){return this._cameraXR}getEnvironmentBlendMode(){if(this._session!==null)return this._session.environmentBlendMode}getFrame(){return this._xrFrame}useMultiview(){return this._useMultiview}createQuadLayer(e,t,i,n,s,o,a,l={}){const c=new Wc(e,t),u=new ql(s,o,{format:Gt,type:zt,depthTexture:new Xn(s,o,l.stencil?mn:Mt,void 0,void 0,void 0,void 0,void 0,void 0,l.stencil?_n:gn),stencilBuffer:l.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});u._autoAllocateDepthBuffer=!0;const h=new ns({color:16777215,side:ji});h.map=u.texture,h.map.offset.y=1,h.map.repeat.y=-1;const d=new fi(c,h);d.position.copy(i),d.quaternion.copy(n);const f={type:"quad",width:e,height:t,translation:i,quaternion:n,pixelwidth:s,pixelheight:o,plane:d,material:h,rendercall:a,renderTarget:u};if(this._layers.push(f),this._session!==null){f.plane.material=new ns({color:16777215,side:ji}),f.plane.material.blending=ua,f.plane.material.blendEquation=wi,f.plane.material.blendSrc=Ps,f.plane.material.blendDst=Ps,f.xrlayer=this._createXRLayer(f);const p=this._session.renderState.layers;p.unshift(f.xrlayer),this._session.updateRenderState({layers:p})}else u.isXRRenderTarget=!1;return d}createCylinderLayer(e,t,i,n,s,o,a,l,c={}){const u=new Dm(e,e,e*t/i,64,64,!0,Math.PI-t/2,t),h=new ql(o,a,{format:Gt,type:zt,depthTexture:new Xn(o,a,c.stencil?mn:Mt,void 0,void 0,void 0,void 0,void 0,void 0,c.stencil?_n:gn),stencilBuffer:c.stencil,resolveDepthBuffer:!1,resolveStencilBuffer:!1});h._autoAllocateDepthBuffer=!0;const d=new ns({color:16777215,side:Ct});d.map=h.texture,d.map.offset.y=1,d.map.repeat.y=-1;const f=new fi(u,d);f.position.copy(n),f.quaternion.copy(s);const p={type:"cylinder",radius:e,centralAngle:t,aspectratio:i,translation:n,quaternion:s,pixelwidth:o,pixelheight:a,plane:f,material:d,rendercall:l,renderTarget:h};if(this._layers.push(p),this._session!==null){p.plane.material=new ns({color:16777215,side:Ct}),p.plane.material.blending=ua,p.plane.material.blendEquation=wi,p.plane.material.blendSrc=Ps,p.plane.material.blendDst=Ps,p.xrlayer=this._createXRLayer(p);const _=this._session.renderState.layers;_.unshift(p.xrlayer),this._session.updateRenderState({layers:_})}else h.isXRRenderTarget=!1;return f}renderLayers(){const e=new B,t=new nl,i=this._renderer,n=this.isPresenting,s=i.getOutputRenderTarget(),o=i._frameBufferTarget;this.isPresenting=!1;const a=new Je;i.getSize(a);const l=i._quad;for(const c of this._layers)if(c.renderTarget.isXRRenderTarget=this._session!==null,c.renderTarget._hasExternalTextures=c.renderTarget.isXRRenderTarget,c.renderTarget.isXRRenderTarget&&this._supportsLayers){c.xrlayer.transform=new XRRigidTransform(c.plane.getWorldPosition(e),c.plane.getWorldQuaternion(t));const u=this._glBinding.getSubImage(c.xrlayer,this._xrFrame);i.backend.setXRRenderTargetTextures(c.renderTarget,u.colorTexture,void 0),i._setXRLayerSize(c.renderTarget.width,c.renderTarget.height),i.setOutputRenderTarget(c.renderTarget),i.setRenderTarget(null),i._frameBufferTarget=null,this._frameBufferTargets||(this._frameBufferTargets=new WeakMap);const{frameBufferTarget:h,quad:d}=this._frameBufferTargets.get(c.renderTarget)||{frameBufferTarget:null,quad:null};h?(i._frameBufferTarget=h,i._quad=d):(i._quad=new yS(new pl),this._frameBufferTargets.set(c.renderTarget,{frameBufferTarget:i._getFrameBufferTarget(),quad:i._quad})),c.rendercall(),i._frameBufferTarget=null}else i.setRenderTarget(c.renderTarget),c.rendercall();i.setRenderTarget(null),i.setOutputRenderTarget(s),i._frameBufferTarget=o,i._setXRLayerSize(a.x,a.y),i._quad=l,this.isPresenting=n}getSession(){return this._session}async setSession(e){const t=this._renderer,i=t.backend;this._gl=t.getContext();const n=this._gl,s=n.getContextAttributes();if(this._session=e,e!==null){if(i.isWebGPUBackend===!0)throw new Error('THREE.XRManager: XR is currently not supported with a WebGPU backend. Use WebGL by passing "{ forceWebGL: true }" to the constructor of the renderer.');if(e.addEventListener("select",this._onSessionEvent),e.addEventListener("selectstart",this._onSessionEvent),e.addEventListener("selectend",this._onSessionEvent),e.addEventListener("squeeze",this._onSessionEvent),e.addEventListener("squeezestart",this._onSessionEvent),e.addEventListener("squeezeend",this._onSessionEvent),e.addEventListener("end",this._onSessionEnd),e.addEventListener("inputsourceschange",this._onInputSourcesChange),await i.makeXRCompatible(),this._currentPixelRatio=t.getPixelRatio(),t.getSize(this._currentSize),this._currentAnimationContext=t._animation.getContext(),this._currentAnimationLoop=t._animation.getAnimationLoop(),t._animation.stop(),this._supportsGlBinding){const o=new XRWebGLBinding(e,n);this._glBinding=o}if(this._useLayers===!0){let o=null,a=null,l=null;t.depth&&(l=t.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,o=t.stencil?_n:gn,a=t.stencil?mn:Mt);const c={colorFormat:n.RGBA8,depthFormat:l,scaleFactor:this._framebufferScaleFactor,clearOnAccess:!1};this._useMultiviewIfPossible&&t.hasFeature("OVR_multiview2")&&(c.textureType="texture-array",this._useMultiview=!0);const u=this._glBinding.createProjectionLayer(c),h=[u];this._glProjLayer=u,t.setPixelRatio(1),t._setXRLayerSize(u.textureWidth,u.textureHeight);const d=this._useMultiview?2:1,f=new Xn(u.textureWidth,u.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,o,d);if(this._xrRenderTarget=new ql(u.textureWidth,u.textureHeight,{format:Gt,type:zt,colorSpace:t.outputColorSpace,depthTexture:f,stencilBuffer:t.stencil,samples:s.antialias?4:0,resolveDepthBuffer:u.ignoreDepthValues===!1,resolveStencilBuffer:u.ignoreDepthValues===!1,depth:this._useMultiview?2:1,multiview:this._useMultiview}),this._xrRenderTarget._hasExternalTextures=!0,this._xrRenderTarget.depth=this._useMultiview?2:1,this._supportsLayers=e.enabledFeatures.includes("layers"),this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType()),this._supportsLayers)for(const p of this._layers)p.plane.material=new ns({color:16777215,side:p.type==="cylinder"?Ct:ji}),p.plane.material.blending=ua,p.plane.material.blendEquation=wi,p.plane.material.blendSrc=Ps,p.plane.material.blendDst=Ps,p.xrlayer=this._createXRLayer(p),h.unshift(p.xrlayer);e.updateRenderState({layers:h})}else{const o={antialias:t.samples>0,alpha:!0,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:this.getFramebufferScaleFactor()},a=new XRWebGLLayer(e,n,o);this._glBaseLayer=a,e.updateRenderState({baseLayer:a}),t.setPixelRatio(1),t._setXRLayerSize(a.framebufferWidth,a.framebufferHeight),this._xrRenderTarget=new ql(a.framebufferWidth,a.framebufferHeight,{format:Gt,type:zt,colorSpace:t.outputColorSpace,stencilBuffer:t.stencil,resolveDepthBuffer:a.ignoreDepthValues===!1,resolveStencilBuffer:a.ignoreDepthValues===!1}),this._xrRenderTarget._isOpaqueFramebuffer=!0,this._referenceSpace=await e.requestReferenceSpace(this.getReferenceSpaceType())}this.setFoveation(this.getFoveation()),t._animation.setAnimationLoop(this._onAnimationFrame),t._animation.setContext(e),t._animation.start(),this.isPresenting=!0,this.dispatchEvent({type:"sessionstart"})}}updateCamera(e){const t=this._session;if(t===null)return;const i=e.near,n=e.far,s=this._cameraXR,o=this._cameraL,a=this._cameraR;s.near=a.near=o.near=i,s.far=a.far=o.far=n,s.isMultiViewCamera=this._useMultiview,(this._currentDepthNear!==s.near||this._currentDepthFar!==s.far)&&(t.updateRenderState({depthNear:s.near,depthFar:s.far}),this._currentDepthNear=s.near,this._currentDepthFar=s.far),s.layers.mask=e.layers.mask|6,o.layers.mask=s.layers.mask&3,a.layers.mask=s.layers.mask&5;const l=e.parent,c=s.cameras;dy(s,l);for(let u=0;u<c.length;u++)dy(c[u],l);c.length===2?UB(s,o,a):s.projectionMatrix.copy(o.projectionMatrix),BB(e,s,l)}_getController(e){let t=this._controllers[e];return t===void 0&&(t=new yh,this._controllers[e]=t),t}}function UB(r,e,t){uy.setFromMatrixPosition(e.matrixWorld),hy.setFromMatrixPosition(t.matrixWorld);const i=uy.distanceTo(hy),n=e.projectionMatrix.elements,s=t.projectionMatrix.elements,o=n[14]/(n[10]-1),a=n[14]/(n[10]+1),l=(n[9]+1)/n[5],c=(n[9]-1)/n[5],u=(n[8]-1)/n[0],h=(s[8]+1)/s[0],d=o*u,f=o*h,p=i/(-u+h),_=p*-u;if(e.matrixWorld.decompose(r.position,r.quaternion,r.scale),r.translateX(_),r.translateZ(p),r.matrixWorld.compose(r.position,r.quaternion,r.scale),r.matrixWorldInverse.copy(r.matrixWorld).invert(),n[10]===-1)r.projectionMatrix.copy(e.projectionMatrix),r.projectionMatrixInverse.copy(e.projectionMatrixInverse);else{const g=o+p,m=a+p,b=d-_,y=f+(i-_),x=l*a/m*g,S=c*a/m*g;r.projectionMatrix.makePerspective(b,y,x,S,g,m),r.projectionMatrixInverse.copy(r.projectionMatrix).invert()}}function dy(r,e){e===null?r.matrixWorld.copy(r.matrix):r.matrixWorld.multiplyMatrices(e.matrixWorld,r.matrix),r.matrixWorldInverse.copy(r.matrixWorld).invert()}function BB(r,e,t){t===null?r.matrix.copy(e.matrixWorld):(r.matrix.copy(t.matrixWorld),r.matrix.invert(),r.matrix.multiply(e.matrixWorld)),r.matrix.decompose(r.position,r.quaternion,r.scale),r.updateMatrixWorld(!0),r.projectionMatrix.copy(e.projectionMatrix),r.projectionMatrixInverse.copy(e.projectionMatrixInverse),r.isPerspectiveCamera&&(r.fov=$a*2*Math.atan(1/r.projectionMatrix.elements[5]),r.zoom=1)}function OB(r){const e=this._controllerInputSources.indexOf(r.inputSource);if(e===-1)return;const t=this._controllers[e];if(t!==void 0){const i=this.getReferenceSpace();t.update(r.inputSource,r.frame,i),t.dispatchEvent({type:r.type,data:r.inputSource})}}function kB(){const r=this._session,e=this._renderer;r.removeEventListener("select",this._onSessionEvent),r.removeEventListener("selectstart",this._onSessionEvent),r.removeEventListener("selectend",this._onSessionEvent),r.removeEventListener("squeeze",this._onSessionEvent),r.removeEventListener("squeezestart",this._onSessionEvent),r.removeEventListener("squeezeend",this._onSessionEvent),r.removeEventListener("end",this._onSessionEnd),r.removeEventListener("inputsourceschange",this._onInputSourcesChange);for(let t=0;t<this._controllers.length;t++){const i=this._controllerInputSources[t];i!==null&&(this._controllerInputSources[t]=null,this._controllers[t].disconnect(i))}if(this._currentDepthNear=null,this._currentDepthFar=null,e._resetXRState(),this._session=null,this._xrRenderTarget=null,this._supportsLayers===!0)for(const t of this._layers)t.renderTarget=new ql(t.pixelwidth,t.pixelheight,{format:Gt,type:zt,depthTexture:new Xn(t.pixelwidth,t.pixelheight,t.stencilBuffer?mn:Mt,void 0,void 0,void 0,void 0,void 0,void 0,t.stencilBuffer?_n:gn),stencilBuffer:t.stencilBuffer,resolveDepthBuffer:!1,resolveStencilBuffer:!1}),t.renderTarget.isXRRenderTarget=!1,t.plane.material=t.material,t.material.map=t.renderTarget.texture,t.material.map.offset.y=1,t.material.map.repeat.y=-1,delete t.xrlayer;this.isPresenting=!1,this._useMultiview=!1,e._animation.stop(),e._animation.setAnimationLoop(this._currentAnimationLoop),e._animation.setContext(this._currentAnimationContext),e._animation.start(),e.setPixelRatio(this._currentPixelRatio),e.setSize(this._currentSize.width,this._currentSize.height,!1),this.dispatchEvent({type:"sessionend"})}function zB(r){const e=this._controllers,t=this._controllerInputSources;for(let i=0;i<r.removed.length;i++){const n=r.removed[i],s=t.indexOf(n);s>=0&&(t[s]=null,e[s].disconnect(n))}for(let i=0;i<r.added.length;i++){const n=r.added[i];let s=t.indexOf(n);if(s===-1){for(let a=0;a<e.length;a++)if(a>=t.length){t.push(n),s=a;break}else if(t[a]===null){t[a]=n,s=a;break}if(s===-1)break}const o=e[s];o&&o.connect(n)}}function GB(r){return r.type==="quad"?this._glBinding.createQuadLayer({transform:new XRRigidTransform(r.translation,r.quaternion),width:r.width/2,height:r.height/2,space:this._referenceSpace,viewPixelWidth:r.pixelwidth,viewPixelHeight:r.pixelheight,clearOnAccess:!1}):this._glBinding.createCylinderLayer({transform:new XRRigidTransform(r.translation,r.quaternion),radius:r.radius,centralAngle:r.centralAngle,aspectRatio:r.aspectRatio,space:this._referenceSpace,viewPixelWidth:r.pixelwidth,viewPixelHeight:r.pixelheight,clearOnAccess:!1})}function VB(r,e){if(e===void 0)return;const t=this._cameraXR,i=this._renderer,n=i.backend,s=this._glBaseLayer,o=this.getReferenceSpace(),a=e.getViewerPose(o);if(this._xrFrame=e,a!==null){const l=a.views;this._glBaseLayer!==null&&n.setXRTarget(s.framebuffer);let c=!1;l.length!==t.cameras.length&&(t.cameras.length=0,c=!0);for(let u=0;u<l.length;u++){const h=l[u];let d;if(this._useLayers===!0){const p=this._glBinding.getViewSubImage(this._glProjLayer,h);d=p.viewport,u===0&&n.setXRRenderTargetTextures(this._xrRenderTarget,p.colorTexture,this._glProjLayer.ignoreDepthValues&&!this._useMultiview?void 0:p.depthStencilTexture)}else d=s.getViewport(h);let f=this._cameras[u];f===void 0&&(f=new Ei,f.layers.enable(u),f.viewport=new je,this._cameras[u]=f),f.matrix.fromArray(h.transform.matrix),f.matrix.decompose(f.position,f.quaternion,f.scale),f.projectionMatrix.fromArray(h.projectionMatrix),f.projectionMatrixInverse.copy(f.projectionMatrix).invert(),f.viewport.set(d.x,d.y,d.width,d.height),u===0&&(t.matrix.copy(f.matrix),t.matrix.decompose(t.position,t.quaternion,t.scale)),c===!0&&t.cameras.push(f)}i.setOutputRenderTarget(this._xrRenderTarget)}for(let l=0;l<this._controllers.length;l++){const c=this._controllerInputSources[l],u=this._controllers[l];c!==null&&u!==void 0&&u.update(c,e,o)}this._currentAnimationLoop&&this._currentAnimationLoop(r,e),e.detectedPlanes&&this.dispatchEvent({type:"planesdetected",data:e}),this._xrFrame=null}const fy=new td,uh=new Je,ip=new je,np=new id,sp=new Pm,hh=new It,lr=new je;class HB{constructor(e,t={}){this.isRenderer=!0;const{logarithmicDepthBuffer:i=!1,alpha:n=!0,depth:s=!0,stencil:o=!1,antialias:a=!1,samples:l=0,getFallback:c=null,colorBufferType:u=pn,multiview:h=!1}=t;this.domElement=e.getDomElement(),this.backend=e,this.samples=l||a===!0?4:0,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.alpha=n,this.logarithmicDepthBuffer=i,this.outputColorSpace=cn,this.toneMapping=Ki,this.toneMappingExposure=1,this.sortObjects=!0,this.depth=s,this.stencil=o,this.info=new QP,this.overrideNodes={modelViewMatrix:null,modelNormalViewMatrix:null},this.library=new DB,this.lighting=new IB,this._getFallback=c,this._pixelRatio=1,this._width=this.domElement.width,this._height=this.domElement.height,this._viewport=new je(0,0,this._width,this._height),this._scissor=new je(0,0,this._width,this._height),this._scissorTest=!1,this._attributes=null,this._geometries=null,this._nodes=null,this._animation=null,this._bindings=null,this._objects=null,this._pipelines=null,this._bundles=null,this._renderLists=null,this._renderContexts=null,this._textures=null,this._background=null,this._quad=new yS(new pl),this._quad.material.name="Renderer_output",this._currentRenderContext=null,this._opaqueSort=null,this._transparentSort=null,this._frameBufferTarget=null;const d=this.alpha===!0?0:1;this._clearColor=new Zm(0,0,0,d),this._clearDepth=1,this._clearStencil=0,this._renderTarget=null,this._activeCubeFace=0,this._activeMipmapLevel=0,this._outputRenderTarget=null,this._mrt=null,this._renderObjectFunction=null,this._currentRenderObjectFunction=null,this._currentRenderBundle=null,this._handleObjectFunction=this._renderObjectDirect,this._isDeviceLost=!1,this.onDeviceLost=this._onDeviceLost,this._colorBufferType=u,this._initialized=!1,this._initPromise=null,this._compilationPromises=null,this.transparent=!0,this.opaque=!0,this.shadowMap={enabled:!1,type:im},this.xr=new FB(this,h),this.debug={checkShaderErrors:!0,onShaderError:null,getShaderAsync:async(f,p,_)=>{await this.compileAsync(f,p);const g=this._renderLists.get(f,p),m=this._renderContexts.get(f,p,this._renderTarget),b=f.overrideMaterial||_.material,y=this._objects.get(_,b,f,p,g.lightsNode,m,m.clippingContext),{fragmentShader:x,vertexShader:S}=y.getNodeBuilderState();return{fragmentShader:x,vertexShader:S}}}}async init(){if(this._initialized)throw new Error("Renderer: Backend has already been initialized.");return this._initPromise!==null?this._initPromise:(this._initPromise=new Promise(async(e,t)=>{let i=this.backend;try{await i.init(this)}catch(n){if(this._getFallback!==null)try{this.backend=i=this._getFallback(n),await i.init(this)}catch(s){t(s);return}else{t(n);return}}this._nodes=new CB(this,i),this._animation=new BP(this._nodes,this.info),this._attributes=new KP(i),this._background=new KU(this,this._nodes),this._geometries=new ZP(this._attributes,this.info),this._textures=new fD(this,i,this.info),this._pipelines=new iD(i,this._nodes),this._bindings=new nD(i,this._nodes,this._textures,this._attributes,this._pipelines,this.info),this._objects=new qP(this,this._nodes,this._geometries,this._pipelines,this._bindings,this.info),this._renderLists=new oD(this.lighting),this._bundles=new PB,this._renderContexts=new hD,this._animation.start(),this._initialized=!0,e(this)}),this._initPromise)}get coordinateSystem(){return this.backend.coordinateSystem}async compileAsync(e,t,i=null){if(this._isDeviceLost===!0)return;this._initialized===!1&&await this.init();const n=this._nodes.nodeFrame,s=n.renderId,o=this._currentRenderContext,a=this._currentRenderObjectFunction,l=this._compilationPromises,c=e.isScene===!0?e:fy;i===null&&(i=e);const u=this._renderTarget,h=this._renderContexts.get(i,t,u),d=this._activeMipmapLevel,f=[];this._currentRenderContext=h,this._currentRenderObjectFunction=this.renderObject,this._handleObjectFunction=this._createObjectPipeline,this._compilationPromises=f,n.renderId++,n.update(),h.depth=this.depth,h.stencil=this.stencil,h.clippingContext||(h.clippingContext=new Hh),h.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,u);const p=this._renderLists.get(e,t);if(p.begin(),this._projectObject(e,t,0,p,h.clippingContext),i!==e&&i.traverseVisible(function(y){y.isLight&&y.layers.test(t.layers)&&p.pushLight(y)}),p.finish(),u!==null){this._textures.updateRenderTarget(u,d);const y=this._textures.get(u);h.textures=y.textures,h.depthTexture=y.depthTexture}else h.textures=null,h.depthTexture=null;this._background.update(c,p,h);const _=p.opaque,g=p.transparent,m=p.transparentDoublePass,b=p.lightsNode;this.opaque===!0&&_.length>0&&this._renderObjects(_,t,c,b),this.transparent===!0&&g.length>0&&this._renderTransparents(g,m,t,c,b),n.renderId=s,this._currentRenderContext=o,this._currentRenderObjectFunction=a,this._compilationPromises=l,this._handleObjectFunction=this._renderObjectDirect,await Promise.all(f)}async renderAsync(e,t){this._initialized===!1&&await this.init(),this._renderScene(e,t)}async waitForGPU(){await this.backend.waitForGPU()}set highPrecision(e){e===!0?(this.overrideNodes.modelViewMatrix=Dx,this.overrideNodes.modelNormalViewMatrix=Lx):this.highPrecision&&(this.overrideNodes.modelViewMatrix=null,this.overrideNodes.modelNormalViewMatrix=null)}get highPrecision(){return this.overrideNodes.modelViewMatrix===Dx&&this.overrideNodes.modelNormalViewMatrix===Lx}setMRT(e){return this._mrt=e,this}getMRT(){return this._mrt}getColorBufferType(){return this._colorBufferType}_onDeviceLost(e){let t=`THREE.WebGPURenderer: ${e.api} Device Lost:

Message: ${e.message}`;e.reason&&(t+=`
Reason: ${e.reason}`),console.error(t),this._isDeviceLost=!0}_renderBundle(e,t,i){const{bundleGroup:n,camera:s,renderList:o}=e,a=this._currentRenderContext,l=this._bundles.get(n,s),c=this.backend.get(l);c.renderContexts===void 0&&(c.renderContexts=new Set);const u=n.version!==c.version,h=c.renderContexts.has(a)===!1||u;if(c.renderContexts.add(a),h){this.backend.beginBundle(a),(c.renderObjects===void 0||u)&&(c.renderObjects=[]),this._currentRenderBundle=l;const{transparentDoublePass:d,transparent:f,opaque:p}=o;this.opaque===!0&&p.length>0&&this._renderObjects(p,s,t,i),this.transparent===!0&&f.length>0&&this._renderTransparents(f,d,s,t,i),this._currentRenderBundle=null,this.backend.finishBundle(a,l),c.version=n.version}else{const{renderObjects:d}=c;for(let f=0,p=d.length;f<p;f++){const _=d[f];this._nodes.needsRefresh(_)&&(this._nodes.updateBefore(_),this._nodes.updateForRender(_),this._bindings.updateForRender(_),this._nodes.updateAfter(_))}}this.backend.addBundle(a,l)}render(e,t){if(this._initialized===!1)return console.warn("THREE.Renderer: .render() called before the backend is initialized. Try using .renderAsync() instead."),this.renderAsync(e,t);this._renderScene(e,t)}_getFrameBufferTarget(){const{currentToneMapping:e,currentColorSpace:t}=this,i=e!==Ki,n=t!==Be.workingColorSpace;if(i===!1&&n===!1)return null;const{width:s,height:o}=this.getDrawingBufferSize(uh),{depth:a,stencil:l}=this;let c=this._frameBufferTarget;c===null&&(c=new go(s,o,{depthBuffer:a,stencilBuffer:l,type:this._colorBufferType,format:Gt,colorSpace:Be.workingColorSpace,generateMipmaps:!1,minFilter:ni,magFilter:ni,samples:this.samples}),c.isPostProcessingRenderTarget=!0,this._frameBufferTarget=c);const u=this.getOutputRenderTarget();return c.depthBuffer=a,c.stencilBuffer=l,u!==null?c.setSize(u.width,u.height,u.depth):c.setSize(s,o,1),c.viewport.copy(this._viewport),c.scissor.copy(this._scissor),c.viewport.multiplyScalar(this._pixelRatio),c.scissor.multiplyScalar(this._pixelRatio),c.scissorTest=this._scissorTest,c.multiview=u!==null?u.multiview:!1,c.resolveDepthBuffer=u!==null?u.resolveDepthBuffer:!0,c._autoAllocateDepthBuffer=u!==null?u._autoAllocateDepthBuffer:!1,c}_renderScene(e,t,i=!0){if(this._isDeviceLost===!0)return;const n=i?this._getFrameBufferTarget():null,s=this._nodes.nodeFrame,o=s.renderId,a=this._currentRenderContext,l=this._currentRenderObjectFunction,c=e.isScene===!0?e:fy,u=this._renderTarget||this._outputRenderTarget,h=this._activeCubeFace,d=this._activeMipmapLevel;let f;n!==null?(f=n,this.setRenderTarget(f)):f=u;const p=this._renderContexts.get(e,t,f);this._currentRenderContext=p,this._currentRenderObjectFunction=this._renderObjectFunction||this.renderObject,this.info.calls++,this.info.render.calls++,this.info.render.frameCalls++,s.renderId=this.info.calls;const _=this.coordinateSystem,g=this.xr;if(t.coordinateSystem!==_&&g.isPresenting===!1&&(t.coordinateSystem=_,t.updateProjectionMatrix(),t.isArrayCamera))for(const U of t.cameras)U.coordinateSystem=_,U.updateProjectionMatrix();e.matrixWorldAutoUpdate===!0&&e.updateMatrixWorld(),t.parent===null&&t.matrixWorldAutoUpdate===!0&&t.updateMatrixWorld(),g.enabled===!0&&g.isPresenting===!0&&(g.cameraAutoUpdate===!0&&g.updateCamera(t),t=g.getCamera());let m=this._viewport,b=this._scissor,y=this._pixelRatio;f!==null&&(m=f.viewport,b=f.scissor,y=1),this.getDrawingBufferSize(uh),ip.set(0,0,uh.width,uh.height);const x=m.minDepth===void 0?0:m.minDepth,S=m.maxDepth===void 0?1:m.maxDepth;p.viewportValue.copy(m).multiplyScalar(y).floor(),p.viewportValue.width>>=d,p.viewportValue.height>>=d,p.viewportValue.minDepth=x,p.viewportValue.maxDepth=S,p.viewport=p.viewportValue.equals(ip)===!1,p.scissorValue.copy(b).multiplyScalar(y).floor(),p.scissor=this._scissorTest&&p.scissorValue.equals(ip)===!1,p.scissorValue.width>>=d,p.scissorValue.height>>=d,p.clippingContext||(p.clippingContext=new Hh),p.clippingContext.updateGlobal(c,t),c.onBeforeRender(this,e,t,f);const w=t.isArrayCamera?sp:np;t.isArrayCamera||(hh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),w.setFromProjectionMatrix(hh,t.coordinateSystem,t.reversedDepth));const M=this._renderLists.get(e,t);if(M.begin(),this._projectObject(e,t,0,M,p.clippingContext),M.finish(),this.sortObjects===!0&&M.sort(this._opaqueSort,this._transparentSort),f!==null){this._textures.updateRenderTarget(f,d);const U=this._textures.get(f);p.textures=U.textures,p.depthTexture=U.depthTexture,p.width=U.width,p.height=U.height,p.renderTarget=f,p.depth=f.depthBuffer,p.stencil=f.stencilBuffer}else p.textures=null,p.depthTexture=null,p.width=this.domElement.width,p.height=this.domElement.height,p.depth=this.depth,p.stencil=this.stencil;p.width>>=d,p.height>>=d,p.activeCubeFace=h,p.activeMipmapLevel=d,p.occlusionQueryCount=M.occlusionQueryCount,this._background.update(c,M,p),p.camera=t,this.backend.beginRender(p);const{bundles:R,lightsNode:T,transparentDoublePass:E,transparent:C,opaque:k}=M;return R.length>0&&this._renderBundles(R,c,T),this.opaque===!0&&k.length>0&&this._renderObjects(k,t,c,T),this.transparent===!0&&C.length>0&&this._renderTransparents(C,E,t,c,T),this.backend.finishRender(p),s.renderId=o,this._currentRenderContext=a,this._currentRenderObjectFunction=l,n!==null&&(this.setRenderTarget(u,h,d),this._renderOutput(f)),c.onAfterRender(this,e,t,f),p}_setXRLayerSize(e,t){this._width=e,this._height=t,this.setViewport(0,0,e,t)}_renderOutput(e){const t=this._quad;this._nodes.hasOutputChange(e.texture)&&(t.material.fragmentNode=this._nodes.getOutputNode(e.texture),t.material.needsUpdate=!0);const i=this.autoClear,n=this.xr.enabled;this.autoClear=!1,this.xr.enabled=!1,this._renderScene(t,t.camera,!1),this.autoClear=i,this.xr.enabled=n}getMaxAnisotropy(){return this.backend.getMaxAnisotropy()}getActiveCubeFace(){return this._activeCubeFace}getActiveMipmapLevel(){return this._activeMipmapLevel}async setAnimationLoop(e){this._initialized===!1&&await this.init(),this._animation.setAnimationLoop(e)}async getArrayBufferAsync(e){return await this.backend.getArrayBufferAsync(e)}getContext(){return this.backend.getContext()}getPixelRatio(){return this._pixelRatio}getDrawingBufferSize(e){return e.set(this._width*this._pixelRatio,this._height*this._pixelRatio).floor()}getSize(e){return e.set(this._width,this._height)}setPixelRatio(e=1){this._pixelRatio!==e&&(this._pixelRatio=e,this.setSize(this._width,this._height,!1))}setDrawingBufferSize(e,t,i){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this._pixelRatio=i,this.domElement.width=Math.floor(e*i),this.domElement.height=Math.floor(t*i),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setSize(e,t,i=!0){this.xr&&this.xr.isPresenting||(this._width=e,this._height=t,this.domElement.width=Math.floor(e*this._pixelRatio),this.domElement.height=Math.floor(t*this._pixelRatio),i===!0&&(this.domElement.style.width=e+"px",this.domElement.style.height=t+"px"),this.setViewport(0,0,e,t),this._initialized&&this.backend.updateSize())}setOpaqueSort(e){this._opaqueSort=e}setTransparentSort(e){this._transparentSort=e}getScissor(e){const t=this._scissor;return e.x=t.x,e.y=t.y,e.width=t.width,e.height=t.height,e}setScissor(e,t,i,n){const s=this._scissor;e.isVector4?s.copy(e):s.set(e,t,i,n)}getScissorTest(){return this._scissorTest}setScissorTest(e){this._scissorTest=e,this.backend.setScissorTest(e)}getViewport(e){return e.copy(this._viewport)}setViewport(e,t,i,n,s=0,o=1){const a=this._viewport;e.isVector4?a.copy(e):a.set(e,t,i,n),a.minDepth=s,a.maxDepth=o}getClearColor(e){return e.copy(this._clearColor)}setClearColor(e,t=1){this._clearColor.set(e),this._clearColor.a=t}getClearAlpha(){return this._clearColor.a}setClearAlpha(e){this._clearColor.a=e}getClearDepth(){return this._clearDepth}setClearDepth(e){this._clearDepth=e}getClearStencil(){return this._clearStencil}setClearStencil(e){this._clearStencil=e}isOccluded(e){const t=this._currentRenderContext;return t&&this.backend.isOccluded(t,e)}clear(e=!0,t=!0,i=!0){if(this._initialized===!1)return console.warn("THREE.Renderer: .clear() called before the backend is initialized. Try using .clearAsync() instead."),this.clearAsync(e,t,i);const n=this._renderTarget||this._getFrameBufferTarget();let s=null;if(n!==null){this._textures.updateRenderTarget(n);const o=this._textures.get(n);s=this._renderContexts.getForClear(n),s.textures=o.textures,s.depthTexture=o.depthTexture,s.width=o.width,s.height=o.height,s.renderTarget=n,s.depth=n.depthBuffer,s.stencil=n.stencilBuffer,s.clearColorValue=this.backend.getClearColor(),s.activeCubeFace=this.getActiveCubeFace(),s.activeMipmapLevel=this.getActiveMipmapLevel()}this.backend.clear(e,t,i,s),n!==null&&this._renderTarget===null&&this._renderOutput(n)}clearColor(){return this.clear(!0,!1,!1)}clearDepth(){return this.clear(!1,!0,!1)}clearStencil(){return this.clear(!1,!1,!0)}async clearAsync(e=!0,t=!0,i=!0){this._initialized===!1&&await this.init(),this.clear(e,t,i)}async clearColorAsync(){this.clearAsync(!0,!1,!1)}async clearDepthAsync(){this.clearAsync(!1,!0,!1)}async clearStencilAsync(){this.clearAsync(!1,!1,!0)}get currentToneMapping(){return this.isOutputTarget?this.toneMapping:Ki}get currentColorSpace(){return this.isOutputTarget?this.outputColorSpace:Be.workingColorSpace}get isOutputTarget(){return this._renderTarget===this._outputRenderTarget||this._renderTarget===null}dispose(){this.info.dispose(),this.backend.dispose(),this._animation.dispose(),this._objects.dispose(),this._pipelines.dispose(),this._nodes.dispose(),this._bindings.dispose(),this._renderLists.dispose(),this._renderContexts.dispose(),this._textures.dispose(),this._frameBufferTarget!==null&&this._frameBufferTarget.dispose(),Object.values(this.backend.timestampQueryPool).forEach(e=>{e!==null&&e.dispose()}),this.setRenderTarget(null),this.setAnimationLoop(null)}setRenderTarget(e,t=0,i=0){this._renderTarget=e,this._activeCubeFace=t,this._activeMipmapLevel=i}getRenderTarget(){return this._renderTarget}setOutputRenderTarget(e){this._outputRenderTarget=e}getOutputRenderTarget(){return this._outputRenderTarget}_resetXRState(){this.backend.setXRTarget(null),this.setOutputRenderTarget(null),this.setRenderTarget(null),this._frameBufferTarget.dispose(),this._frameBufferTarget=null}setRenderObjectFunction(e){this._renderObjectFunction=e}getRenderObjectFunction(){return this._renderObjectFunction}compute(e,t=null){if(this._isDeviceLost===!0)return;if(this._initialized===!1)return console.warn("THREE.Renderer: .compute() called before the backend is initialized. Try using .computeAsync() instead."),this.computeAsync(e);const i=this._nodes.nodeFrame,n=i.renderId;this.info.calls++,this.info.compute.calls++,this.info.compute.frameCalls++,i.renderId=this.info.calls;const s=this.backend,o=this._pipelines,a=this._bindings,l=this._nodes,c=Array.isArray(e)?e:[e];if(c[0]===void 0||c[0].isComputeNode!==!0)throw new Error("THREE.Renderer: .compute() expects a ComputeNode.");s.beginCompute(e);for(const u of c){if(o.has(u)===!1){const f=()=>{u.removeEventListener("dispose",f),o.delete(u),a.delete(u),l.delete(u)};u.addEventListener("dispose",f);const p=u.onInitFunction;p!==null&&p.call(u,{renderer:this})}l.updateForCompute(u),a.updateForCompute(u);const h=a.getForCompute(u),d=o.getForCompute(u,h);s.compute(e,u,h,d,t)}s.finishCompute(e),i.renderId=n}async computeAsync(e,t=null){this._initialized===!1&&await this.init(),this.compute(e,t)}async hasFeatureAsync(e){return this._initialized===!1&&await this.init(),this.backend.hasFeature(e)}async resolveTimestampsAsync(e="render"){return this._initialized===!1&&await this.init(),this.backend.resolveTimestampsAsync(e)}hasFeature(e){return this._initialized===!1?(console.warn("THREE.Renderer: .hasFeature() called before the backend is initialized. Try using .hasFeatureAsync() instead."),!1):this.backend.hasFeature(e)}hasInitialized(){return this._initialized}async initTextureAsync(e){this._initialized===!1&&await this.init(),this._textures.updateTexture(e)}initTexture(e){this._initialized===!1&&console.warn("THREE.Renderer: .initTexture() called before the backend is initialized. Try using .initTextureAsync() instead."),this._textures.updateTexture(e)}copyFramebufferToTexture(e,t=null){if(t!==null)if(t.isVector2)t=lr.set(t.x,t.y,e.image.width,e.image.height).floor();else if(t.isVector4)t=lr.copy(t).floor();else{console.error("THREE.Renderer.copyFramebufferToTexture: Invalid rectangle.");return}else t=lr.set(0,0,e.image.width,e.image.height);let i=this._currentRenderContext,n;i!==null?n=i.renderTarget:(n=this._renderTarget||this._getFrameBufferTarget(),n!==null&&(this._textures.updateRenderTarget(n),i=this._textures.get(n))),this._textures.updateTexture(e,{renderTarget:n}),this.backend.copyFramebufferToTexture(e,i,t)}copyTextureToTexture(e,t,i=null,n=null,s=0,o=0){this._textures.updateTexture(e),this._textures.updateTexture(t),this.backend.copyTextureToTexture(e,t,i,n,s,o)}async readRenderTargetPixelsAsync(e,t,i,n,s,o=0,a=0){return this.backend.copyTextureToBuffer(e.textures[o],t,i,n,s,a)}_projectObject(e,t,i,n,s){if(e.visible===!1)return;if(e.layers.test(t.layers)){if(e.isGroup)i=e.renderOrder,e.isClippingGroup&&e.enabled&&(s=s.getGroupContext(e));else if(e.isLOD)e.autoUpdate===!0&&e.update(t);else if(e.isLight)n.pushLight(e);else if(e.isSprite){const l=t.isArrayCamera?sp:np;if(!e.frustumCulled||l.intersectsSprite(e,t)){this.sortObjects===!0&&lr.setFromMatrixPosition(e.matrixWorld).applyMatrix4(hh);const{geometry:c,material:u}=e;u.visible&&n.push(e,c,u,i,lr.z,null,s)}}else if(e.isLineLoop)console.error("THREE.Renderer: Objects of type THREE.LineLoop are not supported. Please use THREE.Line or THREE.LineSegments.");else if(e.isMesh||e.isLine||e.isPoints){const l=t.isArrayCamera?sp:np;if(!e.frustumCulled||l.intersectsObject(e,t)){const{geometry:c,material:u}=e;if(this.sortObjects===!0&&(c.boundingSphere===null&&c.computeBoundingSphere(),lr.copy(c.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(hh)),Array.isArray(u)){const h=c.groups;for(let d=0,f=h.length;d<f;d++){const p=h[d],_=u[p.materialIndex];_&&_.visible&&n.push(e,c,_,i,lr.z,p,s)}}else u.visible&&n.push(e,c,u,i,lr.z,null,s)}}}if(e.isBundleGroup===!0&&this.backend.beginBundle!==void 0){const l=n;n=this._renderLists.get(e,t),n.begin(),l.pushBundle({bundleGroup:e,camera:t,renderList:n}),n.finish()}const a=e.children;for(let l=0,c=a.length;l<c;l++)this._projectObject(a[l],t,i,n,s)}_renderBundles(e,t,i){for(const n of e)this._renderBundle(n,t,i)}_renderTransparents(e,t,i,n,s){if(t.length>0){for(const{material:o}of t)o.side=Ct;this._renderObjects(t,i,n,s,"backSide");for(const{material:o}of t)o.side=ji;this._renderObjects(e,i,n,s);for(const{material:o}of t)o.side=Ai}else this._renderObjects(e,i,n,s)}_renderObjects(e,t,i,n,s=null){for(let o=0,a=e.length;o<a;o++){const{object:l,geometry:c,material:u,group:h,clippingContext:d}=e[o];this._currentRenderObjectFunction(l,i,t,c,u,h,n,d,s)}}renderObject(e,t,i,n,s,o,a,l=null,c=null){let u,h,d;if(e.onBeforeRender(this,t,i,n,s,o),s.allowOverride===!0&&t.overrideMaterial!==null){const f=t.overrideMaterial;s.positionNode&&s.positionNode.isNode&&(u=f.positionNode,f.positionNode=s.positionNode),f.alphaTest=s.alphaTest,f.alphaMap=s.alphaMap,f.transparent=s.transparent||s.transmission>0,f.isShadowPassMaterial&&(f.side=s.shadowSide===null?s.side:s.shadowSide,s.depthNode&&s.depthNode.isNode&&(d=f.depthNode,f.depthNode=s.depthNode),s.castShadowNode&&s.castShadowNode.isNode&&(h=f.colorNode,f.colorNode=s.castShadowNode),s.castShadowPositionNode&&s.castShadowPositionNode.isNode&&(u=f.positionNode,f.positionNode=s.castShadowPositionNode)),s=f}s.transparent===!0&&s.side===Ai&&s.forceSinglePass===!1?(s.side=Ct,this._handleObjectFunction(e,s,t,i,a,o,l,"backSide"),s.side=ji,this._handleObjectFunction(e,s,t,i,a,o,l,c),s.side=Ai):this._handleObjectFunction(e,s,t,i,a,o,l,c),u!==void 0&&(t.overrideMaterial.positionNode=u),d!==void 0&&(t.overrideMaterial.depthNode=d),h!==void 0&&(t.overrideMaterial.colorNode=h),e.onAfterRender(this,t,i,n,s,o)}_renderObjectDirect(e,t,i,n,s,o,a,l){const c=this._objects.get(e,t,i,n,s,this._currentRenderContext,a,l);c.drawRange=e.geometry.drawRange,c.group=o;const u=this._nodes.needsRefresh(c);u&&(this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c)),this._pipelines.updateForRender(c),this._currentRenderBundle!==null&&(this.backend.get(this._currentRenderBundle).renderObjects.push(c),c.bundle=this._currentRenderBundle.bundleGroup),this.backend.draw(c,this.info),u&&this._nodes.updateAfter(c)}_createObjectPipeline(e,t,i,n,s,o,a,l){const c=this._objects.get(e,t,i,n,s,this._currentRenderContext,a,l);c.drawRange=e.geometry.drawRange,c.group=o,this._nodes.updateBefore(c),this._geometries.updateForRender(c),this._nodes.updateForRender(c),this._bindings.updateForRender(c),this._pipelines.getForRender(c,this._compilationPromises),this._nodes.updateAfter(c)}get compile(){return this.compileAsync}}class RS{constructor(e=""){this.name=e,this.visibility=0}setVisibility(e){this.visibility|=e}clone(){return Object.assign(new this.constructor,this)}}function WB(r){return r+(hr-r%hr)%hr}class CS extends RS{constructor(e,t=null){super(e),this.isBuffer=!0,this.bytesPerElement=Float32Array.BYTES_PER_ELEMENT,this._buffer=t}get byteLength(){return WB(this._buffer.byteLength)}get buffer(){return this._buffer}update(){return!0}}class NS extends CS{constructor(e,t=null){super(e,t),this.isUniformBuffer=!0}}let $B=0;class PS extends NS{constructor(e,t){super("UniformBuffer_"+$B++,e?e.value:null),this.nodeUniform=e,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class XB extends NS{constructor(e){super(e),this.isUniformsGroup=!0,this._values=null,this.uniforms=[]}addUniform(e){return this.uniforms.push(e),this}removeUniform(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}get values(){return this._values===null&&(this._values=Array.from(this.buffer)),this._values}get buffer(){let e=this._buffer;if(e===null){const t=this.byteLength;e=new Float32Array(new ArrayBuffer(t)),this._buffer=e}return e}get byteLength(){const e=this.bytesPerElement;let t=0;for(let i=0,n=this.uniforms.length;i<n;i++){const s=this.uniforms[i],o=s.boundary,a=s.itemSize*e,l=t%hr,c=l%o,u=l+c;t+=c,u!==0&&hr-u<a&&(t+=hr-u),s.offset=t/e,t+=a}return Math.ceil(t/hr)*hr}update(){let e=!1;for(const t of this.uniforms)this.updateByType(t)===!0&&(e=!0);return e}updateByType(e){if(e.isNumberUniform)return this.updateNumber(e);if(e.isVector2Uniform)return this.updateVector2(e);if(e.isVector3Uniform)return this.updateVector3(e);if(e.isVector4Uniform)return this.updateVector4(e);if(e.isColorUniform)return this.updateColor(e);if(e.isMatrix3Uniform)return this.updateMatrix3(e);if(e.isMatrix4Uniform)return this.updateMatrix4(e);console.error("THREE.WebGPUUniformsGroup: Unsupported uniform type.",e)}updateNumber(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset,o=e.getType();if(i[s]!==n){const a=this._getBufferForType(o);a[s]=i[s]=n,t=!0}return t}updateVector2(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset,o=e.getType();if(i[s+0]!==n.x||i[s+1]!==n.y){const a=this._getBufferForType(o);a[s+0]=i[s+0]=n.x,a[s+1]=i[s+1]=n.y,t=!0}return t}updateVector3(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset,o=e.getType();if(i[s+0]!==n.x||i[s+1]!==n.y||i[s+2]!==n.z){const a=this._getBufferForType(o);a[s+0]=i[s+0]=n.x,a[s+1]=i[s+1]=n.y,a[s+2]=i[s+2]=n.z,t=!0}return t}updateVector4(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset,o=e.getType();if(i[s+0]!==n.x||i[s+1]!==n.y||i[s+2]!==n.z||i[s+4]!==n.w){const a=this._getBufferForType(o);a[s+0]=i[s+0]=n.x,a[s+1]=i[s+1]=n.y,a[s+2]=i[s+2]=n.z,a[s+3]=i[s+3]=n.w,t=!0}return t}updateColor(e){let t=!1;const i=this.values,n=e.getValue(),s=e.offset;if(i[s+0]!==n.r||i[s+1]!==n.g||i[s+2]!==n.b){const o=this.buffer;o[s+0]=i[s+0]=n.r,o[s+1]=i[s+1]=n.g,o[s+2]=i[s+2]=n.b,t=!0}return t}updateMatrix3(e){let t=!1;const i=this.values,n=e.getValue().elements,s=e.offset;if(i[s+0]!==n[0]||i[s+1]!==n[1]||i[s+2]!==n[2]||i[s+4]!==n[3]||i[s+5]!==n[4]||i[s+6]!==n[5]||i[s+8]!==n[6]||i[s+9]!==n[7]||i[s+10]!==n[8]){const o=this.buffer;o[s+0]=i[s+0]=n[0],o[s+1]=i[s+1]=n[1],o[s+2]=i[s+2]=n[2],o[s+4]=i[s+4]=n[3],o[s+5]=i[s+5]=n[4],o[s+6]=i[s+6]=n[5],o[s+8]=i[s+8]=n[6],o[s+9]=i[s+9]=n[7],o[s+10]=i[s+10]=n[8],t=!0}return t}updateMatrix4(e){let t=!1;const i=this.values,n=e.getValue().elements,s=e.offset;return YB(i,n,s)===!1&&(this.buffer.set(n,s),qB(i,n,s),t=!0),t}_getBufferForType(e){return e==="int"||e==="ivec2"||e==="ivec3"||e==="ivec4"?new Int32Array(this.buffer.buffer):e==="uint"||e==="uvec2"||e==="uvec3"||e==="uvec4"?new Uint32Array(this.buffer.buffer):this.buffer}}function qB(r,e,t){for(let i=0,n=e.length;i<n;i++)r[t+i]=e[i]}function YB(r,e,t){for(let i=0,n=e.length;i<n;i++)if(r[t+i]!==e[i])return!1;return!0}let jB=0;class DS extends XB{constructor(e,t){super(e),this.id=jB++,this.groupNode=t,this.isNodeUniformsGroup=!0}}class LS extends RS{constructor(e,t){super(e),this._onDisposeTexture=()=>{this.texture=null},this.texture=t,this.version=t?t.version:0,this.generation=null,this.isSampler=!0}set texture(e){this._texture!==e&&(this._texture&&this._texture.removeEventListener("dispose",this._onDisposeTexture),this._texture=e,this.generation=null,this.version=0,this._texture&&this._texture.addEventListener("dispose",this._onDisposeTexture))}get texture(){return this._texture}update(){const{texture:e,version:t}=this;return t!==e.version?(this.version=e.version,!0):!1}}let KB=0;class ZB extends LS{constructor(e,t){super(e,t),this.id=KB++,this.store=!1,this.isSampledTexture=!0}}class pd extends ZB{constructor(e,t,i,n=null){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i,this.access=n}update(){const{textureNode:e}=this;return this.texture!==e.value?(this.texture=e.value,!0):super.update()}}class IS extends pd{constructor(e,t,i,n=null){super(e,t,i,n),this.isSampledCubeTexture=!0}}class Wp extends pd{constructor(e,t,i,n=null){super(e,t,i,n),this.isSampledTexture3D=!0}}const QB={textureDimensions:"textureSize",equals:"equal"},JB={low:"lowp",medium:"mediump",high:"highp"},py={swizzleAssign:!0,storageBuffer:!1},my={perspective:"smooth",linear:"noperspective"},gy={centroid:"centroid"},_y=`
precision highp float;
precision highp int;
precision highp sampler2D;
precision highp sampler3D;
precision highp samplerCube;
precision highp sampler2DArray;

precision highp usampler2D;
precision highp usampler3D;
precision highp usamplerCube;
precision highp usampler2DArray;

precision highp isampler2D;
precision highp isampler3D;
precision highp isamplerCube;
precision highp isampler2DArray;

precision lowp sampler2DShadow;
precision lowp sampler2DArrayShadow;
precision lowp samplerCubeShadow;
`;class e3 extends AS{constructor(e,t){super(e,t,new RB),this.uniformGroups={},this.transforms=[],this.extensions={},this.builtins={vertex:[],fragment:[],compute:[]}}needsToWorkingColorSpace(e){return e.isVideoTexture===!0&&e.colorSpace!==Wi}getMethod(e){return QB[e]||e}getOutputStructName(){return""}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const o of t.inputs)n.push(this.getType(o.type)+" "+o.name);return`${this.getType(t.type)} ${t.name}( ${n.join(", ")} ) {

	${i.vars}

${i.code}
	return ${i.result};

}`}setupPBO(e){const t=e.value;if(t.pbo===void 0){const i=t.array,n=t.count*t.itemSize,{itemSize:s}=t,o=t.array.constructor.name.toLowerCase().includes("int");let a=o?el:zc;s===2?a=o?tl:Gc:s===3?a=o?lE:kc:s===4&&(a=o?il:Gt);const l={Float32Array:Wt,Uint8Array:zt,Uint16Array:Wn,Uint32Array:Mt,Int8Array:io,Int16Array:no,Int32Array:hi,Uint8ClampedArray:zt},c=Math.pow(2,Math.ceil(Math.log2(Math.sqrt(n/s))));let u=Math.ceil(n/s/c);c*u*s<n&&u++;const h=c*u*s,d=new i.constructor(h);d.set(i,0),t.array=d;const f=new f1(t.array,c,u,a,l[t.array.constructor.name]||Wt);f.needsUpdate=!0,f.isPBOTexture=!0;const p=new fl(f,null,null);p.setPrecision("high"),t.pboNode=p,t.pbo=p.value,this.getUniformFromNode(t.pboNode,"texture",this.shaderStage,this.context.nodeName)}}getPropertyName(e,t=this.shaderStage){return e.isNodeUniform&&e.node.isTextureNode!==!0&&e.node.isBufferNode!==!0?t.charAt(0)+"_"+e.name:super.getPropertyName(e,t)}generatePBO(e){const{node:t,indexNode:i}=e,n=t.value;if(this.renderer.backend.has(n)){const u=this.renderer.backend.get(n);u.pbo=n.pbo}const s=this.getUniformFromNode(n.pboNode,"texture",this.shaderStage,this.context.nodeName),o=this.getPropertyName(s);this.increaseUsage(i);const a=i.build(this,"uint"),l=this.getDataFromNode(e);let c=l.propertyName;if(c===void 0){const u=this.getVarFromNode(e);c=this.getPropertyName(u);const h=this.getDataFromNode(t);let d=h.propertySizeName;d===void 0&&(d=c+"Size",this.getVarFromNode(t,d,"uint"),this.addLineFlowCode(`${d} = uint( textureSize( ${o}, 0 ).x )`,e),h.propertySizeName=d);const{itemSize:f}=n,p="."+ul.join("").slice(0,f),_=`ivec2(${a} % ${d}, ${a} / ${d})`,g=this.generateTextureLoad(null,o,_,null,"0");let m="vec4";n.pbo.type===Mt?m="uvec4":n.pbo.type===hi&&(m="ivec4"),this.addLineFlowCode(`${c} = ${m}(${g})${p}`,e),l.propertyName=c}return c}generateTextureLoad(e,t,i,n,s="0"){return n?`texelFetch( ${t}, ivec3( ${i}, ${n} ), ${s} )`:`texelFetch( ${t}, ${i}, ${s} )`}generateTexture(e,t,i,n){return e.isDepthTexture?(n&&(i=`vec4( ${i}, ${n} )`),`texture( ${t}, ${i} ).x`):(n&&(i=`vec3( ${i}, ${n} )`),`texture( ${t}, ${i} )`)}generateTextureLevel(e,t,i,n){return`textureLod( ${t}, ${i}, ${n} )`}generateTextureBias(e,t,i,n){return`texture( ${t}, ${i}, ${n} )`}generateTextureGrad(e,t,i,n){return`textureGrad( ${t}, ${i}, ${n[0]}, ${n[1]} )`}generateTextureCompare(e,t,i,n,s,o=this.shaderStage){if(o==="fragment")return s?`texture( ${t}, vec4( ${i}, ${s}, ${n} ) )`:`texture( ${t}, vec3( ${i}, ${n} ) )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}getVars(e){const t=[],i=this.vars[e];if(i!==void 0)for(const n of i)t.push(`${this.getVar(n.type,n.name,n.count)};`);return t.join(`
	`)}getUniforms(e){const t=this.uniforms[e],i=[],n={};for(const o of t){let a=null,l=!1;if(o.type==="texture"||o.type==="texture3D"){const u=o.node.value;let h="";(u.isDataTexture===!0||u.isData3DTexture===!0)&&(u.type===Mt?h="u":u.type===hi&&(h="i")),o.type==="texture3D"&&u.isArrayTexture===!1?a=`${h}sampler3D ${o.name};`:u.compareFunction?u.isArrayTexture===!0?a=`sampler2DArrayShadow ${o.name};`:a=`sampler2DShadow ${o.name};`:u.isArrayTexture===!0||u.isDataArrayTexture===!0||u.isCompressedArrayTexture===!0?a=`${h}sampler2DArray ${o.name};`:a=`${h}sampler2D ${o.name};`}else if(o.type==="cubeTexture")a=`samplerCube ${o.name};`;else if(o.type==="buffer"){const u=o.node,h=this.getType(u.bufferType),d=u.bufferCount,f=d>0?d:"";a=`${u.name} {
	${h} ${o.name}[${f}];
};
`}else a=`${this.getVectorType(o.type)} ${this.getPropertyName(o,e)};`,l=!0;const c=o.node.precision;if(c!==null&&(a=JB[c]+" "+a),l){a="	"+a;const u=o.groupNode.name;(n[u]||(n[u]=[])).push(a)}else a="uniform "+a,i.push(a)}let s="";for(const o in n){const a=n[o];s+=this._getGLSLUniformStruct(e+"_"+o,a.join(`
`))+`
`}return s+=i.join(`
`),s}getTypeFromAttribute(e){let t=super.getTypeFromAttribute(e);if(/^[iu]/.test(t)&&e.gpuType!==hi){let i=e;e.isInterleavedBufferAttribute&&(i=e.data);const n=i.array;n instanceof Uint32Array||n instanceof Int32Array||(t=t.slice(1))}return t}getAttributes(e){let t="";if(e==="vertex"||e==="compute"){const i=this.getAttributesArray();let n=0;for(const s of i)t+=`layout( location = ${n++} ) in ${s.type} ${s.name};
`}return t}getStructMembers(e){const t=[];for(const i of e.members)t.push(`	${i.type} ${i.name};`);return t.join(`
`)}getStructs(e){const t=[],i=this.structs[e],n=[];for(const s of i)if(s.output)for(const o of s.members)n.push(`layout( location = ${o.index} ) out ${o.type} ${o.name};`);else{let o="struct "+s.name+` {
`;o+=this.getStructMembers(s),o+=`
};
`,t.push(o)}return n.length===0&&n.push("layout( location = 0 ) out vec4 fragColor;"),`
`+n.join(`
`)+`

`+t.join(`
`)}getVaryings(e){let t="";const i=this.varyings;if(e==="vertex"||e==="compute")for(const n of i){e==="compute"&&(n.needsInterpolation=!0);const s=this.getType(n.type);if(n.needsInterpolation)if(n.interpolationType){const o=my[n.interpolationType]||n.interpolationType,a=gy[n.interpolationSampling]||"";t+=`${o} ${a} out ${s} ${n.name};
`}else{const o=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${o}out ${s} ${n.name};
`}else t+=`${s} ${n.name};
`}else if(e==="fragment"){for(const n of i)if(n.needsInterpolation){const s=this.getType(n.type);if(n.interpolationType){const o=my[n.interpolationType]||n.interpolationType,a=gy[n.interpolationSampling]||"";t+=`${o} ${a} in ${s} ${n.name};
`}else{const o=s.includes("int")||s.includes("uv")||s.includes("iv")?"flat ":"";t+=`${o}in ${s} ${n.name};
`}}}for(const n of this.builtins[e])t+=`${n};
`;return t}getVertexIndex(){return"uint( gl_VertexID )"}getInstanceIndex(){return"uint( gl_InstanceID )"}getInvocationLocalIndex(){return`uint( gl_InstanceID ) % ${this.object.workgroupSize.reduce((i,n)=>i*n,1)}u`}getDrawIndex(){return this.renderer.backend.extensions.has("WEBGL_multi_draw")?"uint( gl_DrawID )":null}getFrontFacing(){return"gl_FrontFacing"}getFragCoord(){return"gl_FragCoord.xy"}getFragDepth(){return"gl_FragDepth"}enableExtension(e,t,i=this.shaderStage){const n=this.extensions[i]||(this.extensions[i]=new Map);n.has(e)===!1&&n.set(e,{name:e,behavior:t})}getExtensions(e){const t=[];if(e==="vertex"){const n=this.renderer.backend.extensions;this.object.isBatchedMesh&&n.has("WEBGL_multi_draw")&&this.enableExtension("GL_ANGLE_multi_draw","require",e)}const i=this.extensions[e];if(i!==void 0)for(const{name:n,behavior:s}of i.values())t.push(`#extension ${n} : ${s}`);return t.join(`
`)}getClipDistance(){return"gl_ClipDistance"}isAvailable(e){let t=py[e];if(t===void 0){let i;switch(t=!1,e){case"float32Filterable":i="OES_texture_float_linear";break;case"clipDistance":i="WEBGL_clip_cull_distance";break}if(i!==void 0){const n=this.renderer.backend.extensions;n.has(i)&&(n.get(i),t=!0)}py[e]=t}return t}isFlipY(){return!0}enableHardwareClipping(e){this.enableExtension("GL_ANGLE_clip_cull_distance","require"),this.builtins.vertex.push(`out float gl_ClipDistance[ ${e} ]`)}enableMultiview(){this.enableExtension("GL_OVR_multiview2","require","fragment"),this.enableExtension("GL_OVR_multiview2","require","vertex"),this.builtins.vertex.push("layout(num_views = 2) in")}registerTransform(e,t){this.transforms.push({varyingName:e,attributeNode:t})}getTransforms(){const e=this.transforms;let t="";for(let i=0;i<e.length;i++){const n=e[i],s=this.getPropertyName(n.attributeNode);s&&(t+=`${n.varyingName} = ${s};
	`)}return t}_getGLSLUniformStruct(e,t){return`
layout( std140 ) uniform ${e} {
${t}
};`}_getGLSLVertexCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${_y}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// attributes
${e.attributes}

// codes
${e.codes}

void main() {

	// vars
	${e.vars}

	// transforms
	${e.transforms}

	// flow
	${e.flow}

	gl_PointSize = 1.0;

}
`}_getGLSLFragmentCode(e){return`#version 300 es

${this.getSignature()}

// extensions
${e.extensions}

// precision
${_y}

// uniforms
${e.uniforms}

// varyings
${e.varyings}

// codes
${e.codes}

// structs
${e.structs}

void main() {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){let i=`// code

`;i+=this.flowCode[t];const n=this.flowNodes[t],s=n[n.length-1];for(const a of n){const l=this.getFlowData(a),c=a.name;c&&(i.length>0&&(i+=`
`),i+=`	// flow -> ${c}
	`),i+=`${l.code}
	`,a===s&&t!=="compute"&&(i+=`// result
	`,t==="vertex"?(i+="gl_Position = ",i+=`${l.result};`):t==="fragment"&&(a.outputNode.isOutputStructNode||(i+="fragColor = ",i+=`${l.result};`)))}const o=e[t];o.extensions=this.getExtensions(t),o.uniforms=this.getUniforms(t),o.attributes=this.getAttributes(t),o.varyings=this.getVaryings(t),o.vars=this.getVars(t),o.structs=this.getStructs(t),o.codes=this.getCodes(t),o.transforms=this.getTransforms(t),o.flow=i}this.material!==null?(this.vertexShader=this._getGLSLVertexCode(e.vertex),this.fragmentShader=this._getGLSLFragmentCode(e.fragment)):this.computeShader=this._getGLSLVertexCode(e.compute)}getUniformFromNode(e,t,i,n=null){const s=super.getUniformFromNode(e,t,i,n),o=this.getDataFromNode(e,i,this.globalCache);let a=o.uniformGPU;if(a===void 0){const l=e.groupNode,c=l.name,u=this.getBindGroupArray(c,i);if(t==="texture")a=new pd(s.name,s.node,l),u.push(a);else if(t==="cubeTexture")a=new IS(s.name,s.node,l),u.push(a);else if(t==="texture3D")a=new Wp(s.name,s.node,l),u.push(a);else if(t==="buffer"){e.name=`NodeBuffer_${e.id}`,s.name=`buffer${e.id}`;const h=new PS(e,l);h.name=e.name,u.push(h),a=h}else{const h=this.uniformGroups[i]||(this.uniformGroups[i]={});let d=h[c];d===void 0&&(d=new DS(i+"_"+c,l),h[c]=d,u.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}o.uniformGPU=a}return s}}let rp=null,Jo=null;class FS{constructor(e={}){this.parameters=Object.assign({},e),this.data=new WeakMap,this.renderer=null,this.domElement=null,this.timestampQueryPool={render:null,compute:null},this.trackTimestamp=e.trackTimestamp===!0}async init(e){this.renderer=e}get coordinateSystem(){}beginRender(){}finishRender(){}beginCompute(){}finishCompute(){}draw(){}compute(){}createProgram(){}destroyProgram(){}createBindings(){}updateBindings(){}updateBinding(){}createRenderPipeline(){}createComputePipeline(){}needsRenderUpdate(){}getRenderCacheKey(){}createNodeBuilder(){}createSampler(){}destroySampler(){}createDefaultTexture(){}createTexture(){}updateTexture(){}generateMipmaps(){}destroyTexture(){}async copyTextureToBuffer(){}copyTextureToTexture(){}copyFramebufferToTexture(){}createAttribute(){}createIndexAttribute(){}createStorageAttribute(){}updateAttribute(){}destroyAttribute(){}getContext(){}updateSize(){}updateViewport(){}isOccluded(){}async resolveTimestampsAsync(e="render"){if(!this.trackTimestamp){Zi("WebGPURenderer: Timestamp tracking is disabled.");return}const t=this.timestampQueryPool[e];if(!t){Zi(`WebGPURenderer: No timestamp query pool for type '${e}' found.`);return}const i=await t.resolveQueriesAsync();return this.renderer.info[e].timestamp=i,i}async waitForGPU(){}async getArrayBufferAsync(){}async hasFeatureAsync(){}hasFeature(){}getMaxAnisotropy(){}getDrawingBufferSize(){return rp=rp||new Je,this.renderer.getDrawingBufferSize(rp)}setScissorTest(){}getClearColor(){const e=this.renderer;return Jo=Jo||new Zm,e.getClearColor(Jo),Jo.getRGB(Jo),Jo}getDomElement(){let e=this.domElement;return e===null&&(e=this.parameters.canvas!==void 0?this.parameters.canvas:Eb(),"setAttribute"in e&&e.setAttribute("data-engine",`three.js r${tm} webgpu`),this.domElement=e),e}set(e,t){this.data.set(e,t)}get(e){let t=this.data.get(e);return t===void 0&&(t={},this.data.set(e,t)),t}has(e){return this.data.has(e)}delete(e){this.data.delete(e)}dispose(){}}let t3=0;class i3{constructor(e,t){this.buffers=[e.bufferGPU,t],this.type=e.type,this.bufferType=e.bufferType,this.pbo=e.pbo,this.byteLength=e.byteLength,this.bytesPerElement=e.BYTES_PER_ELEMENT,this.version=e.version,this.isInteger=e.isInteger,this.activeBufferIndex=0,this.baseId=e.id}get id(){return`${this.baseId}|${this.activeBufferIndex}`}get bufferGPU(){return this.buffers[this.activeBufferIndex]}get transformBuffer(){return this.buffers[this.activeBufferIndex^1]}switchBuffers(){this.activeBufferIndex^=1}}class n3{constructor(e){this.backend=e}createAttribute(e,t){const i=this.backend,{gl:n}=i,s=e.array,o=e.usage||n.STATIC_DRAW,a=e.isInterleavedBufferAttribute?e.data:e,l=i.get(a);let c=l.bufferGPU;c===void 0&&(c=this._createBuffer(n,t,s,o),l.bufferGPU=c,l.bufferType=t,l.version=a.version);let u;if(s instanceof Float32Array)u=n.FLOAT;else if(typeof Float16Array<"u"&&s instanceof Float16Array)u=n.HALF_FLOAT;else if(s instanceof Uint16Array)e.isFloat16BufferAttribute?u=n.HALF_FLOAT:u=n.UNSIGNED_SHORT;else if(s instanceof Int16Array)u=n.SHORT;else if(s instanceof Uint32Array)u=n.UNSIGNED_INT;else if(s instanceof Int32Array)u=n.INT;else if(s instanceof Int8Array)u=n.BYTE;else if(s instanceof Uint8Array)u=n.UNSIGNED_BYTE;else if(s instanceof Uint8ClampedArray)u=n.UNSIGNED_BYTE;else throw new Error("THREE.WebGLBackend: Unsupported buffer data format: "+s);let h={bufferGPU:c,bufferType:t,type:u,byteLength:s.byteLength,bytesPerElement:s.BYTES_PER_ELEMENT,version:e.version,pbo:e.pbo,isInteger:u===n.INT||u===n.UNSIGNED_INT||e.gpuType===hi,id:t3++};if(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute){const d=this._createBuffer(n,t,s,o);h=new i3(h,d)}i.set(e,h)}updateAttribute(e){const t=this.backend,{gl:i}=t,n=e.array,s=e.isInterleavedBufferAttribute?e.data:e,o=t.get(s),a=o.bufferType,l=e.isInterleavedBufferAttribute?e.data.updateRanges:e.updateRanges;if(i.bindBuffer(a,o.bufferGPU),l.length===0)i.bufferSubData(a,0,n);else{for(let c=0,u=l.length;c<u;c++){const h=l[c];i.bufferSubData(a,h.start*n.BYTES_PER_ELEMENT,n,h.start,h.count)}s.clearUpdateRanges()}i.bindBuffer(a,null),o.version=s.version}destroyAttribute(e){const t=this.backend,{gl:i}=t;e.isInterleavedBufferAttribute&&t.delete(e.data);const n=t.get(e);i.deleteBuffer(n.bufferGPU),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,{gl:i}=t,n=e.isInterleavedBufferAttribute?e.data:e,{bufferGPU:s}=t.get(n),o=e.array,a=o.byteLength;i.bindBuffer(i.COPY_READ_BUFFER,s);const l=i.createBuffer();i.bindBuffer(i.COPY_WRITE_BUFFER,l),i.bufferData(i.COPY_WRITE_BUFFER,a,i.STREAM_READ),i.copyBufferSubData(i.COPY_READ_BUFFER,i.COPY_WRITE_BUFFER,0,0,a),await t.utils._clientWaitAsync();const c=new e.array.constructor(o.length);return i.bindBuffer(i.COPY_WRITE_BUFFER,l),i.getBufferSubData(i.COPY_WRITE_BUFFER,0,c),i.deleteBuffer(l),i.bindBuffer(i.COPY_READ_BUFFER,null),i.bindBuffer(i.COPY_WRITE_BUFFER,null),c.buffer}_createBuffer(e,t,i,n){const s=e.createBuffer();return e.bindBuffer(t,s),e.bufferData(t,i,n),e.bindBuffer(t,null),s}}let op,kl;class s3{constructor(e){this.backend=e,this.gl=this.backend.gl,this.enabled={},this.currentFlipSided=null,this.currentCullFace=null,this.currentProgram=null,this.currentBlendingEnabled=!1,this.currentBlending=null,this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentPremultipledAlpha=null,this.currentPolygonOffsetFactor=null,this.currentPolygonOffsetUnits=null,this.currentColorMask=null,this.currentDepthFunc=null,this.currentDepthMask=null,this.currentStencilFunc=null,this.currentStencilRef=null,this.currentStencilFuncMask=null,this.currentStencilFail=null,this.currentStencilZFail=null,this.currentStencilZPass=null,this.currentStencilMask=null,this.currentLineWidth=null,this.currentClippingPlanes=0,this.currentVAO=null,this.currentIndex=null,this.currentBoundFramebuffers={},this.currentDrawbuffers=new WeakMap,this.maxTextures=this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS),this.currentTextureSlot=null,this.currentBoundTextures={},this.currentBoundBufferBases={},this._init()}_init(){const e=this.gl;op={[wi]:e.FUNC_ADD,[nm]:e.FUNC_SUBTRACT,[sm]:e.FUNC_REVERSE_SUBTRACT},kl={[Ps]:e.ZERO,[rm]:e.ONE,[om]:e.SRC_COLOR,[lc]:e.SRC_ALPHA,[dm]:e.SRC_ALPHA_SATURATE,[um]:e.DST_COLOR,[lm]:e.DST_ALPHA,[am]:e.ONE_MINUS_SRC_COLOR,[cc]:e.ONE_MINUS_SRC_ALPHA,[hm]:e.ONE_MINUS_DST_COLOR,[cm]:e.ONE_MINUS_DST_ALPHA};const t=e.getParameter(e.SCISSOR_BOX),i=e.getParameter(e.VIEWPORT);this.currentScissor=new je().fromArray(t),this.currentViewport=new je().fromArray(i),this._tempVec4=new je}enable(e){const{enabled:t}=this;t[e]!==!0&&(this.gl.enable(e),t[e]=!0)}disable(e){const{enabled:t}=this;t[e]!==!1&&(this.gl.disable(e),t[e]=!1)}setFlipSided(e){if(this.currentFlipSided!==e){const{gl:t}=this;e?t.frontFace(t.CW):t.frontFace(t.CCW),this.currentFlipSided=e}}setCullFace(e){const{gl:t}=this;e!==gb?(this.enable(t.CULL_FACE),e!==this.currentCullFace&&(e===Tp?t.cullFace(t.BACK):e===_b?t.cullFace(t.FRONT):t.cullFace(t.FRONT_AND_BACK))):this.disable(t.CULL_FACE),this.currentCullFace=e}setLineWidth(e){const{currentLineWidth:t,gl:i}=this;e!==t&&(i.lineWidth(e),this.currentLineWidth=e)}setBlending(e,t,i,n,s,o,a,l){const{gl:c}=this;if(e===dn){this.currentBlendingEnabled===!0&&(this.disable(c.BLEND),this.currentBlendingEnabled=!1);return}if(this.currentBlendingEnabled===!1&&(this.enable(c.BLEND),this.currentBlendingEnabled=!0),e!==ua){if(e!==this.currentBlending||l!==this.currentPremultipledAlpha){if((this.currentBlendEquation!==wi||this.currentBlendEquationAlpha!==wi)&&(c.blendEquation(c.FUNC_ADD),this.currentBlendEquation=wi,this.currentBlendEquationAlpha=wi),l)switch(e){case fn:c.blendFuncSeparate(c.ONE,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case va:c.blendFunc(c.ONE,c.ONE);break;case Ma:c.blendFuncSeparate(c.ZERO,c.ONE_MINUS_SRC_COLOR,c.ZERO,c.ONE);break;case Ea:c.blendFuncSeparate(c.DST_COLOR,c.ONE_MINUS_SRC_ALPHA,c.ZERO,c.ONE);break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}else switch(e){case fn:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE_MINUS_SRC_ALPHA,c.ONE,c.ONE_MINUS_SRC_ALPHA);break;case va:c.blendFuncSeparate(c.SRC_ALPHA,c.ONE,c.ONE,c.ONE);break;case Ma:console.error("THREE.WebGLState: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ea:console.error("THREE.WebGLState: MultiplyBlending requires material.premultipliedAlpha = true");break;default:console.error("THREE.WebGLState: Invalid blending: ",e);break}this.currentBlendSrc=null,this.currentBlendDst=null,this.currentBlendSrcAlpha=null,this.currentBlendDstAlpha=null,this.currentBlending=e,this.currentPremultipledAlpha=l}return}s=s||t,o=o||i,a=a||n,(t!==this.currentBlendEquation||s!==this.currentBlendEquationAlpha)&&(c.blendEquationSeparate(op[t],op[s]),this.currentBlendEquation=t,this.currentBlendEquationAlpha=s),(i!==this.currentBlendSrc||n!==this.currentBlendDst||o!==this.currentBlendSrcAlpha||a!==this.currentBlendDstAlpha)&&(c.blendFuncSeparate(kl[i],kl[n],kl[o],kl[a]),this.currentBlendSrc=i,this.currentBlendDst=n,this.currentBlendSrcAlpha=o,this.currentBlendDstAlpha=a),this.currentBlending=e,this.currentPremultipledAlpha=!1}setColorMask(e){this.currentColorMask!==e&&(this.gl.colorMask(e,e,e,e),this.currentColorMask=e)}setDepthTest(e){const{gl:t}=this;e?this.enable(t.DEPTH_TEST):this.disable(t.DEPTH_TEST)}setDepthMask(e){this.currentDepthMask!==e&&(this.gl.depthMask(e),this.currentDepthMask=e)}setDepthFunc(e){if(this.currentDepthFunc!==e){const{gl:t}=this;switch(e){case uc:t.depthFunc(t.NEVER);break;case hc:t.depthFunc(t.ALWAYS);break;case dc:t.depthFunc(t.LESS);break;case br:t.depthFunc(t.LEQUAL);break;case fc:t.depthFunc(t.EQUAL);break;case pc:t.depthFunc(t.GEQUAL);break;case mc:t.depthFunc(t.GREATER);break;case gc:t.depthFunc(t.NOTEQUAL);break;default:t.depthFunc(t.LEQUAL)}this.currentDepthFunc=e}}scissor(e,t,i,n){const s=this._tempVec4.set(e,t,i,n);if(this.currentScissor.equals(s)===!1){const{gl:o}=this;o.scissor(s.x,s.y,s.z,s.w),this.currentScissor.copy(s)}}viewport(e,t,i,n){const s=this._tempVec4.set(e,t,i,n);if(this.currentViewport.equals(s)===!1){const{gl:o}=this;o.viewport(s.x,s.y,s.z,s.w),this.currentViewport.copy(s)}}setScissorTest(e){const t=this.gl;e?t.enable(t.SCISSOR_TEST):t.disable(t.SCISSOR_TEST)}setStencilTest(e){const{gl:t}=this;e?this.enable(t.STENCIL_TEST):this.disable(t.STENCIL_TEST)}setStencilMask(e){this.currentStencilMask!==e&&(this.gl.stencilMask(e),this.currentStencilMask=e)}setStencilFunc(e,t,i){(this.currentStencilFunc!==e||this.currentStencilRef!==t||this.currentStencilFuncMask!==i)&&(this.gl.stencilFunc(e,t,i),this.currentStencilFunc=e,this.currentStencilRef=t,this.currentStencilFuncMask=i)}setStencilOp(e,t,i){(this.currentStencilFail!==e||this.currentStencilZFail!==t||this.currentStencilZPass!==i)&&(this.gl.stencilOp(e,t,i),this.currentStencilFail=e,this.currentStencilZFail=t,this.currentStencilZPass=i)}setMaterial(e,t,i){const{gl:n}=this;e.side===Ai?this.disable(n.CULL_FACE):this.enable(n.CULL_FACE);let s=e.side===Ct;t&&(s=!s),this.setFlipSided(s),e.blending===fn&&e.transparent===!1?this.setBlending(dn):this.setBlending(e.blending,e.blendEquation,e.blendSrc,e.blendDst,e.blendEquationAlpha,e.blendSrcAlpha,e.blendDstAlpha,e.premultipliedAlpha),this.setDepthFunc(e.depthFunc),this.setDepthTest(e.depthTest),this.setDepthMask(e.depthWrite),this.setColorMask(e.colorWrite);const o=e.stencilWrite;if(this.setStencilTest(o),o&&(this.setStencilMask(e.stencilWriteMask),this.setStencilFunc(e.stencilFunc,e.stencilRef,e.stencilFuncMask),this.setStencilOp(e.stencilFail,e.stencilZFail,e.stencilZPass)),this.setPolygonOffset(e.polygonOffset,e.polygonOffsetFactor,e.polygonOffsetUnits),e.alphaToCoverage===!0&&this.backend.renderer.samples>1?this.enable(n.SAMPLE_ALPHA_TO_COVERAGE):this.disable(n.SAMPLE_ALPHA_TO_COVERAGE),i>0&&this.currentClippingPlanes!==i)for(let l=0;l<8;l++)l<i?this.enable(12288+l):this.disable(12288+l)}setPolygonOffset(e,t,i){const{gl:n}=this;e?(this.enable(n.POLYGON_OFFSET_FILL),(this.currentPolygonOffsetFactor!==t||this.currentPolygonOffsetUnits!==i)&&(n.polygonOffset(t,i),this.currentPolygonOffsetFactor=t,this.currentPolygonOffsetUnits=i)):this.disable(n.POLYGON_OFFSET_FILL)}useProgram(e){return this.currentProgram!==e?(this.gl.useProgram(e),this.currentProgram=e,!0):!1}setVertexState(e,t=null){const i=this.gl;return this.currentVAO!==e||this.currentIndex!==t?(i.bindVertexArray(e),t!==null&&i.bindBuffer(i.ELEMENT_ARRAY_BUFFER,t),this.currentVAO=e,this.currentIndex=t,!0):!1}resetVertexState(){const e=this.gl;e.bindVertexArray(null),e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null),this.currentVAO=null,this.currentIndex=null}bindFramebuffer(e,t){const{gl:i,currentBoundFramebuffers:n}=this;return n[e]!==t?(i.bindFramebuffer(e,t),n[e]=t,e===i.DRAW_FRAMEBUFFER&&(n[i.FRAMEBUFFER]=t),e===i.FRAMEBUFFER&&(n[i.DRAW_FRAMEBUFFER]=t),!0):!1}drawBuffers(e,t){const{gl:i}=this;let n=[],s=!1;if(e.textures!==null){n=this.currentDrawbuffers.get(t),n===void 0&&(n=[],this.currentDrawbuffers.set(t,n));const o=e.textures;if(n.length!==o.length||n[0]!==i.COLOR_ATTACHMENT0){for(let a=0,l=o.length;a<l;a++)n[a]=i.COLOR_ATTACHMENT0+a;n.length=o.length,s=!0}}else n[0]!==i.BACK&&(n[0]=i.BACK,s=!0);s&&i.drawBuffers(n)}activeTexture(e){const{gl:t,currentTextureSlot:i,maxTextures:n}=this;e===void 0&&(e=t.TEXTURE0+n-1),i!==e&&(t.activeTexture(e),this.currentTextureSlot=e)}bindTexture(e,t,i){const{gl:n,currentTextureSlot:s,currentBoundTextures:o,maxTextures:a}=this;i===void 0&&(s===null?i=n.TEXTURE0+a-1:i=s);let l=o[i];l===void 0&&(l={type:void 0,texture:void 0},o[i]=l),(l.type!==e||l.texture!==t)&&(s!==i&&(n.activeTexture(i),this.currentTextureSlot=i),n.bindTexture(e,t),l.type=e,l.texture=t)}bindBufferBase(e,t,i){const{gl:n}=this,s=`${e}-${t}`;return this.currentBoundBufferBases[s]!==i?(n.bindBufferBase(e,t,i),this.currentBoundBufferBases[s]=i,!0):!1}unbindTexture(){const{gl:e,currentTextureSlot:t,currentBoundTextures:i}=this,n=i[t];n!==void 0&&n.type!==void 0&&(e.bindTexture(n.type,null),n.type=void 0,n.texture=void 0)}}class r3{constructor(e){this.backend=e,this.gl=this.backend.gl,this.extensions=e.extensions}convert(e,t=Wi){const{gl:i,extensions:n}=this;let s;const o=Be.getTransfer(t);if(e===zt)return i.UNSIGNED_BYTE;if(e===Kh)return i.UNSIGNED_SHORT_4_4_4_4;if(e===Zh)return i.UNSIGNED_SHORT_5_5_5_1;if(e===Qh)return i.UNSIGNED_INT_5_9_9_9_REV;if(e===io)return i.BYTE;if(e===no)return i.SHORT;if(e===Wn)return i.UNSIGNED_SHORT;if(e===hi)return i.INT;if(e===Mt)return i.UNSIGNED_INT;if(e===Wt)return i.FLOAT;if(e===pn)return i.HALF_FLOAT;if(e===mm)return i.ALPHA;if(e===kc)return i.RGB;if(e===Gt)return i.RGBA;if(e===gn)return i.DEPTH_COMPONENT;if(e===_n)return i.DEPTH_STENCIL;if(e===zc)return i.RED;if(e===el)return i.RED_INTEGER;if(e===Gc)return i.RG;if(e===tl)return i.RG_INTEGER;if(e===il)return i.RGBA_INTEGER;if(e===so||e===fr||e===pr||e===mr)if(o===xe)if(s=n.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(e===so)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(e===fr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(e===pr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(e===mr)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=n.get("WEBGL_compressed_texture_s3tc"),s!==null){if(e===so)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(e===fr)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(e===pr)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(e===mr)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(e===_c||e===xc||e===yc||e===bc)if(s=n.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(e===_c)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(e===xc)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(e===yc)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(e===bc)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(e===Tc||e===Ra||e===Ca)if(s=n.get("WEBGL_compressed_texture_etc"),s!==null){if(e===Tc||e===Ra)return o===xe?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(e===Ca)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(e===Na||e===Pa||e===Da||e===La||e===Ia||e===Fa||e===Ua||e===Ba||e===Oa||e===ka||e===za||e===Ga||e===Va||e===Ha)if(s=n.get("WEBGL_compressed_texture_astc"),s!==null){if(e===Na)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(e===Pa)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(e===Da)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(e===La)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(e===Ia)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(e===Fa)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(e===Ua)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(e===Ba)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(e===Oa)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(e===ka)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(e===za)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(e===Ga)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(e===Va)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(e===Ha)return o===xe?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(e===ro)if(s=n.get("EXT_texture_compression_bptc"),s!==null){if(e===ro)return o===xe?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(e===gm||e===Sc||e===vc||e===Mc)if(s=n.get("EXT_texture_compression_rgtc"),s!==null){if(e===ro)return s.COMPRESSED_RED_RGTC1_EXT;if(e===Sc)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(e===vc)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(e===Mc)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return e===mn?i.UNSIGNED_INT_24_8:i[e]!==void 0?i[e]:null}_clientWaitAsync(){const{gl:e}=this,t=e.fenceSync(e.SYNC_GPU_COMMANDS_COMPLETE,0);return e.flush(),new Promise((i,n)=>{function s(){const o=e.clientWaitSync(t,e.SYNC_FLUSH_COMMANDS_BIT,0);if(o===e.WAIT_FAILED){e.deleteSync(t),n();return}if(o===e.TIMEOUT_EXPIRED){requestAnimationFrame(s);return}e.deleteSync(t),i()}s()})}}let xy=!1,dh,ap,yy;class o3{constructor(e){this.backend=e,this.gl=e.gl,this.extensions=e.extensions,this.defaultTextures={},xy===!1&&(this._init(),xy=!0)}_init(){const e=this.gl;dh={[co]:e.REPEAT,[rs]:e.CLAMP_TO_EDGE,[uo]:e.MIRRORED_REPEAT},ap={[Rt]:e.NEAREST,[pm]:e.NEAREST_MIPMAP_NEAREST,[Bs]:e.NEAREST_MIPMAP_LINEAR,[ni]:e.LINEAR,[ha]:e.LINEAR_MIPMAP_NEAREST,[Xi]:e.LINEAR_MIPMAP_LINEAR},yy={[_m]:e.NEVER,[vm]:e.ALWAYS,[xm]:e.LESS,[Jh]:e.LEQUAL,[ym]:e.EQUAL,[Sm]:e.GEQUAL,[bm]:e.GREATER,[Tm]:e.NOTEQUAL}}getGLTextureType(e){const{gl:t}=this;let i;return e.isCubeTexture===!0?i=t.TEXTURE_CUBE_MAP:e.isArrayTexture===!0||e.isDataArrayTexture===!0||e.isCompressedArrayTexture===!0?i=t.TEXTURE_2D_ARRAY:e.isData3DTexture===!0?i=t.TEXTURE_3D:i=t.TEXTURE_2D,i}getInternalFormat(e,t,i,n,s=!1){const{gl:o,extensions:a}=this;if(e!==null){if(o[e]!==void 0)return o[e];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+e+"'")}let l=t;if(t===o.RED&&(i===o.FLOAT&&(l=o.R32F),i===o.HALF_FLOAT&&(l=o.R16F),i===o.UNSIGNED_BYTE&&(l=o.R8),i===o.UNSIGNED_SHORT&&(l=o.R16),i===o.UNSIGNED_INT&&(l=o.R32UI),i===o.BYTE&&(l=o.R8I),i===o.SHORT&&(l=o.R16I),i===o.INT&&(l=o.R32I)),t===o.RED_INTEGER&&(i===o.UNSIGNED_BYTE&&(l=o.R8UI),i===o.UNSIGNED_SHORT&&(l=o.R16UI),i===o.UNSIGNED_INT&&(l=o.R32UI),i===o.BYTE&&(l=o.R8I),i===o.SHORT&&(l=o.R16I),i===o.INT&&(l=o.R32I)),t===o.RG&&(i===o.FLOAT&&(l=o.RG32F),i===o.HALF_FLOAT&&(l=o.RG16F),i===o.UNSIGNED_BYTE&&(l=o.RG8),i===o.UNSIGNED_SHORT&&(l=o.RG16),i===o.UNSIGNED_INT&&(l=o.RG32UI),i===o.BYTE&&(l=o.RG8I),i===o.SHORT&&(l=o.RG16I),i===o.INT&&(l=o.RG32I)),t===o.RG_INTEGER&&(i===o.UNSIGNED_BYTE&&(l=o.RG8UI),i===o.UNSIGNED_SHORT&&(l=o.RG16UI),i===o.UNSIGNED_INT&&(l=o.RG32UI),i===o.BYTE&&(l=o.RG8I),i===o.SHORT&&(l=o.RG16I),i===o.INT&&(l=o.RG32I)),t===o.RGB){const c=s?Wa:Be.getTransfer(n);i===o.FLOAT&&(l=o.RGB32F),i===o.HALF_FLOAT&&(l=o.RGB16F),i===o.UNSIGNED_BYTE&&(l=o.RGB8),i===o.UNSIGNED_SHORT&&(l=o.RGB16),i===o.UNSIGNED_INT&&(l=o.RGB32UI),i===o.BYTE&&(l=o.RGB8I),i===o.SHORT&&(l=o.RGB16I),i===o.INT&&(l=o.RGB32I),i===o.UNSIGNED_BYTE&&(l=c===xe?o.SRGB8:o.RGB8),i===o.UNSIGNED_SHORT_5_6_5&&(l=o.RGB565),i===o.UNSIGNED_SHORT_5_5_5_1&&(l=o.RGB5_A1),i===o.UNSIGNED_SHORT_4_4_4_4&&(l=o.RGB4),i===o.UNSIGNED_INT_5_9_9_9_REV&&(l=o.RGB9_E5)}if(t===o.RGB_INTEGER&&(i===o.UNSIGNED_BYTE&&(l=o.RGB8UI),i===o.UNSIGNED_SHORT&&(l=o.RGB16UI),i===o.UNSIGNED_INT&&(l=o.RGB32UI),i===o.BYTE&&(l=o.RGB8I),i===o.SHORT&&(l=o.RGB16I),i===o.INT&&(l=o.RGB32I)),t===o.RGBA){const c=s?Wa:Be.getTransfer(n);i===o.FLOAT&&(l=o.RGBA32F),i===o.HALF_FLOAT&&(l=o.RGBA16F),i===o.UNSIGNED_BYTE&&(l=o.RGBA8),i===o.UNSIGNED_SHORT&&(l=o.RGBA16),i===o.UNSIGNED_INT&&(l=o.RGBA32UI),i===o.BYTE&&(l=o.RGBA8I),i===o.SHORT&&(l=o.RGBA16I),i===o.INT&&(l=o.RGBA32I),i===o.UNSIGNED_BYTE&&(l=c===xe?o.SRGB8_ALPHA8:o.RGBA8),i===o.UNSIGNED_SHORT_4_4_4_4&&(l=o.RGBA4),i===o.UNSIGNED_SHORT_5_5_5_1&&(l=o.RGB5_A1)}return t===o.RGBA_INTEGER&&(i===o.UNSIGNED_BYTE&&(l=o.RGBA8UI),i===o.UNSIGNED_SHORT&&(l=o.RGBA16UI),i===o.UNSIGNED_INT&&(l=o.RGBA32UI),i===o.BYTE&&(l=o.RGBA8I),i===o.SHORT&&(l=o.RGBA16I),i===o.INT&&(l=o.RGBA32I)),t===o.DEPTH_COMPONENT&&(i===o.UNSIGNED_SHORT&&(l=o.DEPTH_COMPONENT16),i===o.UNSIGNED_INT&&(l=o.DEPTH_COMPONENT24),i===o.FLOAT&&(l=o.DEPTH_COMPONENT32F)),t===o.DEPTH_STENCIL&&i===o.UNSIGNED_INT_24_8&&(l=o.DEPTH24_STENCIL8),(l===o.R16F||l===o.R32F||l===o.RG16F||l===o.RG32F||l===o.RGBA16F||l===o.RGBA32F)&&a.get("EXT_color_buffer_float"),l}setTextureParameters(e,t){const{gl:i,extensions:n,backend:s}=this,o=Be.getPrimaries(Be.workingColorSpace),a=t.colorSpace===Wi?null:Be.getPrimaries(t.colorSpace),l=t.colorSpace===Wi||o===a?i.NONE:i.BROWSER_DEFAULT_WEBGL;i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,t.flipY),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),i.pixelStorei(i.UNPACK_ALIGNMENT,t.unpackAlignment),i.pixelStorei(i.UNPACK_COLORSPACE_CONVERSION_WEBGL,l),i.texParameteri(e,i.TEXTURE_WRAP_S,dh[t.wrapS]),i.texParameteri(e,i.TEXTURE_WRAP_T,dh[t.wrapT]),(e===i.TEXTURE_3D||e===i.TEXTURE_2D_ARRAY)&&(t.isArrayTexture||i.texParameteri(e,i.TEXTURE_WRAP_R,dh[t.wrapR])),i.texParameteri(e,i.TEXTURE_MAG_FILTER,ap[t.magFilter]);const c=t.mipmaps!==void 0&&t.mipmaps.length>0,u=t.minFilter===ni&&c?Xi:t.minFilter;if(i.texParameteri(e,i.TEXTURE_MIN_FILTER,ap[u]),t.compareFunction&&(i.texParameteri(e,i.TEXTURE_COMPARE_MODE,i.COMPARE_REF_TO_TEXTURE),i.texParameteri(e,i.TEXTURE_COMPARE_FUNC,yy[t.compareFunction])),n.has("EXT_texture_filter_anisotropic")===!0){if(t.magFilter===Rt||t.minFilter!==Bs&&t.minFilter!==Xi||t.type===Wt&&n.has("OES_texture_float_linear")===!1)return;if(t.anisotropy>1){const h=n.get("EXT_texture_filter_anisotropic");i.texParameterf(e,h.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(t.anisotropy,s.getMaxAnisotropy()))}}}createDefaultTexture(e){const{gl:t,backend:i,defaultTextures:n}=this,s=this.getGLTextureType(e);let o=n[s];o===void 0&&(o=t.createTexture(),i.state.bindTexture(s,o),t.texParameteri(s,t.TEXTURE_MIN_FILTER,t.NEAREST),t.texParameteri(s,t.TEXTURE_MAG_FILTER,t.NEAREST),n[s]=o),i.set(e,{textureGPU:o,glTextureType:s,isDefault:!0})}createTexture(e,t){const{gl:i,backend:n}=this,{levels:s,width:o,height:a,depth:l}=t,c=n.utils.convert(e.format,e.colorSpace),u=n.utils.convert(e.type),h=this.getInternalFormat(e.internalFormat,c,u,e.colorSpace,e.isVideoTexture),d=i.createTexture(),f=this.getGLTextureType(e);n.state.bindTexture(f,d),this.setTextureParameters(f,e),e.isArrayTexture||e.isDataArrayTexture||e.isCompressedArrayTexture?i.texStorage3D(i.TEXTURE_2D_ARRAY,s,h,o,a,l):e.isData3DTexture?i.texStorage3D(i.TEXTURE_3D,s,h,o,a,l):e.isVideoTexture||i.texStorage2D(f,s,h,o,a),n.set(e,{textureGPU:d,glTextureType:f,glFormat:c,glType:u,glInternalFormat:h})}copyBufferToTexture(e,t){const{gl:i,backend:n}=this,{textureGPU:s,glTextureType:o,glFormat:a,glType:l}=n.get(t),{width:c,height:u}=t.source.data;i.bindBuffer(i.PIXEL_UNPACK_BUFFER,e),n.state.bindTexture(o,s),i.pixelStorei(i.UNPACK_FLIP_Y_WEBGL,!1),i.pixelStorei(i.UNPACK_PREMULTIPLY_ALPHA_WEBGL,!1),i.texSubImage2D(o,0,0,0,c,u,a,l,0),i.bindBuffer(i.PIXEL_UNPACK_BUFFER,null),n.state.unbindTexture()}updateTexture(e,t){const{gl:i}=this,{width:n,height:s}=t,{textureGPU:o,glTextureType:a,glFormat:l,glType:c,glInternalFormat:u}=this.backend.get(e);if(!(e.isRenderTargetTexture||o===void 0))if(this.backend.state.bindTexture(a,o),this.setTextureParameters(a,e),e.isCompressedTexture){const h=e.mipmaps,d=t.image;for(let f=0;f<h.length;f++){const p=h[f];e.isCompressedArrayTexture?e.format!==i.RGBA?l!==null?i.compressedTexSubImage3D(i.TEXTURE_2D_ARRAY,f,0,0,0,p.width,p.height,d.depth,l,p.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):i.texSubImage3D(i.TEXTURE_2D_ARRAY,f,0,0,0,p.width,p.height,d.depth,l,c,p.data):l!==null?i.compressedTexSubImage2D(i.TEXTURE_2D,f,0,0,p.width,p.height,l,p.data):console.warn("Unsupported compressed texture format")}}else if(e.isCubeTexture){const h=t.images;for(let d=0;d<6;d++){const f=by(h[d]);i.texSubImage2D(i.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,0,0,n,s,l,c,f)}}else if(e.isDataArrayTexture||e.isArrayTexture){const h=t.image;i.texSubImage3D(i.TEXTURE_2D_ARRAY,0,0,0,0,h.width,h.height,h.depth,l,c,h.data)}else if(e.isData3DTexture){const h=t.image;i.texSubImage3D(i.TEXTURE_3D,0,0,0,0,h.width,h.height,h.depth,l,c,h.data)}else if(e.isVideoTexture)e.update(),i.texImage2D(a,0,u,l,c,t.image);else{const h=by(t.image);i.texSubImage2D(a,0,0,0,n,s,l,c,h)}}generateMipmaps(e){const{gl:t,backend:i}=this,{textureGPU:n,glTextureType:s}=i.get(e);i.state.bindTexture(s,n),t.generateMipmap(s)}deallocateRenderBuffers(e){const{gl:t,backend:i}=this;if(e){const n=i.get(e);if(n.renderBufferStorageSetup=void 0,n.framebuffers){for(const s in n.framebuffers)t.deleteFramebuffer(n.framebuffers[s]);delete n.framebuffers}if(n.depthRenderbuffer&&(t.deleteRenderbuffer(n.depthRenderbuffer),delete n.depthRenderbuffer),n.stencilRenderbuffer&&(t.deleteRenderbuffer(n.stencilRenderbuffer),delete n.stencilRenderbuffer),n.msaaFrameBuffer&&(t.deleteFramebuffer(n.msaaFrameBuffer),delete n.msaaFrameBuffer),n.msaaRenderbuffers){for(let s=0;s<n.msaaRenderbuffers.length;s++)t.deleteRenderbuffer(n.msaaRenderbuffers[s]);delete n.msaaRenderbuffers}}}destroyTexture(e){const{gl:t,backend:i}=this,{textureGPU:n,renderTarget:s}=i.get(e);this.deallocateRenderBuffers(s),t.deleteTexture(n),i.delete(e)}copyTextureToTexture(e,t,i=null,n=null,s=0,o=0){const{gl:a,backend:l}=this,{state:c}=this.backend,{textureGPU:u,glTextureType:h,glType:d,glFormat:f}=l.get(t);c.bindTexture(h,u);let p,_,g,m,b,y,x,S,w;const M=e.isCompressedTexture?e.mipmaps[o]:e.image;if(i!==null)p=i.max.x-i.min.x,_=i.max.y-i.min.y,g=i.isBox3?i.max.z-i.min.z:1,m=i.min.x,b=i.min.y,y=i.isBox3?i.min.z:0;else{const G=Math.pow(2,-s);p=Math.floor(M.width*G),_=Math.floor(M.height*G),e.isDataArrayTexture||e.isArrayTexture?g=M.depth:e.isData3DTexture?g=Math.floor(M.depth*G):g=1,m=0,b=0,y=0}n!==null?(x=n.x,S=n.y,w=n.z):(x=0,S=0,w=0),a.pixelStorei(a.UNPACK_FLIP_Y_WEBGL,t.flipY),a.pixelStorei(a.UNPACK_PREMULTIPLY_ALPHA_WEBGL,t.premultiplyAlpha),a.pixelStorei(a.UNPACK_ALIGNMENT,t.unpackAlignment);const R=a.getParameter(a.UNPACK_ROW_LENGTH),T=a.getParameter(a.UNPACK_IMAGE_HEIGHT),E=a.getParameter(a.UNPACK_SKIP_PIXELS),C=a.getParameter(a.UNPACK_SKIP_ROWS),k=a.getParameter(a.UNPACK_SKIP_IMAGES);a.pixelStorei(a.UNPACK_ROW_LENGTH,M.width),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,M.height),a.pixelStorei(a.UNPACK_SKIP_PIXELS,m),a.pixelStorei(a.UNPACK_SKIP_ROWS,b),a.pixelStorei(a.UNPACK_SKIP_IMAGES,y);const U=t.isDataArrayTexture||t.isData3DTexture||t.isArrayTexture;if(e.isRenderTargetTexture||e.isDepthTexture){const G=l.get(e),Y=l.get(t),W=l.get(G.renderTarget),Q=l.get(Y.renderTarget),H=W.framebuffers[G.cacheKey],ie=Q.framebuffers[Y.cacheKey];c.bindFramebuffer(a.READ_FRAMEBUFFER,H),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,ie);let ae=a.COLOR_BUFFER_BIT;e.isDepthTexture&&(ae=a.DEPTH_BUFFER_BIT),a.blitFramebuffer(m,b,p,_,x,S,p,_,ae,a.NEAREST),c.bindFramebuffer(a.READ_FRAMEBUFFER,null),c.bindFramebuffer(a.DRAW_FRAMEBUFFER,null)}else U?e.isDataTexture||e.isData3DTexture?a.texSubImage3D(h,o,x,S,w,p,_,g,f,d,M.data):t.isCompressedArrayTexture?a.compressedTexSubImage3D(h,o,x,S,w,p,_,g,f,M.data):a.texSubImage3D(h,o,x,S,w,p,_,g,f,d,M):e.isDataTexture?a.texSubImage2D(h,o,x,S,p,_,f,d,M.data):e.isCompressedTexture?a.compressedTexSubImage2D(h,o,x,S,M.width,M.height,f,M.data):a.texSubImage2D(h,o,x,S,p,_,f,d,M);a.pixelStorei(a.UNPACK_ROW_LENGTH,R),a.pixelStorei(a.UNPACK_IMAGE_HEIGHT,T),a.pixelStorei(a.UNPACK_SKIP_PIXELS,E),a.pixelStorei(a.UNPACK_SKIP_ROWS,C),a.pixelStorei(a.UNPACK_SKIP_IMAGES,k),o===0&&t.generateMipmaps&&a.generateMipmap(h),c.unbindTexture()}copyFramebufferToTexture(e,t,i){const{gl:n}=this,{state:s}=this.backend,{textureGPU:o}=this.backend.get(e),{x:a,y:l,z:c,w:u}=i,h=e.isDepthTexture===!0||t.renderTarget&&t.renderTarget.samples>0,d=t.renderTarget?t.renderTarget.height:this.backend.getDrawingBufferSize().y;if(h){const f=a!==0||l!==0;let p,_;if(e.isDepthTexture===!0?(p=n.DEPTH_BUFFER_BIT,_=n.DEPTH_ATTACHMENT,t.stencil&&(p|=n.STENCIL_BUFFER_BIT)):(p=n.COLOR_BUFFER_BIT,_=n.COLOR_ATTACHMENT0),f){const g=this.backend.get(t.renderTarget),m=g.framebuffers[t.getCacheKey()],b=g.msaaFrameBuffer;s.bindFramebuffer(n.DRAW_FRAMEBUFFER,m),s.bindFramebuffer(n.READ_FRAMEBUFFER,b);const y=d-l-u;n.blitFramebuffer(a,y,a+c,y+u,a,y,a+c,y+u,p,n.NEAREST),s.bindFramebuffer(n.READ_FRAMEBUFFER,m),s.bindTexture(n.TEXTURE_2D,o),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,y,c,u),s.unbindTexture()}else{const g=n.createFramebuffer();s.bindFramebuffer(n.DRAW_FRAMEBUFFER,g),n.framebufferTexture2D(n.DRAW_FRAMEBUFFER,_,n.TEXTURE_2D,o,0),n.blitFramebuffer(0,0,c,u,0,0,c,u,p,n.NEAREST),n.deleteFramebuffer(g)}}else s.bindTexture(n.TEXTURE_2D,o),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,a,d-u-l,c,u),s.unbindTexture();e.generateMipmaps&&this.generateMipmaps(e),this.backend._setFramebuffer(t)}setupRenderBufferStorage(e,t,i,n=!1){const{gl:s}=this,o=t.renderTarget,{depthTexture:a,depthBuffer:l,stencilBuffer:c,width:u,height:h}=o;if(s.bindRenderbuffer(s.RENDERBUFFER,e),l&&!c){let d=s.DEPTH_COMPONENT24;n===!0?this.extensions.get("WEBGL_multisampled_render_to_texture").renderbufferStorageMultisampleEXT(s.RENDERBUFFER,o.samples,d,u,h):i>0?(a&&a.isDepthTexture&&a.type===s.FLOAT&&(d=s.DEPTH_COMPONENT32F),s.renderbufferStorageMultisample(s.RENDERBUFFER,i,d,u,h)):s.renderbufferStorage(s.RENDERBUFFER,d,u,h),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_ATTACHMENT,s.RENDERBUFFER,e)}else l&&c&&(i>0?s.renderbufferStorageMultisample(s.RENDERBUFFER,i,s.DEPTH24_STENCIL8,u,h):s.renderbufferStorage(s.RENDERBUFFER,s.DEPTH_STENCIL,u,h),s.framebufferRenderbuffer(s.FRAMEBUFFER,s.DEPTH_STENCIL_ATTACHMENT,s.RENDERBUFFER,e));s.bindRenderbuffer(s.RENDERBUFFER,null)}async copyTextureToBuffer(e,t,i,n,s,o){const{backend:a,gl:l}=this,{textureGPU:c,glFormat:u,glType:h}=this.backend.get(e),d=l.createFramebuffer();l.bindFramebuffer(l.READ_FRAMEBUFFER,d);const f=e.isCubeTexture?l.TEXTURE_CUBE_MAP_POSITIVE_X+o:l.TEXTURE_2D;l.framebufferTexture2D(l.READ_FRAMEBUFFER,l.COLOR_ATTACHMENT0,f,c,0);const p=this._getTypedArrayType(h),_=this._getBytesPerTexel(h,u),m=n*s*_,b=l.createBuffer();l.bindBuffer(l.PIXEL_PACK_BUFFER,b),l.bufferData(l.PIXEL_PACK_BUFFER,m,l.STREAM_READ),l.readPixels(t,i,n,s,u,h,0),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),await a.utils._clientWaitAsync();const y=new p(m/p.BYTES_PER_ELEMENT);return l.bindBuffer(l.PIXEL_PACK_BUFFER,b),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,y),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),l.deleteFramebuffer(d),y}_getTypedArrayType(e){const{gl:t}=this;if(e===t.UNSIGNED_BYTE)return Uint8Array;if(e===t.UNSIGNED_SHORT_4_4_4_4||e===t.UNSIGNED_SHORT_5_5_5_1||e===t.UNSIGNED_SHORT_5_6_5||e===t.UNSIGNED_SHORT)return Uint16Array;if(e===t.UNSIGNED_INT)return Uint32Array;if(e===t.HALF_FLOAT)return Uint16Array;if(e===t.FLOAT)return Float32Array;throw new Error(`Unsupported WebGL type: ${e}`)}_getBytesPerTexel(e,t){const{gl:i}=this;let n=0;if(e===i.UNSIGNED_BYTE&&(n=1),(e===i.UNSIGNED_SHORT_4_4_4_4||e===i.UNSIGNED_SHORT_5_5_5_1||e===i.UNSIGNED_SHORT_5_6_5||e===i.UNSIGNED_SHORT||e===i.HALF_FLOAT)&&(n=2),(e===i.UNSIGNED_INT||e===i.FLOAT)&&(n=4),t===i.RGBA)return n*4;if(t===i.RGB)return n*3;if(t===i.ALPHA)return n}}function by(r){return r.isDataTexture?r.image.data:typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap||typeof OffscreenCanvas<"u"&&r instanceof OffscreenCanvas?r:r.data}class a3{constructor(e){this.backend=e,this.gl=this.backend.gl,this.availableExtensions=this.gl.getSupportedExtensions(),this.extensions={}}get(e){let t=this.extensions[e];return t===void 0&&(t=this.gl.getExtension(e),this.extensions[e]=t),t}has(e){return this.availableExtensions.includes(e)}}class l3{constructor(e){this.backend=e,this.maxAnisotropy=null}getMaxAnisotropy(){if(this.maxAnisotropy!==null)return this.maxAnisotropy;const e=this.backend.gl,t=this.backend.extensions;if(t.has("EXT_texture_filter_anisotropic")===!0){const i=t.get("EXT_texture_filter_anisotropic");this.maxAnisotropy=e.getParameter(i.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else this.maxAnisotropy=0;return this.maxAnisotropy}}const Ty={WEBGL_multi_draw:"WEBGL_multi_draw",WEBGL_compressed_texture_astc:"texture-compression-astc",WEBGL_compressed_texture_etc:"texture-compression-etc2",WEBGL_compressed_texture_etc1:"texture-compression-etc1",WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBKIT_WEBGL_compressed_texture_pvrtc:"texture-compression-pvrtc",WEBGL_compressed_texture_s3tc:"texture-compression-bc",EXT_texture_compression_bptc:"texture-compression-bptc",EXT_disjoint_timer_query_webgl2:"timestamp-query",OVR_multiview2:"OVR_multiview2"};class c3{constructor(e){this.gl=e.gl,this.extensions=e.extensions,this.info=e.renderer.info,this.mode=null,this.index=0,this.type=null,this.object=null}render(e,t){const{gl:i,mode:n,object:s,type:o,info:a,index:l}=this;l!==0?i.drawElements(n,t,o,e):i.drawArrays(n,e,t),a.update(s,t,1)}renderInstances(e,t,i){const{gl:n,mode:s,type:o,index:a,object:l,info:c}=this;i!==0&&(a!==0?n.drawElementsInstanced(s,t,o,e,i):n.drawArraysInstanced(s,e,t,i),c.update(l,t,i))}renderMultiDraw(e,t,i){const{extensions:n,mode:s,object:o,info:a}=this;if(i===0)return;const l=n.get("WEBGL_multi_draw");if(l===null)for(let c=0;c<i;c++)this.render(e[c],t[c]);else{this.index!==0?l.multiDrawElementsWEBGL(s,t,0,this.type,e,0,i):l.multiDrawArraysWEBGL(s,e,0,t,0,i);let c=0;for(let u=0;u<i;u++)c+=t[u];a.update(o,c,1)}}renderMultiDrawInstances(e,t,i,n){const{extensions:s,mode:o,object:a,info:l}=this;if(i===0)return;const c=s.get("WEBGL_multi_draw");if(c===null)for(let u=0;u<i;u++)this.renderInstances(e[u],t[u],n[u]);else{this.index!==0?c.multiDrawElementsInstancedWEBGL(o,t,0,this.type,e,0,n,0,i):c.multiDrawArraysInstancedWEBGL(o,e,0,t,0,n,0,i);let u=0;for(let h=0;h<i;h++)u+=t[h]*n[h];l.update(a,u,1)}}}class US{constructor(e=256){this.trackTimestamp=!0,this.maxQueries=e,this.currentQueryIndex=0,this.queryOffsets=new Map,this.isDisposed=!1,this.lastValue=0,this.pendingResolve=!1}allocateQueriesForContext(){}async resolveQueriesAsync(){}dispose(){}}class u3 extends US{constructor(e,t,i=2048){if(super(i),this.gl=e,this.type=t,this.ext=e.getExtension("EXT_disjoint_timer_query_webgl2")||e.getExtension("EXT_disjoint_timer_query"),!this.ext){console.warn("EXT_disjoint_timer_query not supported; timestamps will be disabled."),this.trackTimestamp=!1;return}this.queries=[];for(let n=0;n<this.maxQueries;n++)this.queries.push(e.createQuery());this.activeQuery=null,this.queryStates=new Map}allocateQueriesForContext(e){if(!this.trackTimestamp)return null;if(this.currentQueryIndex+2>this.maxQueries)return Zi(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryStates.set(t,"inactive"),this.queryOffsets.set(e.id,t),t}beginQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t==null||this.activeQuery!==null)return;const i=this.queries[t];if(i)try{this.queryStates.get(t)==="inactive"&&(this.gl.beginQuery(this.ext.TIME_ELAPSED_EXT,i),this.activeQuery=t,this.queryStates.set(t,"started"))}catch(n){console.error("Error in beginQuery:",n),this.activeQuery=null,this.queryStates.set(t,"inactive")}}endQuery(e){if(!this.trackTimestamp||this.isDisposed)return;const t=this.queryOffsets.get(e.id);if(t!=null&&this.activeQuery===t)try{this.gl.endQuery(this.ext.TIME_ELAPSED_EXT),this.queryStates.set(t,"ended"),this.activeQuery=null}catch(i){console.error("Error in endQuery:",i),this.queryStates.set(t,"inactive"),this.activeQuery=null}}async resolveQueriesAsync(){if(!this.trackTimestamp||this.pendingResolve)return this.lastValue;this.pendingResolve=!0;try{const e=[];for(const[n,s]of this.queryStates)if(s==="ended"){const o=this.queries[n];e.push(this.resolveQuery(o))}if(e.length===0)return this.lastValue;const i=(await Promise.all(e)).reduce((n,s)=>n+s,0);return this.lastValue=i,this.currentQueryIndex=0,this.queryOffsets.clear(),this.queryStates.clear(),this.activeQuery=null,i}catch(e){return console.error("Error resolving queries:",e),this.lastValue}finally{this.pendingResolve=!1}}async resolveQuery(e){return new Promise(t=>{if(this.isDisposed){t(this.lastValue);return}let i,n=!1;const s=()=>{i&&(clearTimeout(i),i=null)},o=l=>{n||(n=!0,s(),t(l))},a=()=>{if(this.isDisposed){o(this.lastValue);return}try{if(this.gl.getParameter(this.ext.GPU_DISJOINT_EXT)){o(this.lastValue);return}if(!this.gl.getQueryParameter(e,this.gl.QUERY_RESULT_AVAILABLE)){i=setTimeout(a,1);return}const u=this.gl.getQueryParameter(e,this.gl.QUERY_RESULT);t(Number(u)/1e6)}catch(l){console.error("Error checking query:",l),t(this.lastValue)}};a()})}dispose(){if(!this.isDisposed&&(this.isDisposed=!0,!!this.trackTimestamp)){for(const e of this.queries)this.gl.deleteQuery(e);this.queries=[],this.queryStates.clear(),this.queryOffsets.clear(),this.lastValue=0,this.activeQuery=null}}}class Sy extends FS{constructor(e={}){super(e),this.isWebGLBackend=!0,this.attributeUtils=null,this.extensions=null,this.capabilities=null,this.textureUtils=null,this.bufferRenderer=null,this.gl=null,this.state=null,this.utils=null,this.vaoCache={},this.transformFeedbackCache={},this.discard=!1,this.disjoint=null,this.parallel=null,this._currentContext=null,this._knownBindings=new WeakSet,this._supportsInvalidateFramebuffer=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),this._xrFramebuffer=null}init(e){super.init(e);const t=this.parameters,i={antialias:e.samples>0,alpha:!0,depth:e.depth,stencil:e.stencil},n=t.context!==void 0?t.context:e.domElement.getContext("webgl2",i);function s(o){o.preventDefault();const a={api:"WebGL",message:o.statusMessage||"Unknown reason",reason:null,originalEvent:o};e.onDeviceLost(a)}this._onContextLost=s,e.domElement.addEventListener("webglcontextlost",s,!1),this.gl=n,this.extensions=new a3(this),this.capabilities=new l3(this),this.attributeUtils=new n3(this),this.textureUtils=new o3(this),this.bufferRenderer=new c3(this),this.state=new s3(this),this.utils=new r3(this),this.extensions.get("EXT_color_buffer_float"),this.extensions.get("WEBGL_clip_cull_distance"),this.extensions.get("OES_texture_float_linear"),this.extensions.get("EXT_color_buffer_half_float"),this.extensions.get("WEBGL_multisampled_render_to_texture"),this.extensions.get("WEBGL_render_shared_exponent"),this.extensions.get("WEBGL_multi_draw"),this.extensions.get("OVR_multiview2"),this.disjoint=this.extensions.get("EXT_disjoint_timer_query_webgl2"),this.parallel=this.extensions.get("KHR_parallel_shader_compile")}get coordinateSystem(){return Ri}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}async waitForGPU(){await this.utils._clientWaitAsync()}async makeXRCompatible(){this.gl.getContextAttributes().xrCompatible!==!0&&await this.gl.makeXRCompatible()}setXRTarget(e){this._xrFramebuffer=e}setXRRenderTargetTextures(e,t,i=null){const n=this.gl;if(this.set(e.texture,{textureGPU:t,glInternalFormat:n.RGBA8}),i!==null){const s=e.stencilBuffer?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24;this.set(e.depthTexture,{textureGPU:i,glInternalFormat:s}),this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer===!0&&e.multiview===!1&&console.warn("THREE.WebGLBackend: Render-to-texture extension was disabled because an external texture was provided"),e._autoAllocateDepthBuffer=!1}}initTimestampQuery(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t]||(this.timestampQueryPool[t]=new u3(this.gl,t,2048));const i=this.timestampQueryPool[t];i.allocateQueriesForContext(e)!==null&&i.beginQuery(e)}prepareTimestampBuffer(e){if(!this.disjoint||!this.trackTimestamp)return;const t=e.isComputeNode?"compute":"render";this.timestampQueryPool[t].endQuery(e)}getContext(){return this.gl}beginRender(e){const{state:t}=this,i=this.get(e);if(e.viewport)this.updateViewport(e);else{const{width:s,height:o}=this.getDrawingBufferSize();t.viewport(0,0,s,o)}if(e.scissor){const{x:s,y:o,width:a,height:l}=e.scissorValue;t.scissor(s,e.height-l-o,a,l)}this.initTimestampQuery(e),i.previousContext=this._currentContext,this._currentContext=e,this._setFramebuffer(e),this.clear(e.clearColor,e.clearDepth,e.clearStencil,e,!1);const n=e.occlusionQueryCount;n>0&&(i.currentOcclusionQueries=i.occlusionQueries,i.currentOcclusionQueryObjects=i.occlusionQueryObjects,i.lastOcclusionObject=null,i.occlusionQueries=new Array(n),i.occlusionQueryObjects=new Array(n),i.occlusionQueryIndex=0)}finishRender(e){const{gl:t,state:i}=this,n=this.get(e),s=n.previousContext;i.resetVertexState();const o=e.occlusionQueryCount;o>0&&(o>n.occlusionQueryIndex&&t.endQuery(t.ANY_SAMPLES_PASSED),this.resolveOccludedAsync(e));const a=e.textures;if(a!==null)for(let c=0;c<a.length;c++){const u=a[c];u.generateMipmaps&&this.generateMipmaps(u)}this._currentContext=s;const l=e.renderTarget;if(e.textures!==null&&l){const c=this.get(l);if(l.samples>0&&this._useMultisampledExtension(l)===!1){const u=c.framebuffers[e.getCacheKey()];let h=t.COLOR_BUFFER_BIT;l.resolveDepthBuffer&&(l.depthBuffer&&(h|=t.DEPTH_BUFFER_BIT),l.stencilBuffer&&l.resolveStencilBuffer&&(h|=t.STENCIL_BUFFER_BIT));const d=c.msaaFrameBuffer,f=c.msaaRenderbuffers,p=e.textures,_=p.length>1;if(i.bindFramebuffer(t.READ_FRAMEBUFFER,d),i.bindFramebuffer(t.DRAW_FRAMEBUFFER,u),_)for(let g=0;g<p.length;g++)t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+g,t.RENDERBUFFER,null),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+g,t.TEXTURE_2D,null,0);for(let g=0;g<p.length;g++){if(_){const{textureGPU:m}=this.get(p[g]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.RENDERBUFFER,f[g]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,m,0)}if(e.scissor){const{x:m,y:b,width:y,height:x}=e.scissorValue,S=e.height-x-b;t.blitFramebuffer(m,S,m+y,S+x,m,S,m+y,S+x,h,t.NEAREST)}else t.blitFramebuffer(0,0,e.width,e.height,0,0,e.width,e.height,h,t.NEAREST)}if(_)for(let g=0;g<p.length;g++){const{textureGPU:m}=this.get(p[g]);t.framebufferRenderbuffer(t.READ_FRAMEBUFFER,t.COLOR_ATTACHMENT0+g,t.RENDERBUFFER,f[g]),t.framebufferTexture2D(t.DRAW_FRAMEBUFFER,t.COLOR_ATTACHMENT0+g,t.TEXTURE_2D,m,0)}this._supportsInvalidateFramebuffer===!0&&t.invalidateFramebuffer(t.READ_FRAMEBUFFER,c.invalidationArray)}else if(l.resolveDepthBuffer===!1&&c.framebuffers){const u=c.framebuffers[e.getCacheKey()];i.bindFramebuffer(t.DRAW_FRAMEBUFFER,u),t.invalidateFramebuffer(t.DRAW_FRAMEBUFFER,c.depthInvalidationArray)}}if(s!==null)if(this._setFramebuffer(s),s.viewport)this.updateViewport(s);else{const{width:c,height:u}=this.getDrawingBufferSize();i.viewport(0,0,c,u)}this.prepareTimestampBuffer(e)}resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueries:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const s=new WeakSet,{gl:o}=this;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueries=null;const a=()=>{let l=0;for(let c=0;c<i.length;c++){const u=i[c];u!==null&&o.getQueryParameter(u,o.QUERY_RESULT_AVAILABLE)&&(o.getQueryParameter(u,o.QUERY_RESULT)===0&&s.add(n[c]),i[c]=null,o.deleteQuery(u),l++)}l<i.length?requestAnimationFrame(a):t.occluded=s};a()}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}updateViewport(e){const{state:t}=this,{x:i,y:n,width:s,height:o}=e.viewportValue;t.viewport(i,e.height-o-n,s,o)}setScissorTest(e){this.state.setScissorTest(e)}getClearColor(){const e=super.getClearColor();return e.r*=e.a,e.g*=e.a,e.b*=e.a,e}clear(e,t,i,n=null,s=!0){const{gl:o,renderer:a}=this;n===null&&(n={textures:null,clearColorValue:this.getClearColor()});let l=0;if(e&&(l|=o.COLOR_BUFFER_BIT),t&&(l|=o.DEPTH_BUFFER_BIT),i&&(l|=o.STENCIL_BUFFER_BIT),l!==0){let c;n.clearColorValue?c=n.clearColorValue:c=this.getClearColor();const u=a.getClearDepth(),h=a.getClearStencil();if(t&&this.state.setDepthMask(!0),n.textures===null)o.clearColor(c.r,c.g,c.b,c.a),o.clear(l);else{if(s&&this._setFramebuffer(n),e)for(let d=0;d<n.textures.length;d++)d===0?o.clearBufferfv(o.COLOR,d,[c.r,c.g,c.b,c.a]):o.clearBufferfv(o.COLOR,d,[0,0,0,1]);t&&i?o.clearBufferfi(o.DEPTH_STENCIL,0,u,h):t?o.clearBufferfv(o.DEPTH,0,[u]):i&&o.clearBufferiv(o.STENCIL,0,[h])}}}beginCompute(e){const{state:t,gl:i}=this;t.bindFramebuffer(i.FRAMEBUFFER,null),this.initTimestampQuery(e)}compute(e,t,i,n,s=null){const{state:o,gl:a}=this;this.discard===!1&&(a.enable(a.RASTERIZER_DISCARD),this.discard=!0);const{programGPU:l,transformBuffers:c,attributes:u}=this.get(n),h=this._getVaoKey(u),d=this.vaoCache[h];d===void 0?this.vaoCache[h]=this._createVao(u):o.setVertexState(d),o.useProgram(l),this._bindUniforms(i);const f=this._getTransformFeedback(c);a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,f),a.beginTransformFeedback(a.POINTS),s=s!==null?s:t.count,Array.isArray(s)&&(Zi("WebGLBackend.compute(): The count parameter must be a single number, not an array."),s=s[0]),u[0].isStorageInstancedBufferAttribute?a.drawArraysInstanced(a.POINTS,0,1,s):a.drawArrays(a.POINTS,0,s),a.endTransformFeedback(),a.bindTransformFeedback(a.TRANSFORM_FEEDBACK,null);for(let p=0;p<c.length;p++){const _=c[p];_.pbo&&this.has(_.pbo)&&this.textureUtils.copyBufferToTexture(_.transformBuffer,_.pbo),_.switchBuffers()}}finishCompute(e){const t=this.gl;this.discard=!1,t.disable(t.RASTERIZER_DISCARD),this.prepareTimestampBuffer(e),this._currentContext&&this._setFramebuffer(this._currentContext)}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.isArrayTexture&&e.camera.isArrayCamera}draw(e){const{object:t,pipeline:i,material:n,context:s,hardwareClippingPlanes:o}=e,{programGPU:a}=this.get(i),{gl:l,state:c}=this,u=this.get(s),h=e.getDrawParameters();if(h===null)return;this._bindUniforms(e.getBindings());const d=t.isMesh&&t.matrixWorld.determinant()<0;c.setMaterial(n,d,o),c.useProgram(a);const f=e.getAttributes(),p=this.get(f);let _=p.vaoGPU;if(_===void 0){const R=this._getVaoKey(f);_=this.vaoCache[R],_===void 0&&(_=this._createVao(f),this.vaoCache[R]=_,p.vaoGPU=_)}const g=e.getIndex(),m=g!==null?this.get(g).bufferGPU:null;c.setVertexState(_,m);const b=u.lastOcclusionObject;if(b!==t&&b!==void 0){if(b!==null&&b.occlusionTest===!0&&(l.endQuery(l.ANY_SAMPLES_PASSED),u.occlusionQueryIndex++),t.occlusionTest===!0){const R=l.createQuery();l.beginQuery(l.ANY_SAMPLES_PASSED,R),u.occlusionQueries[u.occlusionQueryIndex]=R,u.occlusionQueryObjects[u.occlusionQueryIndex]=t}u.lastOcclusionObject=t}const y=this.bufferRenderer;t.isPoints?y.mode=l.POINTS:t.isLineSegments?y.mode=l.LINES:t.isLine?y.mode=l.LINE_STRIP:t.isLineLoop?y.mode=l.LINE_LOOP:n.wireframe===!0?(c.setLineWidth(n.wireframeLinewidth*this.renderer.getPixelRatio()),y.mode=l.LINES):y.mode=l.TRIANGLES;const{vertexCount:x,instanceCount:S}=h;let{firstVertex:w}=h;if(y.object=t,g!==null){w*=g.array.BYTES_PER_ELEMENT;const R=this.get(g);y.index=g.count,y.type=R.type}else y.index=0;const M=()=>{t.isBatchedMesh?t._multiDrawInstances!==null?(Zi("THREE.WebGLBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection."),y.renderMultiDrawInstances(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount,t._multiDrawInstances)):this.hasFeature("WEBGL_multi_draw")?y.renderMultiDraw(t._multiDrawStarts,t._multiDrawCounts,t._multiDrawCount):Zi("THREE.WebGLRenderer: WEBGL_multi_draw not supported."):S>1?y.renderInstances(w,x,S):y.render(w,x)};if(e.camera.isArrayCamera===!0&&e.camera.cameras.length>0&&e.camera.isMultiViewCamera===!1){const R=this.get(e.camera),T=e.camera.cameras,E=e.getBindingGroup("cameraIndex").bindings[0];if(R.indexesGPU===void 0||R.indexesGPU.length!==T.length){const W=new Uint32Array([0,0,0,0]),Q=[];for(let H=0,ie=T.length;H<ie;H++){const ae=l.createBuffer();W[0]=H,l.bindBuffer(l.UNIFORM_BUFFER,ae),l.bufferData(l.UNIFORM_BUFFER,W,l.STATIC_DRAW),Q.push(ae)}R.indexesGPU=Q}const C=this.get(E),k=this.renderer.getPixelRatio(),U=this._currentContext.renderTarget,G=this._isRenderCameraDepthArray(this._currentContext),Y=this._currentContext.activeCubeFace;if(G){const W=this.get(U.depthTexture);if(W.clearedRenderId!==this.renderer._nodes.nodeFrame.renderId){W.clearedRenderId=this.renderer._nodes.nodeFrame.renderId;const{stencilBuffer:Q}=U;for(let H=0,ie=T.length;H<ie;H++)this.renderer._activeCubeFace=H,this._currentContext.activeCubeFace=H,this._setFramebuffer(this._currentContext),this.clear(!1,!0,Q,this._currentContext,!1);this.renderer._activeCubeFace=Y,this._currentContext.activeCubeFace=Y}}for(let W=0,Q=T.length;W<Q;W++){const H=T[W];if(t.layers.test(H.layers)){G&&(this.renderer._activeCubeFace=W,this._currentContext.activeCubeFace=W,this._setFramebuffer(this._currentContext));const ie=H.viewport;if(ie!==void 0){const ae=ie.x*k,Te=ie.y*k,$e=ie.width*k,gt=ie.height*k;c.viewport(Math.floor(ae),Math.floor(e.context.height-gt-Te),Math.floor($e),Math.floor(gt))}c.bindBufferBase(l.UNIFORM_BUFFER,C.index,R.indexesGPU[W]),M()}this._currentContext.activeCubeFace=Y,this.renderer._activeCubeFace=Y}}else M()}needsRenderUpdate(){return!1}getRenderCacheKey(){return""}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,i,n,s,o){return this.textureUtils.copyTextureToBuffer(e,t,i,n,s,o)}createSampler(){}destroySampler(){}createNodeBuilder(e,t){return new e3(e,t)}createProgram(e){const t=this.gl,{stage:i,code:n}=e,s=i==="fragment"?t.createShader(t.FRAGMENT_SHADER):t.createShader(t.VERTEX_SHADER);t.shaderSource(s,n),t.compileShader(s),this.set(e,{shaderGPU:s})}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){const i=this.gl,n=e.pipeline,{fragmentProgram:s,vertexProgram:o}=n,a=i.createProgram(),l=this.get(s).shaderGPU,c=this.get(o).shaderGPU;if(i.attachShader(a,l),i.attachShader(a,c),i.linkProgram(a),this.set(n,{programGPU:a,fragmentShader:l,vertexShader:c}),t!==null&&this.parallel){const u=new Promise(h=>{const d=this.parallel,f=()=>{i.getProgramParameter(a,d.COMPLETION_STATUS_KHR)?(this._completeCompile(e,n),h()):requestAnimationFrame(f)};f()});t.push(u);return}this._completeCompile(e,n)}_handleSource(e,t){const i=e.split(`
`),n=[],s=Math.max(t-6,0),o=Math.min(t+6,i.length);for(let a=s;a<o;a++){const l=a+1;n.push(`${l===t?">":" "} ${l}: ${i[a]}`)}return n.join(`
`)}_getShaderErrors(e,t,i){const n=e.getShaderParameter(t,e.COMPILE_STATUS),o=(e.getShaderInfoLog(t)||"").trim();if(n&&o==="")return"";const a=/ERROR: 0:(\d+)/.exec(o);if(a){const l=parseInt(a[1]);return i.toUpperCase()+`

`+o+`

`+this._handleSource(e.getShaderSource(t),l)}else return o}_logProgramError(e,t,i){if(this.renderer.debug.checkShaderErrors){const n=this.gl,o=(n.getProgramInfoLog(e)||"").trim();if(n.getProgramParameter(e,n.LINK_STATUS)===!1)if(typeof this.renderer.debug.onShaderError=="function")this.renderer.debug.onShaderError(n,e,i,t);else{const a=this._getShaderErrors(n,i,"vertex"),l=this._getShaderErrors(n,t,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(e,n.VALIDATE_STATUS)+`

Program Info Log: `+o+`
`+a+`
`+l)}else o!==""&&console.warn("THREE.WebGLProgram: Program Info Log:",o)}}_completeCompile(e,t){const{state:i,gl:n}=this,s=this.get(t),{programGPU:o,fragmentShader:a,vertexShader:l}=s;n.getProgramParameter(o,n.LINK_STATUS)===!1&&this._logProgramError(o,a,l),i.useProgram(o);const c=e.getBindings();this._setupBindings(c,o),this.set(t,{programGPU:o})}createComputePipeline(e,t){const{state:i,gl:n}=this,s={stage:"fragment",code:`#version 300 es
precision highp float;
void main() {}`};this.createProgram(s);const{computeProgram:o}=e,a=n.createProgram(),l=this.get(s).shaderGPU,c=this.get(o).shaderGPU,u=o.transforms,h=[],d=[];for(let g=0;g<u.length;g++){const m=u[g];h.push(m.varyingName),d.push(m.attributeNode)}n.attachShader(a,l),n.attachShader(a,c),n.transformFeedbackVaryings(a,h,n.SEPARATE_ATTRIBS),n.linkProgram(a),n.getProgramParameter(a,n.LINK_STATUS)===!1&&this._logProgramError(a,l,c),i.useProgram(a),this._setupBindings(t,a);const f=o.attributes,p=[],_=[];for(let g=0;g<f.length;g++){const m=f[g].node.attribute;p.push(m),this.has(m)||this.attributeUtils.createAttribute(m,n.ARRAY_BUFFER)}for(let g=0;g<d.length;g++){const m=d[g].attribute;this.has(m)||this.attributeUtils.createAttribute(m,n.ARRAY_BUFFER);const b=this.get(m);_.push(b)}this.set(e,{programGPU:a,transformBuffers:_,attributes:p})}createBindings(e,t){if(this._knownBindings.has(t)===!1){this._knownBindings.add(t);let i=0,n=0;for(const s of t){this.set(s,{textures:n,uniformBuffers:i});for(const o of s.bindings)o.isUniformBuffer&&i++,o.isSampledTexture&&n++}}this.updateBindings(e,t)}updateBindings(e){const{gl:t}=this,i=this.get(e);let n=i.uniformBuffers,s=i.textures;for(const o of e.bindings)if(o.isUniformsGroup||o.isUniformBuffer){const a=o.buffer,l=t.createBuffer();t.bindBuffer(t.UNIFORM_BUFFER,l),t.bufferData(t.UNIFORM_BUFFER,a,t.DYNAMIC_DRAW),this.set(o,{index:n++,bufferGPU:l})}else if(o.isSampledTexture){const{textureGPU:a,glTextureType:l}=this.get(o.texture);this.set(o,{index:s++,textureGPU:a,glTextureType:l})}}updateBinding(e){const t=this.gl;if(e.isUniformsGroup||e.isUniformBuffer){const n=this.get(e).bufferGPU,s=e.buffer;t.bindBuffer(t.UNIFORM_BUFFER,n),t.bufferData(t.UNIFORM_BUFFER,s,t.DYNAMIC_DRAW)}}createIndexAttribute(e){const t=this.gl;this.attributeUtils.createAttribute(e,t.ELEMENT_ARRAY_BUFFER)}createAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}createStorageAttribute(e){if(this.has(e))return;const t=this.gl;this.attributeUtils.createAttribute(e,t.ARRAY_BUFFER)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}hasFeature(e){const t=Object.keys(Ty).filter(n=>Ty[n]===e),i=this.extensions;for(let n=0;n<t.length;n++)if(i.has(t[n]))return!0;return!1}getMaxAnisotropy(){return this.capabilities.getMaxAnisotropy()}copyTextureToTexture(e,t,i=null,n=null,s=0,o=0){this.textureUtils.copyTextureToTexture(e,t,i,n,s,o)}copyFramebufferToTexture(e,t,i){this.textureUtils.copyFramebufferToTexture(e,t,i)}_setFramebuffer(e){const{gl:t,state:i}=this;let n=null;if(e.textures!==null){const s=e.renderTarget,o=this.get(s),{samples:a,depthBuffer:l,stencilBuffer:c}=s,u=s.isWebGLCubeRenderTarget===!0,h=s.isRenderTarget3D===!0,d=s.depth>1,f=s.isXRRenderTarget===!0,p=f===!0&&s._hasExternalTextures===!0;let _=o.msaaFrameBuffer,g=o.depthRenderbuffer;const m=this.extensions.get("WEBGL_multisampled_render_to_texture"),b=this.extensions.get("OVR_multiview2"),y=this._useMultisampledExtension(s),x=mT(e);let S;if(u?(o.cubeFramebuffers||(o.cubeFramebuffers={}),S=o.cubeFramebuffers[x]):f&&p===!1?S=this._xrFramebuffer:(o.framebuffers||(o.framebuffers={}),S=o.framebuffers[x]),S===void 0){S=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,S);const w=e.textures,M=[];if(u){o.cubeFramebuffers[x]=S;const{textureGPU:T}=this.get(w[0]),E=this.renderer._activeCubeFace;t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_CUBE_MAP_POSITIVE_X+E,T,0)}else{o.framebuffers[x]=S;for(let T=0;T<w.length;T++){const E=w[T],C=this.get(E);C.renderTarget=e.renderTarget,C.cacheKey=x;const k=t.COLOR_ATTACHMENT0+T;if(s.multiview)b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,k,C.textureGPU,0,a,0,2);else if(h||d){const U=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,k,C.textureGPU,0,U)}else y?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,k,t.TEXTURE_2D,C.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,k,t.TEXTURE_2D,C.textureGPU,0)}}const R=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(s._autoAllocateDepthBuffer===!0){const T=t.createRenderbuffer();this.textureUtils.setupRenderBufferStorage(T,e,0,y),o.xrDepthRenderbuffer=T,M.push(c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT),t.bindRenderbuffer(t.RENDERBUFFER,T),t.framebufferRenderbuffer(t.FRAMEBUFFER,R,t.RENDERBUFFER,T)}else if(e.depthTexture!==null){M.push(c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT);const T=this.get(e.depthTexture);if(T.renderTarget=e.renderTarget,T.cacheKey=x,s.multiview)b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,R,T.textureGPU,0,a,0,2);else if(p&&y)m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,R,t.TEXTURE_2D,T.textureGPU,0,a);else if(e.depthTexture.isArrayTexture){const E=this.renderer._activeCubeFace;t.framebufferTextureLayer(t.FRAMEBUFFER,R,T.textureGPU,0,E)}else t.framebufferTexture2D(t.FRAMEBUFFER,R,t.TEXTURE_2D,T.textureGPU,0)}o.depthInvalidationArray=M}else{if(this._isRenderCameraDepthArray(e)){i.bindFramebuffer(t.FRAMEBUFFER,S);const M=this.renderer._activeCubeFace,R=this.get(e.depthTexture),T=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;t.framebufferTextureLayer(t.FRAMEBUFFER,T,R.textureGPU,0,M)}if((f||y||s.multiview)&&s._isOpaqueFramebuffer!==!0){i.bindFramebuffer(t.FRAMEBUFFER,S);const M=this.get(e.textures[0]);s.multiview?b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,M.textureGPU,0,a,0,2):y?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,M.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,M.textureGPU,0);const R=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;if(s._autoAllocateDepthBuffer===!0){const T=o.xrDepthRenderbuffer;t.bindRenderbuffer(t.RENDERBUFFER,T),t.framebufferRenderbuffer(t.FRAMEBUFFER,R,t.RENDERBUFFER,T)}else{const T=this.get(e.depthTexture);s.multiview?b.framebufferTextureMultisampleMultiviewOVR(t.FRAMEBUFFER,R,T.textureGPU,0,a,0,2):y?m.framebufferTexture2DMultisampleEXT(t.FRAMEBUFFER,R,t.TEXTURE_2D,T.textureGPU,0,a):t.framebufferTexture2D(t.FRAMEBUFFER,R,t.TEXTURE_2D,T.textureGPU,0)}}}if(a>0&&y===!1&&!s.multiview){if(_===void 0){const w=[];_=t.createFramebuffer(),i.bindFramebuffer(t.FRAMEBUFFER,_);const M=[],R=e.textures;for(let T=0;T<R.length;T++){M[T]=t.createRenderbuffer(),t.bindRenderbuffer(t.RENDERBUFFER,M[T]),w.push(t.COLOR_ATTACHMENT0+T);const E=e.textures[T],C=this.get(E);t.renderbufferStorageMultisample(t.RENDERBUFFER,a,C.glInternalFormat,e.width,e.height),t.framebufferRenderbuffer(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0+T,t.RENDERBUFFER,M[T])}if(t.bindRenderbuffer(t.RENDERBUFFER,null),o.msaaFrameBuffer=_,o.msaaRenderbuffers=M,l&&g===void 0){g=t.createRenderbuffer(),this.textureUtils.setupRenderBufferStorage(g,e,a),o.depthRenderbuffer=g;const T=c?t.DEPTH_STENCIL_ATTACHMENT:t.DEPTH_ATTACHMENT;w.push(T)}o.invalidationArray=w}n=o.msaaFrameBuffer}else n=S;i.drawBuffers(e,S)}i.bindFramebuffer(t.FRAMEBUFFER,n)}_getVaoKey(e){let t="";for(let i=0;i<e.length;i++){const n=this.get(e[i]);t+=":"+n.id}return t}_createVao(e){const{gl:t}=this,i=t.createVertexArray();t.bindVertexArray(i);for(let n=0;n<e.length;n++){const s=e[n],o=this.get(s);t.bindBuffer(t.ARRAY_BUFFER,o.bufferGPU),t.enableVertexAttribArray(n);let a,l;s.isInterleavedBufferAttribute===!0?(a=s.data.stride*o.bytesPerElement,l=s.offset*o.bytesPerElement):(a=0,l=0),o.isInteger?t.vertexAttribIPointer(n,s.itemSize,o.type,a,l):t.vertexAttribPointer(n,s.itemSize,o.type,s.normalized,a,l),s.isInstancedBufferAttribute&&!s.isInterleavedBufferAttribute?t.vertexAttribDivisor(n,s.meshPerAttribute):s.isInterleavedBufferAttribute&&s.data.isInstancedInterleavedBuffer&&t.vertexAttribDivisor(n,s.data.meshPerAttribute)}return t.bindBuffer(t.ARRAY_BUFFER,null),i}_getTransformFeedback(e){let t="";for(let s=0;s<e.length;s++)t+=":"+e[s].id;let i=this.transformFeedbackCache[t];if(i!==void 0)return i;const{gl:n}=this;i=n.createTransformFeedback(),n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,i);for(let s=0;s<e.length;s++){const o=e[s];n.bindBufferBase(n.TRANSFORM_FEEDBACK_BUFFER,s,o.transformBuffer)}return n.bindTransformFeedback(n.TRANSFORM_FEEDBACK,null),this.transformFeedbackCache[t]=i,i}_setupBindings(e,t){const i=this.gl;for(const n of e)for(const s of n.bindings){const a=this.get(s).index;if(s.isUniformsGroup||s.isUniformBuffer){const l=i.getUniformBlockIndex(t,s.name);i.uniformBlockBinding(t,l,a)}else if(s.isSampledTexture){const l=i.getUniformLocation(t,s.name);i.uniform1i(l,a)}}}_bindUniforms(e){const{gl:t,state:i}=this;for(const n of e)for(const s of n.bindings){const o=this.get(s),a=o.index;s.isUniformsGroup||s.isUniformBuffer?i.bindBufferBase(t.UNIFORM_BUFFER,a,o.bufferGPU):s.isSampledTexture&&i.bindTexture(o.glTextureType,o.textureGPU,t.TEXTURE0+a)}}_useMultisampledExtension(e){return e.multiview===!0?!0:e.samples>0&&this.extensions.has("WEBGL_multisampled_render_to_texture")===!0&&e._autoAllocateDepthBuffer!==!1}dispose(){const e=this.extensions.get("WEBGL_lose_context");e&&e.loseContext(),this.renderer.domElement.removeEventListener("webglcontextlost",this._onContextLost)}}const ca={PointList:"point-list",LineList:"line-list",LineStrip:"line-strip",TriangleList:"triangle-list",TriangleStrip:"triangle-strip"},pi={Never:"never",Less:"less",Equal:"equal",LessEqual:"less-equal",Greater:"greater",NotEqual:"not-equal",GreaterEqual:"greater-equal",Always:"always"},Ii={Store:"store"},ft={Load:"load",Clear:"clear"},lp={CCW:"ccw"},cp={None:"none",Front:"front",Back:"back"},Ja={Uint16:"uint16",Uint32:"uint32"},P={R8Unorm:"r8unorm",R8Snorm:"r8snorm",R8Uint:"r8uint",R8Sint:"r8sint",R16Uint:"r16uint",R16Sint:"r16sint",R16Float:"r16float",RG8Unorm:"rg8unorm",RG8Snorm:"rg8snorm",RG8Uint:"rg8uint",RG8Sint:"rg8sint",R32Uint:"r32uint",R32Sint:"r32sint",R32Float:"r32float",RG16Uint:"rg16uint",RG16Sint:"rg16sint",RG16Float:"rg16float",RGBA8Unorm:"rgba8unorm",RGBA8UnormSRGB:"rgba8unorm-srgb",RGBA8Snorm:"rgba8snorm",RGBA8Uint:"rgba8uint",RGBA8Sint:"rgba8sint",BGRA8Unorm:"bgra8unorm",BGRA8UnormSRGB:"bgra8unorm-srgb",RGB9E5UFloat:"rgb9e5ufloat",RGB10A2Unorm:"rgb10a2unorm",RG11B10UFloat:"rgb10a2unorm",RG32Uint:"rg32uint",RG32Sint:"rg32sint",RG32Float:"rg32float",RGBA16Uint:"rgba16uint",RGBA16Sint:"rgba16sint",RGBA16Float:"rgba16float",RGBA32Uint:"rgba32uint",RGBA32Sint:"rgba32sint",RGBA32Float:"rgba32float",Depth16Unorm:"depth16unorm",Depth24Plus:"depth24plus",Depth24PlusStencil8:"depth24plus-stencil8",Depth32Float:"depth32float",Depth32FloatStencil8:"depth32float-stencil8",BC1RGBAUnorm:"bc1-rgba-unorm",BC1RGBAUnormSRGB:"bc1-rgba-unorm-srgb",BC2RGBAUnorm:"bc2-rgba-unorm",BC2RGBAUnormSRGB:"bc2-rgba-unorm-srgb",BC3RGBAUnorm:"bc3-rgba-unorm",BC3RGBAUnormSRGB:"bc3-rgba-unorm-srgb",BC4RUnorm:"bc4-r-unorm",BC4RSnorm:"bc4-r-snorm",BC5RGUnorm:"bc5-rg-unorm",BC5RGSnorm:"bc5-rg-snorm",BC6HRGBUFloat:"bc6h-rgb-ufloat",BC6HRGBFloat:"bc6h-rgb-float",BC7RGBAUnorm:"bc7-rgba-unorm",BC7RGBAUnormSRGB:"bc7-rgba-srgb",ETC2RGB8Unorm:"etc2-rgb8unorm",ETC2RGB8UnormSRGB:"etc2-rgb8unorm-srgb",ETC2RGB8A1Unorm:"etc2-rgb8a1unorm",ETC2RGB8A1UnormSRGB:"etc2-rgb8a1unorm-srgb",ETC2RGBA8Unorm:"etc2-rgba8unorm",ETC2RGBA8UnormSRGB:"etc2-rgba8unorm-srgb",EACR11Unorm:"eac-r11unorm",EACR11Snorm:"eac-r11snorm",EACRG11Unorm:"eac-rg11unorm",EACRG11Snorm:"eac-rg11snorm",ASTC4x4Unorm:"astc-4x4-unorm",ASTC4x4UnormSRGB:"astc-4x4-unorm-srgb",ASTC5x4Unorm:"astc-5x4-unorm",ASTC5x4UnormSRGB:"astc-5x4-unorm-srgb",ASTC5x5Unorm:"astc-5x5-unorm",ASTC5x5UnormSRGB:"astc-5x5-unorm-srgb",ASTC6x5Unorm:"astc-6x5-unorm",ASTC6x5UnormSRGB:"astc-6x5-unorm-srgb",ASTC6x6Unorm:"astc-6x6-unorm",ASTC6x6UnormSRGB:"astc-6x6-unorm-srgb",ASTC8x5Unorm:"astc-8x5-unorm",ASTC8x5UnormSRGB:"astc-8x5-unorm-srgb",ASTC8x6Unorm:"astc-8x6-unorm",ASTC8x6UnormSRGB:"astc-8x6-unorm-srgb",ASTC8x8Unorm:"astc-8x8-unorm",ASTC8x8UnormSRGB:"astc-8x8-unorm-srgb",ASTC10x5Unorm:"astc-10x5-unorm",ASTC10x5UnormSRGB:"astc-10x5-unorm-srgb",ASTC10x6Unorm:"astc-10x6-unorm",ASTC10x6UnormSRGB:"astc-10x6-unorm-srgb",ASTC10x8Unorm:"astc-10x8-unorm",ASTC10x8UnormSRGB:"astc-10x8-unorm-srgb",ASTC10x10Unorm:"astc-10x10-unorm",ASTC10x10UnormSRGB:"astc-10x10-unorm-srgb",ASTC12x10Unorm:"astc-12x10-unorm",ASTC12x10UnormSRGB:"astc-12x10-unorm-srgb",ASTC12x12Unorm:"astc-12x12-unorm",ASTC12x12UnormSRGB:"astc-12x12-unorm-srgb"},up={ClampToEdge:"clamp-to-edge",Repeat:"repeat",MirrorRepeat:"mirror-repeat"},Jr={Linear:"linear",Nearest:"nearest"},nt={Zero:"zero",One:"one",Src:"src",OneMinusSrc:"one-minus-src",SrcAlpha:"src-alpha",OneMinusSrcAlpha:"one-minus-src-alpha",Dst:"dst",OneMinusDst:"one-minus-dst",DstAlpha:"dst-alpha",OneMinusDstAlpha:"one-minus-dst-alpha",SrcAlphaSaturated:"src-alpha-saturated",Constant:"constant",OneMinusConstant:"one-minus-constant"},zr={Add:"add",Subtract:"subtract",ReverseSubtract:"reverse-subtract",Min:"min",Max:"max"},vy={None:0,All:15},cr={Keep:"keep",Zero:"zero",Replace:"replace",Invert:"invert",IncrementClamp:"increment-clamp",DecrementClamp:"decrement-clamp",IncrementWrap:"increment-wrap",DecrementWrap:"decrement-wrap"},hp={Storage:"storage",ReadOnlyStorage:"read-only-storage"},dp={WriteOnly:"write-only",ReadOnly:"read-only",ReadWrite:"read-write"},My={NonFiltering:"non-filtering",Comparison:"comparison"},Gr={Float:"float",UnfilterableFloat:"unfilterable-float",Depth:"depth",SInt:"sint",UInt:"uint"},Ey={TwoD:"2d",ThreeD:"3d"},Yt={TwoD:"2d",TwoDArray:"2d-array",Cube:"cube",ThreeD:"3d"},h3={All:"all"},fh={Vertex:"vertex",Instance:"instance"},Wh={CoreFeaturesAndLimits:"core-features-and-limits",DepthClipControl:"depth-clip-control",Depth32FloatStencil8:"depth32float-stencil8",TextureCompressionBC:"texture-compression-bc",TextureCompressionBCSliced3D:"texture-compression-bc-sliced-3d",TextureCompressionETC2:"texture-compression-etc2",TextureCompressionASTC:"texture-compression-astc",TextureCompressionASTCSliced3D:"texture-compression-astc-sliced-3d",TimestampQuery:"timestamp-query",IndirectFirstInstance:"indirect-first-instance",ShaderF16:"shader-f16",RG11B10UFloat:"rg11b10ufloat-renderable",BGRA8UNormStorage:"bgra8unorm-storage",Float32Filterable:"float32-filterable",Float32Blendable:"float32-blendable",ClipDistances:"clip-distances",DualSourceBlending:"dual-source-blending",Subgroups:"subgroups",TextureFormatsTier1:"texture-formats-tier1",TextureFormatsTier2:"texture-formats-tier2"};class d3 extends LS{constructor(e,t,i){super(e,t?t.value:null),this.textureNode=t,this.groupNode=i}update(){this.texture=this.textureNode.value}}class f3 extends CS{constructor(e,t){super(e,t?t.array:null),this.attribute=t,this.isStorageBuffer=!0}}let p3=0;class m3 extends f3{constructor(e,t){super("StorageBuffer_"+p3++,e?e.value:null),this.nodeUniform=e,this.access=e?e.access:os.READ_WRITE,this.groupNode=t}get buffer(){return this.nodeUniform.value}}class g3 extends vr{constructor(e){super(),this.device=e;const t=`
struct VarysStruct {
	@builtin( position ) Position: vec4<f32>,
	@location( 0 ) vTex : vec2<f32>
};

@vertex
fn main( @builtin( vertex_index ) vertexIndex : u32 ) -> VarysStruct {

	var Varys : VarysStruct;

	var pos = array< vec2<f32>, 4 >(
		vec2<f32>( -1.0,  1.0 ),
		vec2<f32>(  1.0,  1.0 ),
		vec2<f32>( -1.0, -1.0 ),
		vec2<f32>(  1.0, -1.0 )
	);

	var tex = array< vec2<f32>, 4 >(
		vec2<f32>( 0.0, 0.0 ),
		vec2<f32>( 1.0, 0.0 ),
		vec2<f32>( 0.0, 1.0 ),
		vec2<f32>( 1.0, 1.0 )
	);

	Varys.vTex = tex[ vertexIndex ];
	Varys.Position = vec4<f32>( pos[ vertexIndex ], 0.0, 1.0 );

	return Varys;

}
`,i=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vTex );

}
`,n=`
@group( 0 ) @binding( 0 )
var imgSampler : sampler;

@group( 0 ) @binding( 1 )
var img : texture_2d<f32>;

@fragment
fn main( @location( 0 ) vTex : vec2<f32> ) -> @location( 0 ) vec4<f32> {

	return textureSample( img, imgSampler, vec2( vTex.x, 1.0 - vTex.y ) );

}
`;this.mipmapSampler=e.createSampler({minFilter:Jr.Linear}),this.flipYSampler=e.createSampler({minFilter:Jr.Nearest}),this.transferPipelines={},this.flipYPipelines={},this.mipmapVertexShaderModule=e.createShaderModule({label:"mipmapVertex",code:t}),this.mipmapFragmentShaderModule=e.createShaderModule({label:"mipmapFragment",code:i}),this.flipYFragmentShaderModule=e.createShaderModule({label:"flipYFragment",code:n})}getTransferPipeline(e){let t=this.transferPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`mipmap-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.mipmapFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ca.TriangleStrip,stripIndexFormat:Ja.Uint32},layout:"auto"}),this.transferPipelines[e]=t),t}getFlipYPipeline(e){let t=this.flipYPipelines[e];return t===void 0&&(t=this.device.createRenderPipeline({label:`flipY-${e}`,vertex:{module:this.mipmapVertexShaderModule,entryPoint:"main"},fragment:{module:this.flipYFragmentShaderModule,entryPoint:"main",targets:[{format:e}]},primitive:{topology:ca.TriangleStrip,stripIndexFormat:Ja.Uint32},layout:"auto"}),this.flipYPipelines[e]=t),t}flipY(e,t,i=0){const n=t.format,{width:s,height:o}=t.size,a=this.getTransferPipeline(n),l=this.getFlipYPipeline(n),c=this.device.createTexture({size:{width:s,height:o,depthOrArrayLayers:1},format:n,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.TEXTURE_BINDING}),u=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Yt.TwoD,baseArrayLayer:i}),h=c.createView({baseMipLevel:0,mipLevelCount:1,dimension:Yt.TwoD,baseArrayLayer:0}),d=this.device.createCommandEncoder({}),f=(p,_,g)=>{const m=p.getBindGroupLayout(0),b=this.device.createBindGroup({layout:m,entries:[{binding:0,resource:this.flipYSampler},{binding:1,resource:_}]}),y=d.beginRenderPass({colorAttachments:[{view:g,loadOp:ft.Clear,storeOp:Ii.Store,clearValue:[0,0,0,0]}]});y.setPipeline(p),y.setBindGroup(0,b),y.draw(4,1,0,0),y.end()};f(a,u,h),f(l,h,u),this.device.queue.submit([d.finish()]),c.destroy()}generateMipmaps(e,t,i=0){const n=this.get(e);n.useCount===void 0&&(n.useCount=0,n.layers=[]);const s=n.layers[i]||this._mipmapCreateBundles(e,t,i),o=this.device.createCommandEncoder({});this._mipmapRunBundles(o,s),this.device.queue.submit([o.finish()]),n.useCount!==0&&(n.layers[i]=s),n.useCount++}_mipmapCreateBundles(e,t,i){const n=this.getTransferPipeline(t.format),s=n.getBindGroupLayout(0);let o=e.createView({baseMipLevel:0,mipLevelCount:1,dimension:Yt.TwoD,baseArrayLayer:i});const a=[];for(let l=1;l<t.mipLevelCount;l++){const c=this.device.createBindGroup({layout:s,entries:[{binding:0,resource:this.mipmapSampler},{binding:1,resource:o}]}),u=e.createView({baseMipLevel:l,mipLevelCount:1,dimension:Yt.TwoD,baseArrayLayer:i}),h={colorAttachments:[{view:u,loadOp:ft.Clear,storeOp:Ii.Store,clearValue:[0,0,0,0]}]},d=this.device.createRenderBundleEncoder({colorFormats:[t.format]});d.setPipeline(n),d.setBindGroup(0,c),d.draw(4,1,0,0),a.push({renderBundles:[d.finish()],passDescriptor:h}),o=u}return a}_mipmapRunBundles(e,t){const i=t.length;for(let n=0;n<i;n++){const s=t[n],o=e.beginRenderPass(s.passDescriptor);o.executeBundles(s.renderBundles),o.end()}}}const _3={[_m]:"never",[xm]:"less",[ym]:"equal",[Jh]:"less-equal",[bm]:"greater",[Sm]:"greater-equal",[vm]:"always",[Tm]:"not-equal"},x3=[0,1,3,2,4,5];class y3{constructor(e){this.backend=e,this._passUtils=null,this.defaultTexture={},this.defaultCubeTexture={},this.defaultVideoFrame=null,this.colorBuffer=null,this.depthTexture=new Xn,this.depthTexture.name="depthBuffer"}createSampler(e){const t=this.backend,i=t.device,n=t.get(e),s={addressModeU:this._convertAddressMode(e.wrapS),addressModeV:this._convertAddressMode(e.wrapT),addressModeW:this._convertAddressMode(e.wrapR),magFilter:this._convertFilterMode(e.magFilter),minFilter:this._convertFilterMode(e.minFilter),mipmapFilter:this._convertFilterMode(e.minFilter),maxAnisotropy:1};s.magFilter===Jr.Linear&&s.minFilter===Jr.Linear&&s.mipmapFilter===Jr.Linear&&(s.maxAnisotropy=e.anisotropy),e.isDepthTexture&&e.compareFunction!==null&&(s.compare=_3[e.compareFunction]),n.sampler=i.createSampler(s)}createDefaultTexture(e){let t;const i=$p(e);e.isCubeTexture?t=this._getDefaultCubeTextureGPU(i):t=this._getDefaultTextureGPU(i),this.backend.get(e).texture=t}createTexture(e,t={}){const i=this.backend,n=i.get(e);if(n.initialized)throw new Error("WebGPUTextureUtils: Texture already initialized.");t.needsMipmaps===void 0&&(t.needsMipmaps=!1),t.levels===void 0&&(t.levels=1),t.depth===void 0&&(t.depth=1);const{width:s,height:o,depth:a,levels:l}=t;e.isFramebufferTexture&&(t.renderTarget?t.format=this.backend.utils.getCurrentColorFormat(t.renderTarget):t.format=this.backend.utils.getPreferredCanvasFormat());const c=this._getDimension(e),u=e.internalFormat||t.format||$p(e,i.device);n.format=u;const{samples:h,primarySamples:d,isMSAA:f}=i.utils.getTextureSampleData(e);let p=GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.COPY_SRC;e.isStorageTexture===!0&&(p|=GPUTextureUsage.STORAGE_BINDING),e.isCompressedTexture!==!0&&e.isCompressedArrayTexture!==!0&&(p|=GPUTextureUsage.RENDER_ATTACHMENT);const _={label:e.name,size:{width:s,height:o,depthOrArrayLayers:a},mipLevelCount:l,sampleCount:d,dimension:c,format:u,usage:p};if(u===void 0){console.warn("WebGPURenderer: Texture format not supported."),this.createDefaultTexture(e);return}if(e.isCubeTexture&&(_.textureBindingViewDimension=Yt.Cube),n.texture=i.device.createTexture(_),f){const g=Object.assign({},_);g.label=g.label+"-msaa",g.sampleCount=h,n.msaaTexture=i.device.createTexture(g)}n.initialized=!0,n.textureDescriptorGPU=_}destroyTexture(e){const t=this.backend,i=t.get(e);i.texture!==void 0&&i.texture.destroy(),i.msaaTexture!==void 0&&i.msaaTexture.destroy(),t.delete(e)}destroySampler(e){const i=this.backend.get(e);delete i.sampler}generateMipmaps(e){const t=this.backend.get(e);if(e.isCubeTexture)for(let i=0;i<6;i++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,i);else{const i=e.image.depth||1;for(let n=0;n<i;n++)this._generateMipmaps(t.texture,t.textureDescriptorGPU,n)}}getColorBuffer(){this.colorBuffer&&this.colorBuffer.destroy();const e=this.backend,{width:t,height:i}=e.getDrawingBufferSize();return this.colorBuffer=e.device.createTexture({label:"colorBuffer",size:{width:t,height:i,depthOrArrayLayers:1},sampleCount:e.utils.getSampleCount(e.renderer.samples),format:e.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC}),this.colorBuffer}getDepthBuffer(e=!0,t=!1){const i=this.backend,{width:n,height:s}=i.getDrawingBufferSize(),o=this.depthTexture,a=i.get(o).texture;let l,c;if(t?(l=_n,c=mn):e&&(l=gn,c=Mt),a!==void 0){if(o.image.width===n&&o.image.height===s&&o.format===l&&o.type===c)return a;this.destroyTexture(o)}return o.name="depthBuffer",o.format=l,o.type=c,o.image.width=n,o.image.height=s,this.createTexture(o,{width:n,height:s}),i.get(o).texture}updateTexture(e,t){const i=this.backend.get(e),{textureDescriptorGPU:n}=i;if(!(e.isRenderTargetTexture||n===void 0)){if(e.isDataTexture)this._copyBufferToTexture(t.image,i.texture,n,0,e.flipY);else if(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)for(let s=0;s<t.image.depth;s++)this._copyBufferToTexture(t.image,i.texture,n,s,e.flipY,s);else e.isCompressedTexture||e.isCompressedArrayTexture?this._copyCompressedBufferToTexture(e.mipmaps,i.texture,n):e.isCubeTexture?this._copyCubeMapToTexture(t.images,i.texture,n,e.flipY,e.premultiplyAlpha):this._copyImageToTexture(t.image,i.texture,n,0,e.flipY,e.premultiplyAlpha);i.version=e.version,e.onUpdate&&e.onUpdate(e)}}async copyTextureToBuffer(e,t,i,n,s,o){const a=this.backend.device,l=this.backend.get(e),c=l.texture,u=l.textureDescriptorGPU.format,h=this._getBytesPerTexel(u);let d=n*h;d=Math.ceil(d/256)*256;const f=a.createBuffer({size:n*s*h,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),p=a.createCommandEncoder();p.copyTextureToBuffer({texture:c,origin:{x:t,y:i,z:o}},{buffer:f,bytesPerRow:d},{width:n,height:s});const _=this._getTypedArrayType(u);a.queue.submit([p.finish()]),await f.mapAsync(GPUMapMode.READ);const g=f.getMappedRange();return new _(g)}_getDefaultTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const i=new ki;i.minFilter=Rt,i.magFilter=Rt,this.createTexture(i,{width:1,height:1,format:e}),this.defaultTexture[e]=t=i}return this.backend.get(t).texture}_getDefaultCubeTextureGPU(e){let t=this.defaultTexture[e];if(t===void 0){const i=new Hc;i.minFilter=Rt,i.magFilter=Rt,this.createTexture(i,{width:1,height:1,depth:6}),this.defaultCubeTexture[e]=t=i}return this.backend.get(t).texture}_copyCubeMapToTexture(e,t,i,n,s){for(let o=0;o<6;o++){const a=e[o],l=n===!0?x3[o]:o;a.isDataTexture?this._copyBufferToTexture(a.image,t,i,l,n):this._copyImageToTexture(a,t,i,l,n,s)}}_copyImageToTexture(e,t,i,n,s,o){this.backend.device.queue.copyExternalImageToTexture({source:e,flipY:s},{texture:t,mipLevel:0,origin:{x:0,y:0,z:n},premultipliedAlpha:o},{width:i.size.width,height:i.size.height,depthOrArrayLayers:1})}_getPassUtils(){let e=this._passUtils;return e===null&&(this._passUtils=e=new g3(this.backend.device)),e}_generateMipmaps(e,t,i=0){this._getPassUtils().generateMipmaps(e,t,i)}_flipY(e,t,i=0){this._getPassUtils().flipY(e,t,i)}_copyBufferToTexture(e,t,i,n,s,o=0){const a=this.backend.device,l=e.data,c=this._getBytesPerTexel(i.format),u=e.width*c;a.queue.writeTexture({texture:t,mipLevel:0,origin:{x:0,y:0,z:n}},l,{offset:e.width*e.height*c*o,bytesPerRow:u},{width:e.width,height:e.height,depthOrArrayLayers:1}),s===!0&&this._flipY(t,i,n)}_copyCompressedBufferToTexture(e,t,i){const n=this.backend.device,s=this._getBlockData(i.format),o=i.size.depthOrArrayLayers>1;for(let a=0;a<e.length;a++){const l=e[a],c=l.width,u=l.height,h=o?i.size.depthOrArrayLayers:1,d=Math.ceil(c/s.width)*s.byteLength,f=d*Math.ceil(u/s.height);for(let p=0;p<h;p++)n.queue.writeTexture({texture:t,mipLevel:a,origin:{x:0,y:0,z:p}},l.data,{offset:p*f,bytesPerRow:d,rowsPerImage:Math.ceil(u/s.height)},{width:Math.ceil(c/s.width)*s.width,height:Math.ceil(u/s.height)*s.height,depthOrArrayLayers:1})}}_getBlockData(e){if(e===P.BC1RGBAUnorm||e===P.BC1RGBAUnormSRGB)return{byteLength:8,width:4,height:4};if(e===P.BC2RGBAUnorm||e===P.BC2RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===P.BC3RGBAUnorm||e===P.BC3RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===P.BC4RUnorm||e===P.BC4RSnorm)return{byteLength:8,width:4,height:4};if(e===P.BC5RGUnorm||e===P.BC5RGSnorm)return{byteLength:16,width:4,height:4};if(e===P.BC6HRGBUFloat||e===P.BC6HRGBFloat)return{byteLength:16,width:4,height:4};if(e===P.BC7RGBAUnorm||e===P.BC7RGBAUnormSRGB)return{byteLength:16,width:4,height:4};if(e===P.ETC2RGB8Unorm||e===P.ETC2RGB8UnormSRGB)return{byteLength:8,width:4,height:4};if(e===P.ETC2RGB8A1Unorm||e===P.ETC2RGB8A1UnormSRGB)return{byteLength:8,width:4,height:4};if(e===P.ETC2RGBA8Unorm||e===P.ETC2RGBA8UnormSRGB)return{byteLength:16,width:4,height:4};if(e===P.EACR11Unorm)return{byteLength:8,width:4,height:4};if(e===P.EACR11Snorm)return{byteLength:8,width:4,height:4};if(e===P.EACRG11Unorm)return{byteLength:16,width:4,height:4};if(e===P.EACRG11Snorm)return{byteLength:16,width:4,height:4};if(e===P.ASTC4x4Unorm||e===P.ASTC4x4UnormSRGB)return{byteLength:16,width:4,height:4};if(e===P.ASTC5x4Unorm||e===P.ASTC5x4UnormSRGB)return{byteLength:16,width:5,height:4};if(e===P.ASTC5x5Unorm||e===P.ASTC5x5UnormSRGB)return{byteLength:16,width:5,height:5};if(e===P.ASTC6x5Unorm||e===P.ASTC6x5UnormSRGB)return{byteLength:16,width:6,height:5};if(e===P.ASTC6x6Unorm||e===P.ASTC6x6UnormSRGB)return{byteLength:16,width:6,height:6};if(e===P.ASTC8x5Unorm||e===P.ASTC8x5UnormSRGB)return{byteLength:16,width:8,height:5};if(e===P.ASTC8x6Unorm||e===P.ASTC8x6UnormSRGB)return{byteLength:16,width:8,height:6};if(e===P.ASTC8x8Unorm||e===P.ASTC8x8UnormSRGB)return{byteLength:16,width:8,height:8};if(e===P.ASTC10x5Unorm||e===P.ASTC10x5UnormSRGB)return{byteLength:16,width:10,height:5};if(e===P.ASTC10x6Unorm||e===P.ASTC10x6UnormSRGB)return{byteLength:16,width:10,height:6};if(e===P.ASTC10x8Unorm||e===P.ASTC10x8UnormSRGB)return{byteLength:16,width:10,height:8};if(e===P.ASTC10x10Unorm||e===P.ASTC10x10UnormSRGB)return{byteLength:16,width:10,height:10};if(e===P.ASTC12x10Unorm||e===P.ASTC12x10UnormSRGB)return{byteLength:16,width:12,height:10};if(e===P.ASTC12x12Unorm||e===P.ASTC12x12UnormSRGB)return{byteLength:16,width:12,height:12}}_convertAddressMode(e){let t=up.ClampToEdge;return e===co?t=up.Repeat:e===uo&&(t=up.MirrorRepeat),t}_convertFilterMode(e){let t=Jr.Linear;return(e===Rt||e===pm||e===Bs)&&(t=Jr.Nearest),t}_getBytesPerTexel(e){if(e===P.R8Unorm||e===P.R8Snorm||e===P.R8Uint||e===P.R8Sint)return 1;if(e===P.R16Uint||e===P.R16Sint||e===P.R16Float||e===P.RG8Unorm||e===P.RG8Snorm||e===P.RG8Uint||e===P.RG8Sint)return 2;if(e===P.R32Uint||e===P.R32Sint||e===P.R32Float||e===P.RG16Uint||e===P.RG16Sint||e===P.RG16Float||e===P.RGBA8Unorm||e===P.RGBA8UnormSRGB||e===P.RGBA8Snorm||e===P.RGBA8Uint||e===P.RGBA8Sint||e===P.BGRA8Unorm||e===P.BGRA8UnormSRGB||e===P.RGB9E5UFloat||e===P.RGB10A2Unorm||e===P.RG11B10UFloat||e===P.Depth32Float||e===P.Depth24Plus||e===P.Depth24PlusStencil8||e===P.Depth32FloatStencil8)return 4;if(e===P.RG32Uint||e===P.RG32Sint||e===P.RG32Float||e===P.RGBA16Uint||e===P.RGBA16Sint||e===P.RGBA16Float)return 8;if(e===P.RGBA32Uint||e===P.RGBA32Sint||e===P.RGBA32Float)return 16}_getTypedArrayType(e){if(e===P.R8Uint)return Uint8Array;if(e===P.R8Sint)return Int8Array;if(e===P.R8Unorm)return Uint8Array;if(e===P.R8Snorm)return Int8Array;if(e===P.RG8Uint)return Uint8Array;if(e===P.RG8Sint)return Int8Array;if(e===P.RG8Unorm)return Uint8Array;if(e===P.RG8Snorm)return Int8Array;if(e===P.RGBA8Uint)return Uint8Array;if(e===P.RGBA8Sint)return Int8Array;if(e===P.RGBA8Unorm)return Uint8Array;if(e===P.RGBA8Snorm)return Int8Array;if(e===P.R16Uint)return Uint16Array;if(e===P.R16Sint)return Int16Array;if(e===P.RG16Uint)return Uint16Array;if(e===P.RG16Sint)return Int16Array;if(e===P.RGBA16Uint)return Uint16Array;if(e===P.RGBA16Sint)return Int16Array;if(e===P.R16Float||e===P.RG16Float||e===P.RGBA16Float)return Uint16Array;if(e===P.R32Uint)return Uint32Array;if(e===P.R32Sint)return Int32Array;if(e===P.R32Float)return Float32Array;if(e===P.RG32Uint)return Uint32Array;if(e===P.RG32Sint)return Int32Array;if(e===P.RG32Float)return Float32Array;if(e===P.RGBA32Uint)return Uint32Array;if(e===P.RGBA32Sint)return Int32Array;if(e===P.RGBA32Float)return Float32Array;if(e===P.BGRA8Unorm||e===P.BGRA8UnormSRGB)return Uint8Array;if(e===P.RGB10A2Unorm||e===P.RGB9E5UFloat||e===P.RG11B10UFloat)return Uint32Array;if(e===P.Depth32Float)return Float32Array;if(e===P.Depth24Plus||e===P.Depth24PlusStencil8)return Uint32Array;if(e===P.Depth32FloatStencil8)return Float32Array}_getDimension(e){let t;return e.is3DTexture||e.isData3DTexture?t=Ey.ThreeD:t=Ey.TwoD,t}}function $p(r,e=null){const t=r.format,i=r.type,n=r.colorSpace,s=Be.getTransfer(n);let o;if(r.isCompressedTexture===!0||r.isCompressedArrayTexture===!0)switch(t){case fr:o=s===xe?P.BC1RGBAUnormSRGB:P.BC1RGBAUnorm;break;case pr:o=s===xe?P.BC2RGBAUnormSRGB:P.BC2RGBAUnorm;break;case mr:o=s===xe?P.BC3RGBAUnormSRGB:P.BC3RGBAUnorm;break;case Ra:o=s===xe?P.ETC2RGB8UnormSRGB:P.ETC2RGB8Unorm;break;case Ca:o=s===xe?P.ETC2RGBA8UnormSRGB:P.ETC2RGBA8Unorm;break;case Na:o=s===xe?P.ASTC4x4UnormSRGB:P.ASTC4x4Unorm;break;case Pa:o=s===xe?P.ASTC5x4UnormSRGB:P.ASTC5x4Unorm;break;case Da:o=s===xe?P.ASTC5x5UnormSRGB:P.ASTC5x5Unorm;break;case La:o=s===xe?P.ASTC6x5UnormSRGB:P.ASTC6x5Unorm;break;case Ia:o=s===xe?P.ASTC6x6UnormSRGB:P.ASTC6x6Unorm;break;case Fa:o=s===xe?P.ASTC8x5UnormSRGB:P.ASTC8x5Unorm;break;case Ua:o=s===xe?P.ASTC8x6UnormSRGB:P.ASTC8x6Unorm;break;case Ba:o=s===xe?P.ASTC8x8UnormSRGB:P.ASTC8x8Unorm;break;case Oa:o=s===xe?P.ASTC10x5UnormSRGB:P.ASTC10x5Unorm;break;case ka:o=s===xe?P.ASTC10x6UnormSRGB:P.ASTC10x6Unorm;break;case za:o=s===xe?P.ASTC10x8UnormSRGB:P.ASTC10x8Unorm;break;case Ga:o=s===xe?P.ASTC10x10UnormSRGB:P.ASTC10x10Unorm;break;case Va:o=s===xe?P.ASTC12x10UnormSRGB:P.ASTC12x10Unorm;break;case Ha:o=s===xe?P.ASTC12x12UnormSRGB:P.ASTC12x12Unorm;break;case Gt:o=s===xe?P.RGBA8UnormSRGB:P.RGBA8Unorm;break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}else switch(t){case Gt:switch(i){case io:o=P.RGBA8Snorm;break;case no:o=P.RGBA16Sint;break;case Wn:o=P.RGBA16Uint;break;case Mt:o=P.RGBA32Uint;break;case hi:o=P.RGBA32Sint;break;case zt:o=s===xe?P.RGBA8UnormSRGB:P.RGBA8Unorm;break;case pn:o=P.RGBA16Float;break;case Wt:o=P.RGBA32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAFormat.",i)}break;case kc:switch(i){case Qh:o=P.RGB9E5UFloat;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBFormat.",i)}break;case zc:switch(i){case io:o=P.R8Snorm;break;case no:o=P.R16Sint;break;case Wn:o=P.R16Uint;break;case Mt:o=P.R32Uint;break;case hi:o=P.R32Sint;break;case zt:o=P.R8Unorm;break;case pn:o=P.R16Float;break;case Wt:o=P.R32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RedFormat.",i)}break;case Gc:switch(i){case io:o=P.RG8Snorm;break;case no:o=P.RG16Sint;break;case Wn:o=P.RG16Uint;break;case Mt:o=P.RG32Uint;break;case hi:o=P.RG32Sint;break;case zt:o=P.RG8Unorm;break;case pn:o=P.RG16Float;break;case Wt:o=P.RG32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with RGFormat.",i)}break;case gn:switch(i){case Wn:o=P.Depth16Unorm;break;case Mt:o=P.Depth24Plus;break;case Wt:o=P.Depth32Float;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthFormat.",i)}break;case _n:switch(i){case mn:o=P.Depth24PlusStencil8;break;case Wt:e&&e.features.has(Wh.Depth32FloatStencil8)===!1&&console.error('WebGPURenderer: Depth textures with DepthStencilFormat + FloatType can only be used with the "depth32float-stencil8" GPU feature.'),o=P.Depth32FloatStencil8;break;default:console.error("WebGPURenderer: Unsupported texture type with DepthStencilFormat.",i)}break;case el:switch(i){case hi:o=P.R32Sint;break;case Mt:o=P.R32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RedIntegerFormat.",i)}break;case tl:switch(i){case hi:o=P.RG32Sint;break;case Mt:o=P.RG32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGIntegerFormat.",i)}break;case il:switch(i){case hi:o=P.RGBA32Sint;break;case Mt:o=P.RGBA32Uint;break;default:console.error("WebGPURenderer: Unsupported texture type with RGBAIntegerFormat.",i)}break;default:console.error("WebGPURenderer: Unsupported texture format.",t)}return o}const b3=/^[fn]*\s*([a-z_0-9]+)?\s*\(([\s\S]*?)\)\s*[\-\>]*\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/i,T3=/([a-z_0-9]+)\s*:\s*([a-z_0-9]+(?:<[\s\S]+?>)?)/ig,Ay={f32:"float",i32:"int",u32:"uint",bool:"bool","vec2<f32>":"vec2","vec2<i32>":"ivec2","vec2<u32>":"uvec2","vec2<bool>":"bvec2",vec2f:"vec2",vec2i:"ivec2",vec2u:"uvec2",vec2b:"bvec2","vec3<f32>":"vec3","vec3<i32>":"ivec3","vec3<u32>":"uvec3","vec3<bool>":"bvec3",vec3f:"vec3",vec3i:"ivec3",vec3u:"uvec3",vec3b:"bvec3","vec4<f32>":"vec4","vec4<i32>":"ivec4","vec4<u32>":"uvec4","vec4<bool>":"bvec4",vec4f:"vec4",vec4i:"ivec4",vec4u:"uvec4",vec4b:"bvec4","mat2x2<f32>":"mat2",mat2x2f:"mat2","mat3x3<f32>":"mat3",mat3x3f:"mat3","mat4x4<f32>":"mat4",mat4x4f:"mat4",sampler:"sampler",texture_1d:"texture",texture_2d:"texture",texture_2d_array:"texture",texture_multisampled_2d:"cubeTexture",texture_depth_2d:"depthTexture",texture_depth_2d_array:"depthTexture",texture_depth_multisampled_2d:"depthTexture",texture_depth_cube:"depthTexture",texture_depth_cube_array:"depthTexture",texture_3d:"texture3D",texture_cube:"cubeTexture",texture_cube_array:"cubeTexture",texture_storage_1d:"storageTexture",texture_storage_2d:"storageTexture",texture_storage_2d_array:"storageTexture",texture_storage_3d:"storageTexture"},S3=r=>{r=r.trim();const e=r.match(b3);if(e!==null&&e.length===4){const t=e[2],i=[];let n=null;for(;(n=T3.exec(t))!==null;)i.push({name:n[1],type:n[2]});const s=[];for(let u=0;u<i.length;u++){const{name:h,type:d}=i[u];let f=d;f.startsWith("ptr")?f="pointer":(f.startsWith("texture")&&(f=d.split("<")[0]),f=Ay[f]),s.push(new xg(f,h))}const o=r.substring(e[0].length),a=e[3]||"void",l=e[1]!==void 0?e[1]:"";return{type:Ay[a]||a,inputs:s,name:l,inputsCode:t,blockCode:o,outputType:a}}else throw new Error("FunctionNode: Function is not a WGSL code.")};class v3 extends yg{constructor(e){const{type:t,inputs:i,name:n,inputsCode:s,blockCode:o,outputType:a}=S3(e);super(t,i,n),this.inputsCode=s,this.blockCode=o,this.outputType=a}getCode(e=this.name){const t=this.outputType!=="void"?"-> "+this.outputType:"";return`fn ${e} ( ${this.inputsCode.trim()} ) ${t}`+this.blockCode}}class M3 extends wS{parseFunction(e){return new v3(e)}}const ea=typeof self<"u"?self.GPUShaderStage:{VERTEX:1,FRAGMENT:2,COMPUTE:4},E3={[os.READ_ONLY]:"read",[os.WRITE_ONLY]:"write",[os.READ_WRITE]:"read_write"},wy={[co]:"repeat",[rs]:"clamp",[uo]:"mirror"},ph={vertex:ea?ea.VERTEX:1,fragment:ea?ea.FRAGMENT:2,compute:ea?ea.COMPUTE:4},Ry={instance:!0,swizzleAssign:!1,storageBuffer:!0},A3={"^^":"tsl_xor"},w3={float:"f32",int:"i32",uint:"u32",bool:"bool",color:"vec3<f32>",vec2:"vec2<f32>",ivec2:"vec2<i32>",uvec2:"vec2<u32>",bvec2:"vec2<bool>",vec3:"vec3<f32>",ivec3:"vec3<i32>",uvec3:"vec3<u32>",bvec3:"vec3<bool>",vec4:"vec4<f32>",ivec4:"vec4<i32>",uvec4:"vec4<u32>",bvec4:"vec4<bool>",mat2:"mat2x2<f32>",mat3:"mat3x3<f32>",mat4:"mat4x4<f32>"},Cy={},En={tsl_xor:new ei("fn tsl_xor( a : bool, b : bool ) -> bool { return ( a || b ) && !( a && b ); }"),mod_float:new ei("fn tsl_mod_float( x : f32, y : f32 ) -> f32 { return x - y * floor( x / y ); }"),mod_vec2:new ei("fn tsl_mod_vec2( x : vec2f, y : vec2f ) -> vec2f { return x - y * floor( x / y ); }"),mod_vec3:new ei("fn tsl_mod_vec3( x : vec3f, y : vec3f ) -> vec3f { return x - y * floor( x / y ); }"),mod_vec4:new ei("fn tsl_mod_vec4( x : vec4f, y : vec4f ) -> vec4f { return x - y * floor( x / y ); }"),equals_bool:new ei("fn tsl_equals_bool( a : bool, b : bool ) -> bool { return a == b; }"),equals_bvec2:new ei("fn tsl_equals_bvec2( a : vec2f, b : vec2f ) -> vec2<bool> { return vec2<bool>( a.x == b.x, a.y == b.y ); }"),equals_bvec3:new ei("fn tsl_equals_bvec3( a : vec3f, b : vec3f ) -> vec3<bool> { return vec3<bool>( a.x == b.x, a.y == b.y, a.z == b.z ); }"),equals_bvec4:new ei("fn tsl_equals_bvec4( a : vec4f, b : vec4f ) -> vec4<bool> { return vec4<bool>( a.x == b.x, a.y == b.y, a.z == b.z, a.w == b.w ); }"),repeatWrapping_float:new ei("fn tsl_repeatWrapping_float( coord: f32 ) -> f32 { return fract( coord ); }"),mirrorWrapping_float:new ei("fn tsl_mirrorWrapping_float( coord: f32 ) -> f32 { let mirrored = fract( coord * 0.5 ) * 2.0; return 1.0 - abs( 1.0 - mirrored ); }"),clampWrapping_float:new ei("fn tsl_clampWrapping_float( coord: f32 ) -> f32 { return clamp( coord, 0.0, 1.0 ); }"),biquadraticTexture:new ei(`
fn tsl_biquadraticTexture( map : texture_2d<f32>, coord : vec2f, iRes : vec2u, level : u32 ) -> vec4f {

	let res = vec2f( iRes );

	let uvScaled = coord * res;
	let uvWrapping = ( ( uvScaled % res ) + res ) % res;

	// https://www.shadertoy.com/view/WtyXRy

	let uv = uvWrapping - 0.5;
	let iuv = floor( uv );
	let f = fract( uv );

	let rg1 = textureLoad( map, vec2u( iuv + vec2( 0.5, 0.5 ) ) % iRes, level );
	let rg2 = textureLoad( map, vec2u( iuv + vec2( 1.5, 0.5 ) ) % iRes, level );
	let rg3 = textureLoad( map, vec2u( iuv + vec2( 0.5, 1.5 ) ) % iRes, level );
	let rg4 = textureLoad( map, vec2u( iuv + vec2( 1.5, 1.5 ) ) % iRes, level );

	return mix( mix( rg1, rg2, f.x ), mix( rg3, rg4, f.x ), f.y );

}
`)},Yl={dFdx:"dpdx",dFdy:"- dpdy",mod_float:"tsl_mod_float",mod_vec2:"tsl_mod_vec2",mod_vec3:"tsl_mod_vec3",mod_vec4:"tsl_mod_vec4",equals_bool:"tsl_equals_bool",equals_bvec2:"tsl_equals_bvec2",equals_bvec3:"tsl_equals_bvec3",equals_bvec4:"tsl_equals_bvec4",inversesqrt:"inverseSqrt",bitcast:"bitcast<f32>"};typeof navigator<"u"&&/Windows/g.test(navigator.userAgent)&&(En.pow_float=new ei("fn tsl_pow_float( a : f32, b : f32 ) -> f32 { return select( -pow( -a, b ), pow( a, b ), a > 0.0 ); }"),En.pow_vec2=new ei("fn tsl_pow_vec2( a : vec2f, b : vec2f ) -> vec2f { return vec2f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ) ); }",[En.pow_float]),En.pow_vec3=new ei("fn tsl_pow_vec3( a : vec3f, b : vec3f ) -> vec3f { return vec3f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ) ); }",[En.pow_float]),En.pow_vec4=new ei("fn tsl_pow_vec4( a : vec4f, b : vec4f ) -> vec4f { return vec4f( tsl_pow_float( a.x, b.x ), tsl_pow_float( a.y, b.y ), tsl_pow_float( a.z, b.z ), tsl_pow_float( a.w, b.w ) ); }",[En.pow_float]),Yl.pow_float="tsl_pow_float",Yl.pow_vec2="tsl_pow_vec2",Yl.pow_vec3="tsl_pow_vec3",Yl.pow_vec4="tsl_pow_vec4");let BS="";(typeof navigator<"u"&&/Firefox|Deno/g.test(navigator.userAgent))!==!0&&(BS+=`diagnostic( off, derivative_uniformity );
`);class R3 extends AS{constructor(e,t){super(e,t,new M3),this.uniformGroups={},this.builtins={},this.directives={},this.scopedArrays=new Map}_generateTextureSample(e,t,i,n,s=this.shaderStage){return s==="fragment"?n?`textureSample( ${t}, ${t}_sampler, ${i}, ${n} )`:`textureSample( ${t}, ${t}_sampler, ${i} )`:this.generateTextureSampleLevel(e,t,i,"0",n)}generateTextureSampleLevel(e,t,i,n,s){return this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${i}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i,n):this.generateTextureLod(e,t,i,s,n)}generateWrapFunction(e){const t=`tsl_coord_${wy[e.wrapS]}S_${wy[e.wrapT]}_${e.isData3DTexture?"3d":"2d"}T`;let i=Cy[t];if(i===void 0){const n=[],s=e.isData3DTexture?"vec3f":"vec2f";let o=`fn ${t}( coord : ${s} ) -> ${s} {

	return ${s}(
`;const a=(l,c)=>{l===co?(n.push(En.repeatWrapping_float),o+=`		tsl_repeatWrapping_float( coord.${c} )`):l===rs?(n.push(En.clampWrapping_float),o+=`		tsl_clampWrapping_float( coord.${c} )`):l===uo?(n.push(En.mirrorWrapping_float),o+=`		tsl_mirrorWrapping_float( coord.${c} )`):(o+=`		coord.${c}`,console.warn(`WebGPURenderer: Unsupported texture wrap type "${l}" for vertex shader.`))};a(e.wrapS,"x"),o+=`,
`,a(e.wrapT,"y"),e.isData3DTexture&&(o+=`,
`,a(e.wrapR,"z")),o+=`
	);

}
`,Cy[t]=i=new ei(o,n)}return i.build(this),t}generateArrayDeclaration(e,t){return`array< ${this.getType(e)}, ${t} >`}generateTextureDimension(e,t,i){const n=this.getDataFromNode(e,this.shaderStage,this.globalCache);n.dimensionsSnippet===void 0&&(n.dimensionsSnippet={});let s=n.dimensionsSnippet[i];if(n.dimensionsSnippet[i]===void 0){let o,a;const{primarySamples:l}=this.renderer.backend.utils.getTextureSampleData(e),c=l>1;e.isData3DTexture?a="vec3<u32>":a="vec2<u32>",c||e.isStorageTexture?o=t:o=`${t}${i?`, u32( ${i} )`:""}`,s=new Sh(new Mh(`textureDimensions( ${o} )`,a)),n.dimensionsSnippet[i]=s,(e.isArrayTexture||e.isDataArrayTexture||e.isData3DTexture)&&(n.arrayLayerCount=new Sh(new Mh(`textureNumLayers(${t})`,"u32"))),e.isTextureCube&&(n.cubeFaceCount=new Sh(new Mh("6u","u32")))}return s.build(this)}generateFilteredTexture(e,t,i,n="0u"){this._include("biquadraticTexture");const s=this.generateWrapFunction(e),o=this.generateTextureDimension(e,t,n);return`tsl_biquadraticTexture( ${t}, ${s}( ${i} ), ${o}, u32( ${n} ) )`}generateTextureLod(e,t,i,n,s="0u"){const o=this.generateWrapFunction(e),a=this.generateTextureDimension(e,t,s),l=e.isData3DTexture?"vec3":"vec2",c=`${l}<u32>( ${o}( ${i} ) * ${l}<f32>( ${a} ) )`;return this.generateTextureLoad(e,t,c,n,s)}generateTextureLoad(e,t,i,n,s="0u"){let o;return n?o=`textureLoad( ${t}, ${i}, ${n}, u32( ${s} ) )`:(o=`textureLoad( ${t}, ${i}, u32( ${s} ) )`,this.renderer.backend.compatibilityMode&&e.isDepthTexture&&(o+=".x")),o}generateTextureStore(e,t,i,n,s){let o;return n?o=`textureStore( ${t}, ${i}, ${n}, ${s} )`:o=`textureStore( ${t}, ${i}, ${s} )`,o}isSampleCompare(e){return e.isDepthTexture===!0&&e.compareFunction!==null}isUnfilterable(e){return this.getComponentTypeFromTexture(e)!=="float"||!this.isAvailable("float32Filterable")&&e.isDataTexture===!0&&e.type===Wt||this.isSampleCompare(e)===!1&&e.minFilter===Rt&&e.magFilter===Rt||this.renderer.backend.utils.getTextureSampleData(e).primarySamples>1}generateTexture(e,t,i,n,s=this.shaderStage){let o=null;return this.isUnfilterable(e)?o=this.generateTextureLod(e,t,i,n,"0",s):o=this._generateTextureSample(e,t,i,n,s),o}generateTextureGrad(e,t,i,n,s,o=this.shaderStage){if(o==="fragment")return`textureSampleGrad( ${t}, ${t}_sampler, ${i},  ${n[0]}, ${n[1]} )`;console.error(`WebGPURenderer: THREE.TextureNode.gradient() does not support ${o} shader.`)}generateTextureCompare(e,t,i,n,s,o=this.shaderStage){if(o==="fragment")return e.isDepthTexture===!0&&e.isArrayTexture===!0?`textureSampleCompare( ${t}, ${t}_sampler, ${i}, ${s}, ${n} )`:`textureSampleCompare( ${t}, ${t}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.DepthTexture.compareFunction() does not support ${o} shader.`)}generateTextureLevel(e,t,i,n,s){return this.isUnfilterable(e)===!1?`textureSampleLevel( ${t}, ${t}_sampler, ${i}, ${n} )`:this.isFilteredTexture(e)?this.generateFilteredTexture(e,t,i,n):this.generateTextureLod(e,t,i,s,n)}generateTextureBias(e,t,i,n,s,o=this.shaderStage){if(o==="fragment")return`textureSampleBias( ${t}, ${t}_sampler, ${i}, ${n} )`;console.error(`WebGPURenderer: THREE.TextureNode.biasNode does not support ${o} shader.`)}getPropertyName(e,t=this.shaderStage){if(e.isNodeVarying===!0&&e.needsInterpolation===!0){if(t==="vertex")return`varyings.${e.name}`}else if(e.isNodeUniform===!0){const i=e.name,n=e.type;return n==="texture"||n==="cubeTexture"||n==="storageTexture"||n==="texture3D"?i:n==="buffer"||n==="storageBuffer"||n==="indirectStorageBuffer"?this.isCustomStruct(e)?i:i+".value":e.groupNode.name+"."+i}return super.getPropertyName(e)}getOutputStructName(){return"output"}getFunctionOperator(e){const t=A3[e];return t!==void 0?(this._include(t),t):null}getNodeAccess(e,t){return t!=="compute"?e.isAtomic===!0?(console.warn("WebGPURenderer: Atomic operations are only supported in compute shaders."),os.READ_WRITE):os.READ_ONLY:e.access}getStorageAccess(e,t){return E3[this.getNodeAccess(e,t)]}getUniformFromNode(e,t,i,n=null){const s=super.getUniformFromNode(e,t,i,n),o=this.getDataFromNode(e,i,this.globalCache);if(o.uniformGPU===void 0){let a;const l=e.groupNode,c=l.name,u=this.getBindGroupArray(c,i);if(t==="texture"||t==="cubeTexture"||t==="storageTexture"||t==="texture3D"){let h=null;const d=this.getNodeAccess(e,i);if(t==="texture"||t==="storageTexture"?e.value.is3DTexture===!0?h=new Wp(s.name,s.node,l,d):h=new pd(s.name,s.node,l,d):t==="cubeTexture"?h=new IS(s.name,s.node,l,d):t==="texture3D"&&(h=new Wp(s.name,s.node,l,d)),h.store=e.isStorageTextureNode===!0,h.setVisibility(ph[i]),this.isUnfilterable(e.value)===!1&&h.store===!1){const f=new d3(`${s.name}_sampler`,s.node,l);f.setVisibility(ph[i]),u.push(f,h),a=[f,h]}else u.push(h),a=[h]}else if(t==="buffer"||t==="storageBuffer"||t==="indirectStorageBuffer"){const h=t==="buffer"?PS:m3,d=new h(e,l);d.setVisibility(ph[i]),u.push(d),a=d,s.name=n||"NodeBuffer_"+s.id}else{const h=this.uniformGroups[i]||(this.uniformGroups[i]={});let d=h[c];d===void 0&&(d=new DS(c,l),d.setVisibility(ph[i]),h[c]=d,u.push(d)),a=this.getNodeUniform(s,t),d.addUniform(a)}o.uniformGPU=a}return s}getBuiltin(e,t,i,n=this.shaderStage){const s=this.builtins[n]||(this.builtins[n]=new Map);return s.has(e)===!1&&s.set(e,{name:e,property:t,type:i}),t}hasBuiltin(e,t=this.shaderStage){return this.builtins[t]!==void 0&&this.builtins[t].has(e)}getVertexIndex(){return this.shaderStage==="vertex"?this.getBuiltin("vertex_index","vertexIndex","u32","attribute"):"vertexIndex"}buildFunctionCode(e){const t=e.layout,i=this.flowShaderNode(e),n=[];for(const o of t.inputs)n.push(o.name+" : "+this.getType(o.type));let s=`fn ${t.name}( ${n.join(", ")} ) -> ${this.getType(t.type)} {
${i.vars}
${i.code}
`;return i.result&&(s+=`	return ${i.result};
`),s+=`
}
`,s}getInstanceIndex(){return this.shaderStage==="vertex"?this.getBuiltin("instance_index","instanceIndex","u32","attribute"):"instanceIndex"}getInvocationLocalIndex(){return this.getBuiltin("local_invocation_index","invocationLocalIndex","u32","attribute")}getSubgroupSize(){return this.enableSubGroups(),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute")}getInvocationSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_invocation_id","invocationSubgroupIndex","u32","attribute")}getSubgroupIndex(){return this.enableSubGroups(),this.getBuiltin("subgroup_id","subgroupIndex","u32","attribute")}getDrawIndex(){return null}getFrontFacing(){return this.getBuiltin("front_facing","isFront","bool")}getFragCoord(){return this.getBuiltin("position","fragCoord","vec4<f32>")+".xy"}getFragDepth(){return"output."+this.getBuiltin("frag_depth","depth","f32","output")}getClipDistance(){return"varyings.hw_clip_distances"}isFlipY(){return!1}enableDirective(e,t=this.shaderStage){(this.directives[t]||(this.directives[t]=new Set)).add(e)}getDirectives(e){const t=[],i=this.directives[e];if(i!==void 0)for(const n of i)t.push(`enable ${n};`);return t.join(`
`)}enableSubGroups(){this.enableDirective("subgroups")}enableSubgroupsF16(){this.enableDirective("subgroups-f16")}enableClipDistances(){this.enableDirective("clip_distances")}enableShaderF16(){this.enableDirective("f16")}enableDualSourceBlending(){this.enableDirective("dual_source_blending")}enableHardwareClipping(e){this.enableClipDistances(),this.getBuiltin("clip_distances","hw_clip_distances",`array<f32, ${e} >`,"vertex")}getBuiltins(e){const t=[],i=this.builtins[e];if(i!==void 0)for(const{name:n,property:s,type:o}of i.values())t.push(`@builtin( ${n} ) ${s} : ${o}`);return t.join(`,
	`)}getScopedArray(e,t,i,n){return this.scopedArrays.has(e)===!1&&this.scopedArrays.set(e,{name:e,scope:t,bufferType:i,bufferCount:n}),e}getScopedArrays(e){if(e!=="compute")return;const t=[];for(const{name:i,scope:n,bufferType:s,bufferCount:o}of this.scopedArrays.values()){const a=this.getType(s);t.push(`var<${n}> ${i}: array< ${a}, ${o} >;`)}return t.join(`
`)}getAttributes(e){const t=[];if(e==="compute"&&(this.getBuiltin("global_invocation_id","globalId","vec3<u32>","attribute"),this.getBuiltin("workgroup_id","workgroupId","vec3<u32>","attribute"),this.getBuiltin("local_invocation_id","localId","vec3<u32>","attribute"),this.getBuiltin("num_workgroups","numWorkgroups","vec3<u32>","attribute"),this.renderer.hasFeature("subgroups")&&(this.enableDirective("subgroups",e),this.getBuiltin("subgroup_size","subgroupSize","u32","attribute"))),e==="vertex"||e==="compute"){const i=this.getBuiltins("attribute");i&&t.push(i);const n=this.getAttributesArray();for(let s=0,o=n.length;s<o;s++){const a=n[s],l=a.name,c=this.getType(a.type);t.push(`@location( ${s} ) ${l} : ${c}`)}}return t.join(`,
	`)}getStructMembers(e){const t=[];for(const i of e.members){const n=e.output?"@location( "+i.index+" ) ":"";let s=this.getType(i.type);i.atomic&&(s="atomic< "+s+" >"),t.push(`	${n+i.name} : ${s}`)}return e.output&&t.push(`	${this.getBuiltins("output")}`),t.join(`,
`)}getStructs(e){let t="";const i=this.structs[e];if(i.length>0){const n=[];for(const s of i){let o=`struct ${s.name} {
`;o+=this.getStructMembers(s),o+=`
};`,n.push(o)}t=`
`+n.join(`

`)+`
`}return t}getVar(e,t,i=null){let n=`var ${t} : `;return i!==null?n+=this.generateArrayDeclaration(e,i):n+=this.getType(e),n}getVars(e){const t=[],i=this.vars[e];if(i!==void 0)for(const n of i)t.push(`	${this.getVar(n.type,n.name,n.count)};`);return`
${t.join(`
`)}
`}getVaryings(e){const t=[];if(e==="vertex"&&this.getBuiltin("position","Vertex","vec4<f32>","vertex"),e==="vertex"||e==="fragment"){const s=this.varyings,o=this.vars[e];for(let a=0;a<s.length;a++){const l=s[a];if(l.needsInterpolation){let c=`@location( ${a} )`;if(l.interpolationType){const u=l.interpolationSampling!==null?`, ${l.interpolationSampling} )`:" )";c+=` @interpolate( ${l.interpolationType}${u}`}else/^(int|uint|ivec|uvec)/.test(l.type)&&(c+=` @interpolate( ${this.renderer.backend.compatibilityMode?"flat, either":"flat"} )`);t.push(`${c} ${l.name} : ${this.getType(l.type)}`)}else e==="vertex"&&o.includes(l)===!1&&o.push(l)}}const i=this.getBuiltins(e);i&&t.push(i);const n=t.join(`,
	`);return e==="vertex"?this._getWGSLStruct("VaryingsStruct","	"+n):n}isCustomStruct(e){const t=e.value,i=e.node,n=(t.isBufferAttribute||t.isInstancedBufferAttribute)&&i.structTypeNode!==null,s=i.value&&i.value.array&&typeof i.value.itemSize=="number"&&i.value.array.length>i.value.itemSize;return n&&!s}getUniforms(e){const t=this.uniforms[e],i=[],n=[],s=[],o={};for(const l of t){const c=l.groupNode.name,u=this.bindingsIndexes[c];if(l.type==="texture"||l.type==="cubeTexture"||l.type==="storageTexture"||l.type==="texture3D"){const h=l.node.value;this.isUnfilterable(h)===!1&&l.node.isStorageTextureNode!==!0&&(this.isSampleCompare(h)?i.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${l.name}_sampler : sampler_comparison;`):i.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${l.name}_sampler : sampler;`));let d,f="";const{primarySamples:p}=this.renderer.backend.utils.getTextureSampleData(h);if(p>1&&(f="_multisampled"),h.isCubeTexture===!0)d="texture_cube<f32>";else if(h.isDepthTexture===!0)this.renderer.backend.compatibilityMode&&h.compareFunction===null?d=`texture${f}_2d<f32>`:d=`texture_depth${f}_2d${h.isArrayTexture===!0?"_array":""}`;else if(l.node.isStorageTextureNode===!0){const _=$p(h),g=this.getStorageAccess(l.node,e),m=l.node.value.is3DTexture,b=l.node.value.isArrayTexture;d=`texture_storage_${m?"3d":`2d${b?"_array":""}`}<${_}, ${g}>`}else if(h.isArrayTexture===!0||h.isDataArrayTexture===!0||h.isCompressedArrayTexture===!0)d="texture_2d_array<f32>";else if(h.is3DTexture===!0||h.isData3DTexture===!0)d="texture_3d<f32>";else{const _=this.getComponentTypeFromTexture(h).charAt(0);d=`texture${f}_2d<${_}32>`}i.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var ${l.name} : ${d};`)}else if(l.type==="buffer"||l.type==="storageBuffer"||l.type==="indirectStorageBuffer"){const h=l.node,d=this.getType(h.getNodeType(this)),f=h.bufferCount,p=f>0&&l.type==="buffer"?", "+f:"",_=h.isStorageBufferNode?`storage, ${this.getStorageAccess(h,e)}`:"uniform";if(this.isCustomStruct(l))n.push(`@binding( ${u.binding++} ) @group( ${u.group} ) var<${_}> ${l.name} : ${d};`);else{const m=`	value : array< ${h.isAtomic?`atomic<${d}>`:`${d}`}${p} >`;n.push(this._getWGSLStructBinding(l.name,m,_,u.binding++,u.group))}}else{const h=this.getType(this.getVectorType(l.type)),d=l.groupNode.name;(o[d]||(o[d]={index:u.binding++,id:u.group,snippets:[]})).snippets.push(`	${l.name} : ${h}`)}}for(const l in o){const c=o[l];s.push(this._getWGSLStructBinding(l,c.snippets.join(`,
`),"uniform",c.index,c.id))}let a=i.join(`
`);return a+=n.join(`
`),a+=s.join(`
`),a}buildCode(){const e=this.material!==null?{fragment:{},vertex:{}}:{compute:{}};this.sortBindingGroups();for(const t in e){this.shaderStage=t;const i=e[t];i.uniforms=this.getUniforms(t),i.attributes=this.getAttributes(t),i.varyings=this.getVaryings(t),i.structs=this.getStructs(t),i.vars=this.getVars(t),i.codes=this.getCodes(t),i.directives=this.getDirectives(t),i.scopedArrays=this.getScopedArrays(t);let n=`// code

`;n+=this.flowCode[t];const s=this.flowNodes[t],o=s[s.length-1],a=o.outputNode,l=a!==void 0&&a.isOutputStructNode===!0;for(const c of s){const u=this.getFlowData(c),h=c.name;if(h&&(n.length>0&&(n+=`
`),n+=`	// flow -> ${h}
`),n+=`${u.code}
	`,c===o&&t!=="compute"){if(n+=`// result

	`,t==="vertex")n+=`varyings.Vertex = ${u.result};`;else if(t==="fragment")if(l)i.returnType=a.getNodeType(this),i.structs+="var<private> output : "+i.returnType+";",n+=`return ${u.result};`;else{let d="	@location(0) color: vec4<f32>";const f=this.getBuiltins("output");f&&(d+=`,
	`+f),i.returnType="OutputStruct",i.structs+=this._getWGSLStruct("OutputStruct",d),i.structs+=`
var<private> output : OutputStruct;`,n+=`output.color = ${u.result};

	return output;`}}}i.flow=n}if(this.shaderStage=null,this.material!==null)this.vertexShader=this._getWGSLVertexCode(e.vertex),this.fragmentShader=this._getWGSLFragmentCode(e.fragment);else{const t=this.object.workgroupSize;this.computeShader=this._getWGSLComputeCode(e.compute,t)}}getMethod(e,t=null){let i;return t!==null&&(i=this._getWGSLMethod(e+"_"+t)),i===void 0&&(i=this._getWGSLMethod(e)),i||e}getType(e){return w3[e]||e}isAvailable(e){let t=Ry[e];return t===void 0&&(e==="float32Filterable"?t=this.renderer.hasFeature("float32-filterable"):e==="clipDistance"&&(t=this.renderer.hasFeature("clip-distances")),Ry[e]=t),t}_getWGSLMethod(e){return En[e]!==void 0&&this._include(e),Yl[e]}_include(e){const t=En[e];return t.build(this),this.currentFunctionNode!==null&&this.currentFunctionNode.includes.push(t),t}_getWGSLVertexCode(e){return`${this.getSignature()}
// directives
${e.directives}

// structs
${e.structs}

// uniforms
${e.uniforms}

// varyings
${e.varyings}
var<private> varyings : VaryingsStruct;

// codes
${e.codes}

@vertex
fn main( ${e.attributes} ) -> VaryingsStruct {

	// vars
	${e.vars}

	// flow
	${e.flow}

	return varyings;

}
`}_getWGSLFragmentCode(e){return`${this.getSignature()}
// global
${BS}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@fragment
fn main( ${e.varyings} ) -> ${e.returnType} {

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLComputeCode(e,t){const[i,n,s]=t;return`${this.getSignature()}
// directives
${e.directives}

// system
var<private> instanceIndex : u32;

// locals
${e.scopedArrays}

// structs
${e.structs}

// uniforms
${e.uniforms}

// codes
${e.codes}

@compute @workgroup_size( ${i}, ${n}, ${s} )
fn main( ${e.attributes} ) {

	// system
	instanceIndex = globalId.x
		+ globalId.y * ( ${i} * numWorkgroups.x )
		+ globalId.z * ( ${i} * numWorkgroups.x ) * ( ${n} * numWorkgroups.y );

	// vars
	${e.vars}

	// flow
	${e.flow}

}
`}_getWGSLStruct(e,t){return`
struct ${e} {
${t}
};`}_getWGSLStructBinding(e,t,i,n=0,s=0){const o=e+"Struct";return`${this._getWGSLStruct(o,t)}
@binding( ${n} ) @group( ${s} )
var<${i}> ${e} : ${o};`}}class C3{constructor(e){this.backend=e}getCurrentDepthStencilFormat(e){let t;return e.depthTexture!==null?t=this.getTextureFormatGPU(e.depthTexture):e.depth&&e.stencil?t=P.Depth24PlusStencil8:e.depth&&(t=P.Depth24Plus),t}getTextureFormatGPU(e){return this.backend.get(e).format}getTextureSampleData(e){let t;if(e.isFramebufferTexture)t=1;else if(e.isDepthTexture&&!e.renderTarget){const s=this.backend.renderer,o=s.getRenderTarget();t=o?o.samples:s.samples}else e.renderTarget&&(t=e.renderTarget.samples);t=t||1;const i=t>1&&e.renderTarget!==null&&e.isDepthTexture!==!0&&e.isFramebufferTexture!==!0;return{samples:t,primarySamples:i?1:t,isMSAA:i}}getCurrentColorFormat(e){let t;return e.textures!==null?t=this.getTextureFormatGPU(e.textures[0]):t=this.getPreferredCanvasFormat(),t}getCurrentColorSpace(e){return e.textures!==null?e.textures[0].colorSpace:this.backend.renderer.outputColorSpace}getPrimitiveTopology(e,t){if(e.isPoints)return ca.PointList;if(e.isLineSegments||e.isMesh&&t.wireframe===!0)return ca.LineList;if(e.isLine)return ca.LineStrip;if(e.isMesh)return ca.TriangleList}getSampleCount(e){return e>=4?4:1}getSampleCountRenderContext(e){return e.textures!==null?this.getSampleCount(e.sampleCount):this.getSampleCount(this.backend.renderer.samples)}getPreferredCanvasFormat(){const e=this.backend.parameters.outputType;if(e===void 0)return navigator.gpu.getPreferredCanvasFormat();if(e===zt)return P.BGRA8Unorm;if(e===pn)return P.RGBA16Float;throw new Error("Unsupported outputType")}}const OS=new Map([[Int8Array,["sint8","snorm8"]],[Uint8Array,["uint8","unorm8"]],[Int16Array,["sint16","snorm16"]],[Uint16Array,["uint16","unorm16"]],[Int32Array,["sint32","snorm32"]],[Uint32Array,["uint32","unorm32"]],[Float32Array,["float32"]]]);typeof Float16Array<"u"&&OS.set(Float16Array,["float16"]);const N3=new Map([[Nb,["float16"]]]),P3=new Map([[Int32Array,"sint32"],[Int16Array,"sint32"],[Uint32Array,"uint32"],[Uint16Array,"uint32"],[Float32Array,"float32"]]);class D3{constructor(e){this.backend=e}createAttribute(e,t){const i=this._getBufferAttribute(e),n=this.backend,s=n.get(i);let o=s.buffer;if(o===void 0){const a=n.device;let l=i.array;if(e.normalized===!1){if(l.constructor===Int16Array||l.constructor===Int8Array)l=new Int32Array(l);else if((l.constructor===Uint16Array||l.constructor===Uint8Array)&&(l=new Uint32Array(l),t&GPUBufferUsage.INDEX))for(let h=0;h<l.length;h++)l[h]===65535&&(l[h]=4294967295)}if(i.array=l,(i.isStorageBufferAttribute||i.isStorageInstancedBufferAttribute)&&i.itemSize===3){l=new l.constructor(i.count*4);for(let h=0;h<i.count;h++)l.set(i.array.subarray(h*3,h*3+3),h*4);i.itemSize=4,i.array=l,s._force3to4BytesAlignment=!0}const c=l.byteLength,u=c+(4-c%4)%4;o=a.createBuffer({label:i.name,size:u,usage:t,mappedAtCreation:!0}),new l.constructor(o.getMappedRange()).set(l),o.unmap(),s.buffer=o}}updateAttribute(e){const t=this._getBufferAttribute(e),i=this.backend,n=i.device,s=i.get(t),o=i.get(t).buffer;let a=t.array;if(s._force3to4BytesAlignment===!0){a=new a.constructor(t.count*4);for(let u=0;u<t.count;u++)a.set(t.array.subarray(u*3,u*3+3),u*4);t.array=a}const l=this._isTypedArray(a),c=t.updateRanges;if(c.length===0)n.queue.writeBuffer(o,0,a,0);else{const u=l?1:a.BYTES_PER_ELEMENT;for(let h=0,d=c.length;h<d;h++){const f=c[h];let p,_;if(s._force3to4BytesAlignment===!0){const m=Math.floor(f.start/3),b=Math.ceil(f.count/3);p=m*4*u,_=b*4*u}else p=f.start*u,_=f.count*u;const g=p*(l?a.BYTES_PER_ELEMENT:1);n.queue.writeBuffer(o,g,a,p,_)}t.clearUpdateRanges()}}createShaderVertexBuffers(e){const t=e.getAttributes(),i=new Map;for(let n=0;n<t.length;n++){const s=t[n],o=s.array.BYTES_PER_ELEMENT,a=this._getBufferAttribute(s);let l=i.get(a);if(l===void 0){let h,d;s.isInterleavedBufferAttribute===!0?(h=s.data.stride*o,d=s.data.isInstancedInterleavedBuffer?fh.Instance:fh.Vertex):(h=s.itemSize*o,d=s.isInstancedBufferAttribute?fh.Instance:fh.Vertex),s.normalized===!1&&(s.array.constructor===Int16Array||s.array.constructor===Uint16Array)&&(h=4),l={arrayStride:h,attributes:[],stepMode:d},i.set(a,l)}const c=this._getVertexFormat(s),u=s.isInterleavedBufferAttribute===!0?s.offset*o:0;l.attributes.push({shaderLocation:n,offset:u,format:c})}return Array.from(i.values())}destroyAttribute(e){const t=this.backend;t.get(this._getBufferAttribute(e)).buffer.destroy(),t.delete(e)}async getArrayBufferAsync(e){const t=this.backend,i=t.device,s=t.get(this._getBufferAttribute(e)).buffer,o=s.size,a=i.createBuffer({label:`${e.name}_readback`,size:o,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ}),l=i.createCommandEncoder({label:`readback_encoder_${e.name}`});l.copyBufferToBuffer(s,0,a,0,o);const c=l.finish();i.queue.submit([c]),await a.mapAsync(GPUMapMode.READ);const u=a.getMappedRange(),h=new e.array.constructor(u.slice(0));return a.unmap(),h.buffer}_getVertexFormat(e){const{itemSize:t,normalized:i}=e,n=e.array.constructor,s=e.constructor;let o;if(t===1)o=P3.get(n);else{const l=(N3.get(s)||OS.get(n))[i?1:0];if(l){const c=n.BYTES_PER_ELEMENT*t,h=Math.floor((c+3)/4)*4/n.BYTES_PER_ELEMENT;if(h%1)throw new Error("THREE.WebGPUAttributeUtils: Bad vertex format item size.");o=`${l}x${h}`}}return o||console.error("THREE.WebGPUAttributeUtils: Vertex format not supported yet."),o}_isTypedArray(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}_getBufferAttribute(e){return e.isInterleavedBufferAttribute&&(e=e.data),e}}class L3{constructor(e){this.backend=e,this.bindGroupLayoutCache=new WeakMap}createBindingsLayout(e){const t=this.backend,i=t.device,n=[];let s=0;for(const o of e.bindings){const a={binding:s++,visibility:o.visibility};if(o.isUniformBuffer||o.isStorageBuffer){const l={};o.isStorageBuffer&&(o.visibility&4&&(o.access===os.READ_WRITE||o.access===os.WRITE_ONLY)?l.type=hp.Storage:l.type=hp.ReadOnlyStorage),a.buffer=l}else if(o.isSampledTexture&&o.store){const l={};l.format=this.backend.get(o.texture).texture.format;const c=o.access;c===os.READ_WRITE?l.access=dp.ReadWrite:c===os.WRITE_ONLY?l.access=dp.WriteOnly:l.access=dp.ReadOnly,o.texture.isArrayTexture?l.viewDimension=Yt.TwoDArray:o.texture.is3DTexture&&(l.viewDimension=Yt.ThreeD),a.storageTexture=l}else if(o.isSampledTexture){const l={},{primarySamples:c}=t.utils.getTextureSampleData(o.texture);if(c>1&&(l.multisampled=!0,o.texture.isDepthTexture||(l.sampleType=Gr.UnfilterableFloat)),o.texture.isDepthTexture)t.compatibilityMode&&o.texture.compareFunction===null?l.sampleType=Gr.UnfilterableFloat:l.sampleType=Gr.Depth;else if(o.texture.isDataTexture||o.texture.isDataArrayTexture||o.texture.isData3DTexture){const u=o.texture.type;u===hi?l.sampleType=Gr.SInt:u===Mt?l.sampleType=Gr.UInt:u===Wt&&(this.backend.hasFeature("float32-filterable")?l.sampleType=Gr.Float:l.sampleType=Gr.UnfilterableFloat)}o.isSampledCubeTexture?l.viewDimension=Yt.Cube:o.texture.isArrayTexture||o.texture.isDataArrayTexture||o.texture.isCompressedArrayTexture?l.viewDimension=Yt.TwoDArray:o.isSampledTexture3D&&(l.viewDimension=Yt.ThreeD),a.texture=l}else if(o.isSampler){const l={};o.texture.isDepthTexture&&(o.texture.compareFunction!==null?l.type=My.Comparison:t.compatibilityMode&&(l.type=My.NonFiltering)),a.sampler=l}else console.error(`WebGPUBindingUtils: Unsupported binding "${o}".`);n.push(a)}return i.createBindGroupLayout({entries:n})}createBindings(e,t,i,n=0){const{backend:s,bindGroupLayoutCache:o}=this,a=s.get(e);let l=o.get(e.bindingsReference);l===void 0&&(l=this.createBindingsLayout(e),o.set(e.bindingsReference,l));let c;i>0&&(a.groups===void 0&&(a.groups=[],a.versions=[]),a.versions[i]===n&&(c=a.groups[i])),c===void 0&&(c=this.createBindGroup(e,l),i>0&&(a.groups[i]=c,a.versions[i]=n)),a.group=c,a.layout=l}updateBinding(e){const t=this.backend,i=t.device,n=e.buffer,s=t.get(e).buffer;i.queue.writeBuffer(s,0,n,0)}createBindGroupIndex(e,t){const n=this.backend.device,s=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,o=e[0],a=n.createBuffer({label:"bindingCameraIndex_"+o,size:16,usage:s});n.queue.writeBuffer(a,0,e,0);const l=[{binding:0,resource:{buffer:a}}];return n.createBindGroup({label:"bindGroupCameraIndex_"+o,layout:t,entries:l})}createBindGroup(e,t){const i=this.backend,n=i.device;let s=0;const o=[];for(const a of e.bindings){if(a.isUniformBuffer){const l=i.get(a);if(l.buffer===void 0){const c=a.byteLength,u=GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST,h=n.createBuffer({label:"bindingBuffer_"+a.name,size:c,usage:u});l.buffer=h}o.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isStorageBuffer){const l=i.get(a);if(l.buffer===void 0){const c=a.attribute;l.buffer=i.get(c).buffer}o.push({binding:s,resource:{buffer:l.buffer}})}else if(a.isSampledTexture){const l=i.get(a.texture);let c;if(l.externalTexture!==void 0)c=n.importExternalTexture({source:l.externalTexture});else{const u=a.store?1:l.texture.mipLevelCount;let h=`view-${l.texture.width}-${l.texture.height}`;if(l.texture.depthOrArrayLayers>1&&(h+=`-${l.texture.depthOrArrayLayers}`),h+=`-${u}`,c=l[h],c===void 0){const d=h3.All;let f;a.isSampledCubeTexture?f=Yt.Cube:a.isSampledTexture3D?f=Yt.ThreeD:a.texture.isArrayTexture||a.texture.isDataArrayTexture||a.texture.isCompressedArrayTexture?f=Yt.TwoDArray:f=Yt.TwoD,c=l[h]=l.texture.createView({aspect:d,dimension:f,mipLevelCount:u})}}o.push({binding:s,resource:c})}else if(a.isSampler){const l=i.get(a.texture);o.push({binding:s,resource:l.sampler})}s++}return n.createBindGroup({label:"bindGroup_"+e.name,layout:t,entries:o})}}class I3{constructor(e){this.backend=e,this._activePipelines=new WeakMap}setPipeline(e,t){this._activePipelines.get(e)!==t&&(e.setPipeline(t),this._activePipelines.set(e,t))}_getSampleCount(e){return this.backend.utils.getSampleCountRenderContext(e)}createRenderPipeline(e,t){const{object:i,material:n,geometry:s,pipeline:o}=e,{vertexProgram:a,fragmentProgram:l}=o,c=this.backend,u=c.device,h=c.utils,d=c.get(o),f=[];for(const U of e.getBindings()){const G=c.get(U);f.push(G.layout)}const p=c.attributeUtils.createShaderVertexBuffers(e);let _;n.blending!==dn&&(n.blending!==fn||n.transparent!==!1)&&(_=this._getBlending(n));let g={};n.stencilWrite===!0&&(g={compare:this._getStencilCompare(n),failOp:this._getStencilOperation(n.stencilFail),depthFailOp:this._getStencilOperation(n.stencilZFail),passOp:this._getStencilOperation(n.stencilZPass)});const m=this._getColorWriteMask(n),b=[];if(e.context.textures!==null){const U=e.context.textures;for(let G=0;G<U.length;G++){const Y=h.getTextureFormatGPU(U[G]);b.push({format:Y,blend:_,writeMask:m})}}else{const U=h.getCurrentColorFormat(e.context);b.push({format:U,blend:_,writeMask:m})}const y=c.get(a).module,x=c.get(l).module,S=this._getPrimitiveState(i,s,n),w=this._getDepthCompare(n),M=h.getCurrentDepthStencilFormat(e.context),R=this._getSampleCount(e.context),T={label:`renderPipeline_${n.name||n.type}_${n.id}`,vertex:Object.assign({},y,{buffers:p}),fragment:Object.assign({},x,{targets:b}),primitive:S,multisample:{count:R,alphaToCoverageEnabled:n.alphaToCoverage&&R>1},layout:u.createPipelineLayout({bindGroupLayouts:f})},E={},C=e.context.depth,k=e.context.stencil;if((C===!0||k===!0)&&(C===!0&&(E.format=M,E.depthWriteEnabled=n.depthWrite,E.depthCompare=w),k===!0&&(E.stencilFront=g,E.stencilBack={},E.stencilReadMask=n.stencilFuncMask,E.stencilWriteMask=n.stencilWriteMask),n.polygonOffset===!0&&(E.depthBias=n.polygonOffsetUnits,E.depthBiasSlopeScale=n.polygonOffsetFactor,E.depthBiasClamp=0),T.depthStencil=E),t===null)d.pipeline=u.createRenderPipeline(T);else{const U=new Promise(G=>{u.createRenderPipelineAsync(T).then(Y=>{d.pipeline=Y,G()})});t.push(U)}}createBundleEncoder(e,t="renderBundleEncoder"){const i=this.backend,{utils:n,device:s}=i,o=n.getCurrentDepthStencilFormat(e),a=n.getCurrentColorFormat(e),l=this._getSampleCount(e),c={label:t,colorFormats:[a],depthStencilFormat:o,sampleCount:l};return s.createRenderBundleEncoder(c)}createComputePipeline(e,t){const i=this.backend,n=i.device,s=i.get(e.computeProgram).module,o=i.get(e),a=[];for(const l of t){const c=i.get(l);a.push(c.layout)}o.pipeline=n.createComputePipeline({compute:s,layout:n.createPipelineLayout({bindGroupLayouts:a})})}_getBlending(e){let t,i;const n=e.blending,s=e.blendSrc,o=e.blendDst,a=e.blendEquation;if(n===ua){const l=e.blendSrcAlpha!==null?e.blendSrcAlpha:s,c=e.blendDstAlpha!==null?e.blendDstAlpha:o,u=e.blendEquationAlpha!==null?e.blendEquationAlpha:a;t={srcFactor:this._getBlendFactor(s),dstFactor:this._getBlendFactor(o),operation:this._getBlendOperation(a)},i={srcFactor:this._getBlendFactor(l),dstFactor:this._getBlendFactor(c),operation:this._getBlendOperation(u)}}else{const l=e.premultipliedAlpha,c=(u,h,d,f)=>{t={srcFactor:u,dstFactor:h,operation:zr.Add},i={srcFactor:d,dstFactor:f,operation:zr.Add}};if(l)switch(n){case fn:c(nt.One,nt.OneMinusSrcAlpha,nt.One,nt.OneMinusSrcAlpha);break;case va:c(nt.One,nt.One,nt.One,nt.One);break;case Ma:c(nt.Zero,nt.OneMinusSrc,nt.Zero,nt.One);break;case Ea:c(nt.Dst,nt.OneMinusSrcAlpha,nt.Zero,nt.One);break}else switch(n){case fn:c(nt.SrcAlpha,nt.OneMinusSrcAlpha,nt.One,nt.OneMinusSrcAlpha);break;case va:c(nt.SrcAlpha,nt.One,nt.One,nt.One);break;case Ma:console.error("THREE.WebGPURenderer: SubtractiveBlending requires material.premultipliedAlpha = true");break;case Ea:console.error("THREE.WebGPURenderer: MultiplyBlending requires material.premultipliedAlpha = true");break}}if(t!==void 0&&i!==void 0)return{color:t,alpha:i};console.error("THREE.WebGPURenderer: Invalid blending: ",n)}_getBlendFactor(e){let t;switch(e){case Ps:t=nt.Zero;break;case rm:t=nt.One;break;case om:t=nt.Src;break;case am:t=nt.OneMinusSrc;break;case lc:t=nt.SrcAlpha;break;case cc:t=nt.OneMinusSrcAlpha;break;case um:t=nt.Dst;break;case hm:t=nt.OneMinusDst;break;case lm:t=nt.DstAlpha;break;case cm:t=nt.OneMinusDstAlpha;break;case dm:t=nt.SrcAlphaSaturated;break;case YP:t=nt.Constant;break;case jP:t=nt.OneMinusConstant;break;default:console.error("THREE.WebGPURenderer: Blend factor not supported.",e)}return t}_getStencilCompare(e){let t;const i=e.stencilFunc;switch(i){case xE:t=pi.Never;break;case Ep:t=pi.Always;break;case yE:t=pi.Less;break;case TE:t=pi.LessEqual;break;case bE:t=pi.Equal;break;case ME:t=pi.GreaterEqual;break;case SE:t=pi.Greater;break;case vE:t=pi.NotEqual;break;default:console.error("THREE.WebGPURenderer: Invalid stencil function.",i)}return t}_getStencilOperation(e){let t;switch(e){case Vr:t=cr.Keep;break;case hE:t=cr.Zero;break;case dE:t=cr.Replace;break;case _E:t=cr.Invert;break;case fE:t=cr.IncrementClamp;break;case pE:t=cr.DecrementClamp;break;case mE:t=cr.IncrementWrap;break;case gE:t=cr.DecrementWrap;break;default:console.error("THREE.WebGPURenderer: Invalid stencil operation.",t)}return t}_getBlendOperation(e){let t;switch(e){case wi:t=zr.Add;break;case nm:t=zr.Subtract;break;case sm:t=zr.ReverseSubtract;break;case xb:t=zr.Min;break;case yb:t=zr.Max;break;default:console.error("THREE.WebGPUPipelineUtils: Blend equation not supported.",e)}return t}_getPrimitiveState(e,t,i){const n={},s=this.backend.utils;switch(n.topology=s.getPrimitiveTopology(e,i),t.index!==null&&e.isLine===!0&&e.isLineSegments!==!0&&(n.stripIndexFormat=t.index.array instanceof Uint16Array?Ja.Uint16:Ja.Uint32),i.side){case ji:n.frontFace=lp.CCW,n.cullMode=cp.Back;break;case Ct:n.frontFace=lp.CCW,n.cullMode=cp.Front;break;case Ai:n.frontFace=lp.CCW,n.cullMode=cp.None;break;default:console.error("THREE.WebGPUPipelineUtils: Unknown material.side value.",i.side);break}return n}_getColorWriteMask(e){return e.colorWrite===!0?vy.All:vy.None}_getDepthCompare(e){let t;if(e.depthTest===!1)t=pi.Always;else{const i=e.depthFunc;switch(i){case uc:t=pi.Never;break;case hc:t=pi.Always;break;case dc:t=pi.Less;break;case br:t=pi.LessEqual;break;case fc:t=pi.Equal;break;case pc:t=pi.GreaterEqual;break;case mc:t=pi.Greater;break;case gc:t=pi.NotEqual;break;default:console.error("THREE.WebGPUPipelineUtils: Invalid depth function.",i)}}return t}}class F3 extends US{constructor(e,t,i=2048){super(i),this.device=e,this.type=t,this.querySet=this.device.createQuerySet({type:"timestamp",count:this.maxQueries,label:`queryset_global_timestamp_${t}`});const n=this.maxQueries*8;this.resolveBuffer=this.device.createBuffer({label:`buffer_timestamp_resolve_${t}`,size:n,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.resultBuffer=this.device.createBuffer({label:`buffer_timestamp_result_${t}`,size:n,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ})}allocateQueriesForContext(e){if(!this.trackTimestamp||this.isDisposed)return null;if(this.currentQueryIndex+2>this.maxQueries)return Zi(`WebGPUTimestampQueryPool [${this.type}]: Maximum number of queries exceeded, when using trackTimestamp it is necessary to resolves the queries via renderer.resolveTimestampsAsync( THREE.TimestampQuery.${this.type.toUpperCase()} ).`),null;const t=this.currentQueryIndex;return this.currentQueryIndex+=2,this.queryOffsets.set(e.id,t),t}async resolveQueriesAsync(){if(!this.trackTimestamp||this.currentQueryIndex===0||this.isDisposed)return this.lastValue;if(this.pendingResolve)return this.pendingResolve;this.pendingResolve=this._resolveQueries();try{return await this.pendingResolve}finally{this.pendingResolve=null}}async _resolveQueries(){if(this.isDisposed)return this.lastValue;try{if(this.resultBuffer.mapState!=="unmapped")return this.lastValue;const e=new Map(this.queryOffsets),t=this.currentQueryIndex,i=t*8;this.currentQueryIndex=0,this.queryOffsets.clear();const n=this.device.createCommandEncoder();n.resolveQuerySet(this.querySet,0,t,this.resolveBuffer,0),n.copyBufferToBuffer(this.resolveBuffer,0,this.resultBuffer,0,i);const s=n.finish();if(this.device.queue.submit([s]),this.resultBuffer.mapState!=="unmapped")return this.lastValue;if(await this.resultBuffer.mapAsync(GPUMapMode.READ,0,i),this.isDisposed)return this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue;const o=new BigUint64Array(this.resultBuffer.getMappedRange(0,i));let a=0;for(const[,l]of e){const c=o[l],u=o[l+1],h=Number(u-c)/1e6;a+=h}return this.resultBuffer.unmap(),this.lastValue=a,a}catch(e){return console.error("Error resolving queries:",e),this.resultBuffer.mapState==="mapped"&&this.resultBuffer.unmap(),this.lastValue}}async dispose(){if(!this.isDisposed){if(this.isDisposed=!0,this.pendingResolve)try{await this.pendingResolve}catch(e){console.error("Error waiting for pending resolve:",e)}if(this.resultBuffer&&this.resultBuffer.mapState==="mapped")try{this.resultBuffer.unmap()}catch(e){console.error("Error unmapping buffer:",e)}this.querySet&&(this.querySet.destroy(),this.querySet=null),this.resolveBuffer&&(this.resolveBuffer.destroy(),this.resolveBuffer=null),this.resultBuffer&&(this.resultBuffer.destroy(),this.resultBuffer=null),this.queryOffsets.clear(),this.pendingResolve=null}}}class U3 extends FS{constructor(e={}){super(e),this.isWebGPUBackend=!0,this.parameters.alpha=e.alpha===void 0?!0:e.alpha,this.parameters.compatibilityMode=e.compatibilityMode===void 0?!1:e.compatibilityMode,this.parameters.requiredLimits=e.requiredLimits===void 0?{}:e.requiredLimits,this.compatibilityMode=this.parameters.compatibilityMode,this.device=null,this.context=null,this.colorBuffer=null,this.defaultRenderPassdescriptor=null,this.utils=new C3(this),this.attributeUtils=new D3(this),this.bindingUtils=new L3(this),this.pipelineUtils=new I3(this),this.textureUtils=new y3(this),this.occludedResolveCache=new Map}async init(e){await super.init(e);const t=this.parameters;let i;if(t.device===void 0){const o={powerPreference:t.powerPreference,featureLevel:t.compatibilityMode?"compatibility":void 0},a=typeof navigator<"u"?await navigator.gpu.requestAdapter(o):null;if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const l=Object.values(Wh),c=[];for(const h of l)a.features.has(h)&&c.push(h);const u={requiredFeatures:c,requiredLimits:t.requiredLimits};i=await a.requestDevice(u)}else i=t.device;i.lost.then(o=>{const a={api:"WebGPU",message:o.message||"Unknown reason",reason:o.reason||null,originalEvent:o};e.onDeviceLost(a)});const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=i,this.context=n;const s=t.alpha?"premultiplied":"opaque";this.trackTimestamp=this.trackTimestamp&&this.hasFeature(Wh.TimestampQuery),this.context.configure({device:this.device,format:this.utils.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s}),this.updateSize()}get coordinateSystem(){return fo}async getArrayBufferAsync(e){return await this.attributeUtils.getArrayBufferAsync(e)}getContext(){return this.context}_getDefaultRenderPassDescriptor(){let e=this.defaultRenderPassdescriptor;if(e===null){const i=this.renderer;e={colorAttachments:[{view:null}]},(this.renderer.depth===!0||this.renderer.stencil===!0)&&(e.depthStencilAttachment={view:this.textureUtils.getDepthBuffer(i.depth,i.stencil).createView()});const n=e.colorAttachments[0];this.renderer.samples>0?n.view=this.colorBuffer.createView():n.resolveTarget=void 0,this.defaultRenderPassdescriptor=e}const t=e.colorAttachments[0];return this.renderer.samples>0?t.resolveTarget=this.context.getCurrentTexture().createView():t.view=this.context.getCurrentTexture().createView(),e}_isRenderCameraDepthArray(e){return e.depthTexture&&e.depthTexture.image.depth>1&&e.camera.isArrayCamera}_getRenderPassDescriptor(e,t={}){const i=e.renderTarget,n=this.get(i);let s=n.descriptors;if(s===void 0||n.width!==i.width||n.height!==i.height||n.dimensions!==i.dimensions||n.activeMipmapLevel!==e.activeMipmapLevel||n.activeCubeFace!==e.activeCubeFace||n.samples!==i.samples){s={},n.descriptors=s;const c=()=>{i.removeEventListener("dispose",c),this.delete(i)};i.hasEventListener("dispose",c)===!1&&i.addEventListener("dispose",c)}const o=e.getCacheKey();let a=s[o];if(a===void 0){const c=e.textures,u=[];let h;const d=this._isRenderCameraDepthArray(e);for(let f=0;f<c.length;f++){const p=this.get(c[f]),_={label:`colorAttachment_${f}`,baseMipLevel:e.activeMipmapLevel,mipLevelCount:1,baseArrayLayer:e.activeCubeFace,arrayLayerCount:1,dimension:Yt.TwoD};if(i.isRenderTarget3D)h=e.activeCubeFace,_.baseArrayLayer=0,_.dimension=Yt.ThreeD,_.depthOrArrayLayers=c[f].image.depth;else if(i.isRenderTarget&&c[f].image.depth>1)if(d===!0){const g=e.camera.cameras;for(let m=0;m<g.length;m++){const b={..._,baseArrayLayer:m,arrayLayerCount:1,dimension:Yt.TwoD},y=p.texture.createView(b);u.push({view:y,resolveTarget:void 0,depthSlice:void 0})}}else _.dimension=Yt.TwoDArray,_.depthOrArrayLayers=c[f].image.depth;if(d!==!0){const g=p.texture.createView(_);let m,b;p.msaaTexture!==void 0?(m=p.msaaTexture.createView(),b=g):(m=g,b=void 0),u.push({view:m,resolveTarget:b,depthSlice:h})}}if(a={textureViews:u},e.depth){const f=this.get(e.depthTexture),p={};e.depthTexture.isArrayTexture&&(p.dimension=Yt.TwoD,p.arrayLayerCount=1,p.baseArrayLayer=e.activeCubeFace),a.depthStencilView=f.texture.createView(p)}s[o]=a,n.width=i.width,n.height=i.height,n.samples=i.samples,n.activeMipmapLevel=e.activeMipmapLevel,n.activeCubeFace=e.activeCubeFace,n.dimensions=i.dimensions}const l={colorAttachments:[]};for(let c=0;c<a.textureViews.length;c++){const u=a.textureViews[c];let h={r:0,g:0,b:0,a:1};c===0&&t.clearValue&&(h=t.clearValue),l.colorAttachments.push({view:u.view,depthSlice:u.depthSlice,resolveTarget:u.resolveTarget,loadOp:t.loadOp||ft.Load,storeOp:t.storeOp||Ii.Store,clearValue:h})}return a.depthStencilView&&(l.depthStencilAttachment={view:a.depthStencilView}),l}beginRender(e){const t=this.get(e),i=this.device,n=e.occlusionQueryCount;let s;n>0&&(t.currentOcclusionQuerySet&&t.currentOcclusionQuerySet.destroy(),t.currentOcclusionQueryBuffer&&t.currentOcclusionQueryBuffer.destroy(),t.currentOcclusionQuerySet=t.occlusionQuerySet,t.currentOcclusionQueryBuffer=t.occlusionQueryBuffer,t.currentOcclusionQueryObjects=t.occlusionQueryObjects,s=i.createQuerySet({type:"occlusion",count:n,label:`occlusionQuerySet_${e.id}`}),t.occlusionQuerySet=s,t.occlusionQueryIndex=0,t.occlusionQueryObjects=new Array(n),t.lastOcclusionObject=null);let o;e.textures===null?o=this._getDefaultRenderPassDescriptor():o=this._getRenderPassDescriptor(e,{loadOp:ft.Load}),this.initTimestampQuery(e,o),o.occlusionQuerySet=s;const a=o.depthStencilAttachment;if(e.textures!==null){const c=o.colorAttachments;for(let u=0;u<c.length;u++){const h=c[u];e.clearColor?(h.clearValue=u===0?e.clearColorValue:{r:0,g:0,b:0,a:1},h.loadOp=ft.Clear):h.loadOp=ft.Load,h.storeOp=Ii.Store}}else{const c=o.colorAttachments[0];e.clearColor?(c.clearValue=e.clearColorValue,c.loadOp=ft.Clear):c.loadOp=ft.Load,c.storeOp=Ii.Store}e.depth&&(e.clearDepth?(a.depthClearValue=e.clearDepthValue,a.depthLoadOp=ft.Clear):a.depthLoadOp=ft.Load,a.depthStoreOp=Ii.Store),e.stencil&&(e.clearStencil?(a.stencilClearValue=e.clearStencilValue,a.stencilLoadOp=ft.Clear):a.stencilLoadOp=ft.Load,a.stencilStoreOp=Ii.Store);const l=i.createCommandEncoder({label:"renderContext_"+e.id});if(this._isRenderCameraDepthArray(e)===!0){const c=e.camera.cameras;!t.layerDescriptors||t.layerDescriptors.length!==c.length?this._createDepthLayerDescriptors(e,t,o,c):this._updateDepthLayerDescriptors(e,t,c),t.bundleEncoders=[],t.bundleSets=[];for(let u=0;u<c.length;u++){const h=this.pipelineUtils.createBundleEncoder(e,"renderBundleArrayCamera_"+u),d={attributes:{},bindingGroups:[],pipeline:null,index:null};t.bundleEncoders.push(h),t.bundleSets.push(d)}t.currentPass=null}else{const c=l.beginRenderPass(o);if(t.currentPass=c,e.viewport&&this.updateViewport(e),e.scissor){const{x:u,y:h,width:d,height:f}=e.scissorValue;c.setScissorRect(u,h,d,f)}}t.descriptor=o,t.encoder=l,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.renderBundles=[]}_createDepthLayerDescriptors(e,t,i,n){const s=i.depthStencilAttachment;t.layerDescriptors=[];const o=this.get(e.depthTexture);o.viewCache||(o.viewCache=[]);for(let a=0;a<n.length;a++){const l={...i,colorAttachments:[{...i.colorAttachments[0],view:i.colorAttachments[a].view}]};if(i.depthStencilAttachment){const c=a;o.viewCache[c]||(o.viewCache[c]=o.texture.createView({dimension:Yt.TwoD,baseArrayLayer:a,arrayLayerCount:1})),l.depthStencilAttachment={view:o.viewCache[c],depthLoadOp:s.depthLoadOp||ft.Clear,depthStoreOp:s.depthStoreOp||Ii.Store,depthClearValue:s.depthClearValue||1},e.stencil&&(l.depthStencilAttachment.stencilLoadOp=s.stencilLoadOp,l.depthStencilAttachment.stencilStoreOp=s.stencilStoreOp,l.depthStencilAttachment.stencilClearValue=s.stencilClearValue)}else l.depthStencilAttachment={...s};t.layerDescriptors.push(l)}}_updateDepthLayerDescriptors(e,t,i){for(let n=0;n<i.length;n++){const s=t.layerDescriptors[n];if(s.depthStencilAttachment){const o=s.depthStencilAttachment;e.depth&&(e.clearDepth?(o.depthClearValue=e.clearDepthValue,o.depthLoadOp=ft.Clear):o.depthLoadOp=ft.Load),e.stencil&&(e.clearStencil?(o.stencilClearValue=e.clearStencilValue,o.stencilLoadOp=ft.Clear):o.stencilLoadOp=ft.Load)}}}finishRender(e){const t=this.get(e),i=e.occlusionQueryCount;t.renderBundles.length>0&&t.currentPass.executeBundles(t.renderBundles),i>t.occlusionQueryIndex&&t.currentPass.endOcclusionQuery();const n=t.encoder;if(this._isRenderCameraDepthArray(e)===!0){const s=[];for(let o=0;o<t.bundleEncoders.length;o++){const a=t.bundleEncoders[o];s.push(a.finish())}for(let o=0;o<t.layerDescriptors.length;o++)if(o<s.length){const a=t.layerDescriptors[o],l=n.beginRenderPass(a);if(e.viewport){const{x:c,y:u,width:h,height:d,minDepth:f,maxDepth:p}=e.viewportValue;l.setViewport(c,u,h,d,f,p)}if(e.scissor){const{x:c,y:u,width:h,height:d}=e.scissorValue;l.setScissorRect(c,u,h,d)}l.executeBundles([s[o]]),l.end()}}else t.currentPass&&t.currentPass.end();if(i>0){const s=i*8;let o=this.occludedResolveCache.get(s);o===void 0&&(o=this.device.createBuffer({size:s,usage:GPUBufferUsage.QUERY_RESOLVE|GPUBufferUsage.COPY_SRC}),this.occludedResolveCache.set(s,o));const a=this.device.createBuffer({size:s,usage:GPUBufferUsage.COPY_DST|GPUBufferUsage.MAP_READ});t.encoder.resolveQuerySet(t.occlusionQuerySet,0,i,o,0),t.encoder.copyBufferToBuffer(o,0,a,0,s),t.occlusionQueryBuffer=a,this.resolveOccludedAsync(e)}if(this.device.queue.submit([t.encoder.finish()]),e.textures!==null){const s=e.textures;for(let o=0;o<s.length;o++){const a=s[o];a.generateMipmaps===!0&&this.textureUtils.generateMipmaps(a)}}}isOccluded(e,t){const i=this.get(e);return i.occluded&&i.occluded.has(t)}async resolveOccludedAsync(e){const t=this.get(e),{currentOcclusionQueryBuffer:i,currentOcclusionQueryObjects:n}=t;if(i&&n){const s=new WeakSet;t.currentOcclusionQueryObjects=null,t.currentOcclusionQueryBuffer=null,await i.mapAsync(GPUMapMode.READ);const o=i.getMappedRange(),a=new BigUint64Array(o);for(let l=0;l<n.length;l++)a[l]===BigInt(0)&&s.add(n[l]);i.destroy(),t.occluded=s}}updateViewport(e){const{currentPass:t}=this.get(e),{x:i,y:n,width:s,height:o,minDepth:a,maxDepth:l}=e.viewportValue;t.setViewport(i,n,s,o,a,l)}getClearColor(){const e=super.getClearColor();return this.renderer.alpha===!0&&(e.r*=e.a,e.g*=e.a,e.b*=e.a),e}clear(e,t,i,n=null){const s=this.device,o=this.renderer;let a=[],l,c,u,h;if(e){const p=this.getClearColor();c={r:p.r,g:p.g,b:p.b,a:p.a}}if(n===null){u=o.depth,h=o.stencil;const p=this._getDefaultRenderPassDescriptor();if(e){a=p.colorAttachments;const _=a[0];_.clearValue=c,_.loadOp=ft.Clear,_.storeOp=Ii.Store}(u||h)&&(l=p.depthStencilAttachment)}else{u=n.depth,h=n.stencil;const p={loadOp:e?ft.Clear:ft.Load,clearValue:e?c:void 0};u&&(p.depthLoadOp=t?ft.Clear:ft.Load,p.depthClearValue=t?o.getClearDepth():void 0,p.depthStoreOp=Ii.Store),h&&(p.stencilLoadOp=i?ft.Clear:ft.Load,p.stencilClearValue=i?o.getClearStencil():void 0,p.stencilStoreOp=Ii.Store);const _=this._getRenderPassDescriptor(n,p);a=_.colorAttachments,l=_.depthStencilAttachment}u&&l&&(t?(l.depthLoadOp=ft.Clear,l.depthClearValue=o.getClearDepth(),l.depthStoreOp=Ii.Store):(l.depthLoadOp=ft.Load,l.depthStoreOp=Ii.Store)),h&&l&&(i?(l.stencilLoadOp=ft.Clear,l.stencilClearValue=o.getClearStencil(),l.stencilStoreOp=Ii.Store):(l.stencilLoadOp=ft.Load,l.stencilStoreOp=Ii.Store));const d=s.createCommandEncoder({label:"clear"});d.beginRenderPass({colorAttachments:a,depthStencilAttachment:l}).end(),s.queue.submit([d.finish()])}beginCompute(e){const t=this.get(e),i={label:"computeGroup_"+e.id};this.initTimestampQuery(e,i),t.cmdEncoderGPU=this.device.createCommandEncoder({label:"computeGroup_"+e.id}),t.passEncoderGPU=t.cmdEncoderGPU.beginComputePass(i)}compute(e,t,i,n,s=null){const o=this.get(t),{passEncoderGPU:a}=this.get(e),l=this.get(n).pipeline;this.pipelineUtils.setPipeline(a,l);for(let u=0,h=i.length;u<h;u++){const d=i[u],f=this.get(d);a.setBindGroup(u,f.group)}let c;if(s===null&&(s=t.count),typeof s=="number"){const u=s;if(o.dispatchSize===void 0||o.count!==u){o.dispatchSize=[0,1,1],o.count=u;const h=t.workgroupSize;let d=h[0];for(let _=1;_<h.length;_++)d*=h[_];const f=Math.ceil(u/d),p=this.device.limits.maxComputeWorkgroupsPerDimension;c=[f,1,1],f>p&&(c[0]=Math.min(f,p),c[1]=Math.ceil(f/p)),o.dispatchSize=c}c=o.dispatchSize}else c=s;a.dispatchWorkgroups(c[0],c[1]||1,c[2]||1)}finishCompute(e){const t=this.get(e);t.passEncoderGPU.end(),this.device.queue.submit([t.cmdEncoderGPU.finish()])}async waitForGPU(){await this.device.queue.onSubmittedWorkDone()}draw(e,t){const{object:i,material:n,context:s,pipeline:o}=e,a=e.getBindings(),l=this.get(s),c=this.get(o).pipeline,u=e.getIndex(),h=u!==null,d=e.getDrawParameters();if(d===null)return;const f=(_,g)=>{this.pipelineUtils.setPipeline(_,c),g.pipeline=c;const m=g.bindingGroups;for(let y=0,x=a.length;y<x;y++){const S=a[y],w=this.get(S);m[S.index]!==S.id&&(_.setBindGroup(S.index,w.group),m[S.index]=S.id)}if(h===!0&&g.index!==u){const y=this.get(u).buffer,x=u.array instanceof Uint16Array?Ja.Uint16:Ja.Uint32;_.setIndexBuffer(y,x),g.index=u}const b=e.getVertexBuffers();for(let y=0,x=b.length;y<x;y++){const S=b[y];if(g.attributes[y]!==S){const w=this.get(S).buffer;_.setVertexBuffer(y,w),g.attributes[y]=S}}s.stencil===!0&&n.stencilWrite===!0&&l.currentStencilRef!==n.stencilRef&&(_.setStencilReference(n.stencilRef),l.currentStencilRef=n.stencilRef)},p=(_,g)=>{if(f(_,g),i.isBatchedMesh===!0){const m=i._multiDrawStarts,b=i._multiDrawCounts,y=i._multiDrawCount,x=i._multiDrawInstances;x!==null&&Zi("THREE.WebGPUBackend: renderMultiDrawInstances has been deprecated and will be removed in r184. Append to renderMultiDraw arguments and use indirection.");for(let S=0;S<y;S++){const w=x?x[S]:1,M=w>1?0:S;h===!0?_.drawIndexed(b[S],w,m[S]/u.array.BYTES_PER_ELEMENT,0,M):_.draw(b[S],w,m[S],M),t.update(i,b[S],w)}}else if(h===!0){const{vertexCount:m,instanceCount:b,firstVertex:y}=d,x=e.getIndirect();if(x!==null){const S=this.get(x).buffer;_.drawIndexedIndirect(S,0)}else _.drawIndexed(m,b,y,0,0);t.update(i,m,b)}else{const{vertexCount:m,instanceCount:b,firstVertex:y}=d,x=e.getIndirect();if(x!==null){const S=this.get(x).buffer;_.drawIndirect(S,0)}else _.draw(m,b,y,0);t.update(i,m,b)}};if(e.camera.isArrayCamera&&e.camera.cameras.length>0){const _=this.get(e.camera),g=e.camera.cameras,m=e.getBindingGroup("cameraIndex");if(_.indexesGPU===void 0||_.indexesGPU.length!==g.length){const y=this.get(m),x=[],S=new Uint32Array([0,0,0,0]);for(let w=0,M=g.length;w<M;w++){S[0]=w;const R=this.bindingUtils.createBindGroupIndex(S,y.layout);x.push(R)}_.indexesGPU=x}const b=this.renderer.getPixelRatio();for(let y=0,x=g.length;y<x;y++){const S=g[y];if(i.layers.test(S.layers)){const w=S.viewport;let M=l.currentPass,R=l.currentSets;if(l.bundleEncoders){const T=l.bundleEncoders[y],E=l.bundleSets[y];M=T,R=E}w&&M.setViewport(Math.floor(w.x*b),Math.floor(w.y*b),Math.floor(w.width*b),Math.floor(w.height*b),s.viewportValue.minDepth,s.viewportValue.maxDepth),m&&_.indexesGPU&&(M.setBindGroup(m.index,_.indexesGPU[y]),R.bindingGroups[m.index]=m.id),p(M,R)}}}else if(l.currentPass){if(l.occlusionQuerySet!==void 0){const _=l.lastOcclusionObject;_!==i&&(_!==null&&_.occlusionTest===!0&&(l.currentPass.endOcclusionQuery(),l.occlusionQueryIndex++),i.occlusionTest===!0&&(l.currentPass.beginOcclusionQuery(l.occlusionQueryIndex),l.occlusionQueryObjects[l.occlusionQueryIndex]=i),l.lastOcclusionObject=i)}p(l.currentPass,l.currentSets)}}needsRenderUpdate(e){const t=this.get(e),{object:i,material:n}=e,s=this.utils,o=s.getSampleCountRenderContext(e.context),a=s.getCurrentColorSpace(e.context),l=s.getCurrentColorFormat(e.context),c=s.getCurrentDepthStencilFormat(e.context),u=s.getPrimitiveTopology(i,n);let h=!1;return(t.material!==n||t.materialVersion!==n.version||t.transparent!==n.transparent||t.blending!==n.blending||t.premultipliedAlpha!==n.premultipliedAlpha||t.blendSrc!==n.blendSrc||t.blendDst!==n.blendDst||t.blendEquation!==n.blendEquation||t.blendSrcAlpha!==n.blendSrcAlpha||t.blendDstAlpha!==n.blendDstAlpha||t.blendEquationAlpha!==n.blendEquationAlpha||t.colorWrite!==n.colorWrite||t.depthWrite!==n.depthWrite||t.depthTest!==n.depthTest||t.depthFunc!==n.depthFunc||t.stencilWrite!==n.stencilWrite||t.stencilFunc!==n.stencilFunc||t.stencilFail!==n.stencilFail||t.stencilZFail!==n.stencilZFail||t.stencilZPass!==n.stencilZPass||t.stencilFuncMask!==n.stencilFuncMask||t.stencilWriteMask!==n.stencilWriteMask||t.side!==n.side||t.alphaToCoverage!==n.alphaToCoverage||t.sampleCount!==o||t.colorSpace!==a||t.colorFormat!==l||t.depthStencilFormat!==c||t.primitiveTopology!==u||t.clippingContextCacheKey!==e.clippingContextCacheKey)&&(t.material=n,t.materialVersion=n.version,t.transparent=n.transparent,t.blending=n.blending,t.premultipliedAlpha=n.premultipliedAlpha,t.blendSrc=n.blendSrc,t.blendDst=n.blendDst,t.blendEquation=n.blendEquation,t.blendSrcAlpha=n.blendSrcAlpha,t.blendDstAlpha=n.blendDstAlpha,t.blendEquationAlpha=n.blendEquationAlpha,t.colorWrite=n.colorWrite,t.depthWrite=n.depthWrite,t.depthTest=n.depthTest,t.depthFunc=n.depthFunc,t.stencilWrite=n.stencilWrite,t.stencilFunc=n.stencilFunc,t.stencilFail=n.stencilFail,t.stencilZFail=n.stencilZFail,t.stencilZPass=n.stencilZPass,t.stencilFuncMask=n.stencilFuncMask,t.stencilWriteMask=n.stencilWriteMask,t.side=n.side,t.alphaToCoverage=n.alphaToCoverage,t.sampleCount=o,t.colorSpace=a,t.colorFormat=l,t.depthStencilFormat=c,t.primitiveTopology=u,t.clippingContextCacheKey=e.clippingContextCacheKey,h=!0),h}getRenderCacheKey(e){const{object:t,material:i}=e,n=this.utils,s=e.context;return[i.transparent,i.blending,i.premultipliedAlpha,i.blendSrc,i.blendDst,i.blendEquation,i.blendSrcAlpha,i.blendDstAlpha,i.blendEquationAlpha,i.colorWrite,i.depthWrite,i.depthTest,i.depthFunc,i.stencilWrite,i.stencilFunc,i.stencilFail,i.stencilZFail,i.stencilZPass,i.stencilFuncMask,i.stencilWriteMask,i.side,n.getSampleCountRenderContext(s),n.getCurrentColorSpace(s),n.getCurrentColorFormat(s),n.getCurrentDepthStencilFormat(s),n.getPrimitiveTopology(t,i),e.getGeometryCacheKey(),e.clippingContextCacheKey].join()}createSampler(e){this.textureUtils.createSampler(e)}destroySampler(e){this.textureUtils.destroySampler(e)}createDefaultTexture(e){this.textureUtils.createDefaultTexture(e)}createTexture(e,t){this.textureUtils.createTexture(e,t)}updateTexture(e,t){this.textureUtils.updateTexture(e,t)}generateMipmaps(e){this.textureUtils.generateMipmaps(e)}destroyTexture(e){this.textureUtils.destroyTexture(e)}async copyTextureToBuffer(e,t,i,n,s,o){return this.textureUtils.copyTextureToBuffer(e,t,i,n,s,o)}initTimestampQuery(e,t){if(!this.trackTimestamp)return;const i=e.isComputeNode?"compute":"render";this.timestampQueryPool[i]||(this.timestampQueryPool[i]=new F3(this.device,i,2048));const n=this.timestampQueryPool[i],s=n.allocateQueriesForContext(e);t.timestampWrites={querySet:n.querySet,beginningOfPassWriteIndex:s,endOfPassWriteIndex:s+1}}createNodeBuilder(e,t){return new R3(e,t)}createProgram(e){const t=this.get(e);t.module={module:this.device.createShaderModule({code:e.code,label:e.stage+(e.name!==""?`_${e.name}`:"")}),entryPoint:"main"}}destroyProgram(e){this.delete(e)}createRenderPipeline(e,t){this.pipelineUtils.createRenderPipeline(e,t)}createComputePipeline(e,t){this.pipelineUtils.createComputePipeline(e,t)}beginBundle(e){const t=this.get(e);t._currentPass=t.currentPass,t._currentSets=t.currentSets,t.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.currentPass=this.pipelineUtils.createBundleEncoder(e)}finishBundle(e,t){const i=this.get(e),s=i.currentPass.finish();this.get(t).bundleGPU=s,i.currentSets=i._currentSets,i.currentPass=i._currentPass}addBundle(e,t){this.get(e).renderBundles.push(this.get(t).bundleGPU)}createBindings(e,t,i,n){this.bindingUtils.createBindings(e,t,i,n)}updateBindings(e,t,i,n){this.bindingUtils.createBindings(e,t,i,n)}updateBinding(e){this.bindingUtils.updateBinding(e)}createIndexAttribute(e){let t=GPUBufferUsage.INDEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST;(e.isStorageBufferAttribute||e.isStorageInstancedBufferAttribute)&&(t|=GPUBufferUsage.STORAGE),this.attributeUtils.createAttribute(e,t)}createAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}createIndirectStorageAttribute(e){this.attributeUtils.createAttribute(e,GPUBufferUsage.STORAGE|GPUBufferUsage.INDIRECT|GPUBufferUsage.COPY_SRC|GPUBufferUsage.COPY_DST)}updateAttribute(e){this.attributeUtils.updateAttribute(e)}destroyAttribute(e){this.attributeUtils.destroyAttribute(e)}updateSize(){this.colorBuffer=this.textureUtils.getColorBuffer(),this.defaultRenderPassdescriptor=null}getMaxAnisotropy(){return 16}hasFeature(e){return this.device.features.has(e)}copyTextureToTexture(e,t,i=null,n=null,s=0,o=0){let a=0,l=0,c=0,u=0,h=0,d=0,f=e.image.width,p=e.image.height,_=1;i!==null&&(i.isBox3===!0?(u=i.min.x,h=i.min.y,d=i.min.z,f=i.max.x-i.min.x,p=i.max.y-i.min.y,_=i.max.z-i.min.z):(u=i.min.x,h=i.min.y,f=i.max.x-i.min.x,p=i.max.y-i.min.y,_=1)),n!==null&&(a=n.x,l=n.y,c=n.z||0);const g=this.device.createCommandEncoder({label:"copyTextureToTexture_"+e.id+"_"+t.id}),m=this.get(e).texture,b=this.get(t).texture;g.copyTextureToTexture({texture:m,mipLevel:s,origin:{x:u,y:h,z:d}},{texture:b,mipLevel:o,origin:{x:a,y:l,z:c}},[f,p,_]),this.device.queue.submit([g.finish()]),o===0&&t.generateMipmaps&&this.textureUtils.generateMipmaps(t)}copyFramebufferToTexture(e,t,i){const n=this.get(t);let s=null;t.renderTarget?e.isDepthTexture?s=this.get(t.depthTexture).texture:s=this.get(t.textures[0]).texture:e.isDepthTexture?s=this.textureUtils.getDepthBuffer(t.depth,t.stencil):s=this.context.getCurrentTexture();const o=this.get(e).texture;if(s.format!==o.format){console.error("WebGPUBackend: copyFramebufferToTexture: Source and destination formats do not match.",s.format,o.format);return}let a;if(n.currentPass?(n.currentPass.end(),a=n.encoder):a=this.device.createCommandEncoder({label:"copyFramebufferToTexture_"+e.id}),a.copyTextureToTexture({texture:s,origin:[i.x,i.y,0]},{texture:o},[i.z,i.w]),n.currentPass){const{descriptor:l}=n;for(let c=0;c<l.colorAttachments.length;c++)l.colorAttachments[c].loadOp=ft.Load;if(t.depth&&(l.depthStencilAttachment.depthLoadOp=ft.Load),t.stencil&&(l.depthStencilAttachment.stencilLoadOp=ft.Load),n.currentPass=a.beginRenderPass(l),n.currentSets={attributes:{},bindingGroups:[],pipeline:null,index:null},t.viewport&&this.updateViewport(t),t.scissor){const{x:c,y:u,width:h,height:d}=t.scissorValue;n.currentPass.setScissorRect(c,u,h,d)}}else this.device.queue.submit([a.finish()]);e.generateMipmaps&&this.textureUtils.generateMipmaps(e)}}class B3 extends U3{async init(e){await super.init(e);const t=this.parameters;let i;if(t.device===void 0){const o={powerPreference:t.powerPreference},a=await navigator.gpu.requestAdapter(o);if(a===null)throw new Error("WebGPUBackend: Unable to create WebGPU adapter.");const l=Object.values(Wh),c=[];for(const h of l)a.features.has(h)&&c.push(h);const u={requiredFeatures:c,requiredLimits:t.requiredLimits};i=await a.requestDevice(u)}else i=t.device;const n=t.context!==void 0?t.context:e.domElement.getContext("webgpu");this.device=i,this.context=n;const s=t.alpha?"premultiplied":"opaque";this.context.configure({device:this.device,format:P.BGRA8Unorm,usage:GPUTextureUsage.RENDER_ATTACHMENT|GPUTextureUsage.COPY_SRC,alphaMode:s,colorSpace:"rec2100-hlg",colorMetadata:{mode:"extended"}}),this.updateSize()}}class O3 extends HB{constructor(e={}){let t;e.forceWebGL?t=Sy:uT.isAvailable()?t=B3:(t=Sy,console.warn("THREE.WebGPURenderer: WebGPU is not available, running under WebGL2 backend."));const i=new t(e);super(i,e),this.isWebGPURenderer=!0}}let Xp,On,Xr,ur,mh;function k3(r,e){if(r==null){console.log("Model canvas is null!");return}const t=new VN;Xp=new td,t.load(e,function(o){mh=o.scene,mh.traverse(a=>{if(a instanceof fi&&a?.material?.type!=null){const l=new ns;ns.prototype.copy.call(l,a.material),a.material=l}}),mh.position.y=-1,Xp.add(mh)},function(o){console.log(o.loaded/o.total*100+"% loaded")},function(o){console.log("An error happened",o)}),uT.isAvailable()&&jh()?On=new O3({canvas:r,antialias:!0}):On=new s2({canvas:r,antialias:!0});const i=On.domElement.parentElement.clientWidth,n=On.domElement.parentElement.clientHeight;Xr=new Ei(40,i/n,.25,20),Xr.position.set(0,6,10),Xr.lookAt(0,0,0);const s=window.devicePixelRatio||1;On.setPixelRatio(s),On.setSize(i,n),On.setAnimationLoop(kS),On.setClearColor(0,0),ur=new MP(Xr,On.domElement),ur.autoRotate=!0,ur.autoRotateSpeed=.05,ur.minPolarAngle=0,ur.maxPolarAngle=Math.PI*.5,ur.maxDistance=18,ur.minDistance=4,window.addEventListener("resize",()=>{Xr.aspect=r.parentElement.clientWidth/r.parentElement.clientHeight,Xr.updateProjectionMatrix(),On.setSize(r.parentElement.clientWidth,r.parentElement.clientHeight)})}function kS(){setTimeout(function(){requestAnimationFrame(kS)},1e3/30),ur.update(),On.render(Xp,Xr)}const zl={red:0,green:0,blue:0};let Gl,Vl;function Ny(r){return fetch(r).then(e=>e.blob()).then(e=>createImageBitmap(e)).then(e=>{const{width:t,height:i}=e,s=new OffscreenCanvas(t,i).getContext("2d");return s.drawImage(e,0,0),s.getImageData(0,0,t,i)})}function Py(r,e,t){e!==void 0&&e!==0&&(r.width=e),t!==void 0&&t!==0&&(r.height=t);let i;return jh()?(r.configureHighDynamicRange({mode:"extended"}),i=XM(r),i!==null&&(i.imageSmoothingEnabled=!1)):(console.log("Canvas ist't HDR enabled"),i=r.getContext("2d")),i}function z3(r,e){if(!jh()){Ny(e).then(t=>{const i=Py(r,t.width,t.height);i.putImageData(t,0,0),i.font="bold 36px sans-serif",i.fillStyle="#ff0000",i.fillText("HDR not supported!",90,100),i.fillText("Image manipulation disabled",10,150)});return}Ny(e).then(t=>{if(Vl=Py(r,t.width,t.height),Vl!==null&&(Gl=mi.fromImageData(t),Gl!==null)){const i=Gl.getImageData();i!==null&&Vl.putImageData(i,0,0)}}),["red","green","blue"].forEach(t=>{const i=document.getElementById(`${t}Slider`);if(i){const n=document.querySelector(`label[for=${i.id}] span`);n&&(n.innerText=`${i.value}%`),zl[t]=Number(i.value),i.oninput=function(){const s=this.value,o=document.querySelector(`label[for=${this.id}] span`);if(o&&(o.innerText=`${s}%`),zl[t]=Number(s),Gl&&Vl){const a=Gl.clone();a.pixelCallback((c,u,h,d)=>{const f=c/50*zl.red,p=u/50*zl.green,_=h/50*zl.blue;return Uint16Array.from([f,p,_,d])});const l=a.getImageData();l!==null&&Vl.putImageData(l,0,0)}}}})}document.addEventListener("DOMContentLoaded",function(){const r=document.getElementById("hdr-check"),e=document.getElementById("hdr-canvas-check");qM()?r.classList.add("success"):r.classList.add("fail"),jh()?e.classList.add("success"):e.classList.add("fail");const t="glb/uranium.glb",i=document.getElementById("canvas-renderer");k3(i,t);const n="images/sample.jpeg",s=document.querySelector("#slider-canvas");z3(s,n)});
